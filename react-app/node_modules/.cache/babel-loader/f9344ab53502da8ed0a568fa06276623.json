{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ImagePage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImage, deleteOneImage } from \"../../store/image\";\nimport { createComment } from \"../../store/comment\";\nimport { XIcon, UserCircleIcon, HeartIcon, ChatIcon } from \"@heroicons/react/outline\";\nimport EditFormPage from \"../EditFormPage\";\nimport \"./ImagePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImagePage = props => {\n  _s();\n\n  var _getUser, _props$commentsArray;\n\n  const userId = useSelector(state => state.session.user.id);\n  const dispatch = useDispatch();\n  const history = use;\n  const [buttonPopup, setButtonPopup] = useState(0);\n  const body = document.body; // working with imagesPage file\n\n  const [contentB, setContentB] = useState(\"\");\n  const [editB, setEditB] = useState(false);\n  const [commentShowB, setCommentShowB] = useState(0);\n  const [commentIdB, setCommentIdB] = useState(-6);\n  useEffect(() => {\n    dispatch(getImage(props.image.id));\n  }, [dispatch, props.image.id]);\n\n  const handleClick = e => {\n    const imagePage = document.querySelector(\".image-page-body\");\n\n    if (e.target === imagePage) {\n      body.style.overflow = \"visible\";\n      props.setTrigger(0);\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener(\"click\", handleClick);\n  }, [handleClick]);\n\n  const getUser = userId => props.users.filter(user => user.id === userId)[0];\n\n  return props.trigger === props.image.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-page-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-page-con\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-page-left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image-page-image\",\n          src: `${props.image.url}`,\n          alt: \"user-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-page-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-header\",\n          children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n            className: \"image-page-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_getUser = getUser(props.image.user_id)) === null || _getUser === void 0 ? void 0 : _getUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), props.commentsArray && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-comment-container\",\n          children: (_props$commentsArray = props.commentsArray) === null || _props$commentsArray === void 0 ? void 0 : _props$commentsArray.map(comment => {\n            if (comment.image_id === props.image.id) {\n              var _getUser2;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-page-comment-header\",\n                children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                  className: \"image-page-comment-avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"image-page-username\",\n                  onClick: () => history.push(`/users/${comment.user_id}`),\n                  children: (_getUser2 = getUser(comment.user_id)) === null || _getUser2 === void 0 ? void 0 : _getUser2.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"commentPDiv\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: props.canEditComment(comment),\n                    children: [comment.content, /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        setEditB(true);\n                        props.setEditB(true);\n                        setCommentShowB(props.image.id);\n                        setCommentIdB(comment.id);\n                        setContentB(`${props.comments[comment.id].content}`);\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        props.onDeleteComment(props.image.id, comment.id, setContentB);\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this);\n            }\n\n            return \"\";\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-page-options-container\",\n            children: [/*#__PURE__*/_jsxDEV(HeartIcon, {\n              className: \"image-page-options-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChatIcon, {\n              className: \"image-page-options-icon\",\n              onClick: () => {\n                if (commentShowB === props.image.id) {\n                  setCommentShowB(0);\n                } else setCommentShowB(props.image.id);\n\n                setContentB(\"\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), editB === false && props.postCommentForm(props.image.id, props.onContentSubmit, contentB, setContentB), editB === true && props.editB && props.editCommentForm(props.image.id, commentIdB, props.onEditComment, contentB, setContentB)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), userId === props.image.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: props.image.id,\n            onClick: props.handleDelete,\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setButtonPopup(props.image.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditFormPage, {\n            trigger: buttonPopup,\n            setTrigger: setButtonPopup,\n            image: props.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"x-button-wrap\",\n          onClick: () => props.setTrigger(0),\n          children: /*#__PURE__*/_jsxDEV(XIcon, {\n            onClick: () => {\n              body.style.overflow = \"visible\";\n            },\n            className: \"image-page-close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this) : \"\";\n};\n\n_s(ImagePage, \"cYHVdDc6r00VzOY+WzToHOJRmMo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ImagePage;\nexport default ImagePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ImagePage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","getImage","deleteOneImage","createComment","XIcon","UserCircleIcon","HeartIcon","ChatIcon","EditFormPage","ImagePage","props","userId","state","session","user","id","dispatch","history","use","buttonPopup","setButtonPopup","body","document","contentB","setContentB","editB","setEditB","commentShowB","setCommentShowB","commentIdB","setCommentIdB","image","handleClick","e","imagePage","querySelector","target","style","overflow","setTrigger","addEventListener","getUser","users","filter","trigger","url","user_id","username","commentsArray","map","comment","image_id","push","canEditComment","content","comments","onDeleteComment","postCommentForm","onContentSubmit","editCommentForm","onEditComment","handleDelete"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImage, deleteOneImage } from \"../../store/image\";\nimport { createComment } from \"../../store/comment\";\nimport {\n  XIcon,\n  UserCircleIcon,\n  HeartIcon,\n  ChatIcon,\n} from \"@heroicons/react/outline\";\nimport EditFormPage from \"../EditFormPage\";\nimport \"./ImagePage.css\";\n\nconst ImagePage = (props) => {\n  const userId = useSelector((state) => state.session.user.id);\n  const dispatch = useDispatch();\n  const history = use\n\n  const [buttonPopup, setButtonPopup] = useState(0);\n\n  const body = document.body;\n\n\n  // working with imagesPage file\n  const [contentB, setContentB] = useState(\"\");\n  const [editB, setEditB] = useState(false)\n  const [commentShowB, setCommentShowB] = useState(0)\n  const [commentIdB, setCommentIdB] = useState(-6)\n\n\n  useEffect(() => {\n    dispatch(getImage(props.image.id));\n  }, [dispatch, props.image.id]);\n\n\n  const handleClick = (e) => {\n    const imagePage = document.querySelector(\".image-page-body\")\n    if (e.target === imagePage) {\n      body.style.overflow = \"visible\";\n      props.setTrigger(0)\n    }\n  };\n\n\n  useEffect(() => {\n    document.body.addEventListener(\"click\", handleClick);\n  }, [handleClick]);\n\n  const getUser = (userId) =>\n    props.users.filter((user) => user.id === userId)[0];\n\n  return props.trigger === props.image.id ? (\n    <div className=\"image-page-body\">\n      <div className=\"image-page-con\">\n        <div className=\"image-page-left\">\n          <img\n            className={\"image-page-image\"}\n            src={`${props.image.url}`}\n            alt=\"user-upload\"\n          ></img>\n        </div>\n        <div className=\"image-page-right\">\n          <div className=\"image-page-header\">\n            <UserCircleIcon className=\"image-page-avatar\" />\n            <p>{getUser(props.image.user_id)?.username}</p>\n          </div>\n          {props.commentsArray && (\n            <div className=\"image-page-comment-container\">\n              {props.commentsArray?.map((comment) => {\n                if (comment.image_id === props.image.id) {\n                  return (\n                    <div className=\"image-page-comment-header\">\n                      <UserCircleIcon className=\"image-page-comment-avatar\" />\n                      <p className=\"image-page-username\" onClick={() => history.push(`/users/${comment.user_id}`)}>\n                        {getUser(comment.user_id)?.username}\n                      </p>\n                      <div className=\"commentPDiv\">\n                        <p className={props.canEditComment(comment)}>\n                          {comment.content}\n                          <button\n                            onClick={() => {\n                              setEditB(true);\n                              props.setEditB(true);\n                              setCommentShowB(props.image.id);\n                              setCommentIdB(comment.id);\n                              setContentB(`${props.comments[comment.id].content}`);\n                            }}\n                          >\n                            Edit\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              props.onDeleteComment(props.image.id, comment.id, setContentB);\n                            }}\n                          >\n                            Delete\n                          </button>\n                        </p>\n                      </div>\n                    </div>\n                  );\n                }\n                return \"\";\n              })}\n            </div>\n          )}\n          <div className=\"image-page-footer\">\n            <div className=\"image-page-options-container\">\n              <HeartIcon className=\"image-page-options-icon\" />\n              <ChatIcon className=\"image-page-options-icon\"\n                onClick={() => {\n                  if (commentShowB === props.image.id) {\n                    setCommentShowB(0);\n                  } else setCommentShowB(props.image.id);\n                  setContentB(\"\");\n                }}\n              />\n            </div>\n            {editB === false\n              && props.postCommentForm(props.image.id, props.onContentSubmit, contentB, setContentB)}\n            {editB === true && props.editB\n              && props.editCommentForm(props.image.id, commentIdB, props.onEditComment, contentB, setContentB)}\n          </div>\n          {userId === props.image.user_id && (\n            <div>\n              <button className={props.image.id} onClick={props.handleDelete}>\n                delete\n              </button>\n              <button onClick={() => setButtonPopup(props.image.id)}>\n                Edit\n              </button>\n              <EditFormPage\n                trigger={buttonPopup}\n                setTrigger={setButtonPopup}\n                image={props.image}\n              />\n            </div>\n          )}\n          <button className=\"x-button-wrap\" onClick={() => props.setTrigger(0)}>\n            <XIcon\n              onClick={() => {\n                body.style.overflow = \"visible\";\n              }}\n              className=\"image-page-close\"\n            />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n};\n\nexport default ImagePage;\n"]},"metadata":{},"sourceType":"module"}