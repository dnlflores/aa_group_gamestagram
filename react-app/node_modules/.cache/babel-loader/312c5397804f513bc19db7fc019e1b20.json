{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ImagePage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImage, deleteOneImage } from \"../../store/image\";\nimport { XIcon, UserCircleIcon, HeartIcon, ChatIcon } from \"@heroicons/react/outline\";\nimport EditFormPage from \"../EditFormPage\";\nimport \"./ImagePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImagePage = props => {\n  _s();\n\n  var _getUser, _props$commentsArray;\n\n  const userId = useSelector(state => state.session.user.id);\n  const dispatch = useDispatch();\n  const [buttonPopup, setButtonPopup] = useState(0);\n  useEffect(() => {\n    dispatch(getImage(props.image.id));\n  }, [dispatch, props.image.id]);\n\n  const handleDelete = event => {\n    event.preventDefault();\n    dispatch(deleteOneImage(props.image));\n  };\n\n  const getUser = userId => props.users.filter(user => user.id === userId)[0];\n\n  return props.trigger === props.image.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-page-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-page-con\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-page-left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image-page-image\",\n          src: `${props.image.url}`,\n          alt: \"user-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-page-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-header\",\n          children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n            className: \"image-page-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_getUser = getUser(props.image.user_id)) === null || _getUser === void 0 ? void 0 : _getUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), props.commentsArray && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-comment-container\",\n          children: (_props$commentsArray = props.commentsArray) === null || _props$commentsArray === void 0 ? void 0 : _props$commentsArray.map(comment => {\n            if (comment.image_id === props.image.id) {\n              var _getUser2;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-page-comment-header\",\n                children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                  className: \"image-page-comment-avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"image-page-username\",\n                  children: (_getUser2 = getUser(comment.user_id)) === null || _getUser2 === void 0 ? void 0 : _getUser2.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"image-page-comment\",\n                  children: comment.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this);\n            }\n\n            return \"\";\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-options-container\",\n          children: [/*#__PURE__*/_jsxDEV(HeartIcon, {\n            className: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChatIcon, {\n            className: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), userId === props.image.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: props.image.id,\n            onClick: handleDelete,\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setButtonPopup(props.image.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditFormPage, {\n            trigger: buttonPopup,\n            setTrigger: setButtonPopup,\n            image: props.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"x-button-wrap\",\n          onClick: () => props.setTrigger(0),\n          children: /*#__PURE__*/_jsxDEV(XIcon, {\n            className: \"image-page-close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this) : \"\";\n};\n\n_s(ImagePage, \"LEBX2BQFts0FB6uLteBVrdZqZNw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ImagePage;\nexport default ImagePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ImagePage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","getImage","deleteOneImage","XIcon","UserCircleIcon","HeartIcon","ChatIcon","EditFormPage","ImagePage","props","userId","state","session","user","id","dispatch","buttonPopup","setButtonPopup","image","handleDelete","event","preventDefault","getUser","users","filter","trigger","url","user_id","username","commentsArray","map","comment","image_id","content","setTrigger"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImage, deleteOneImage } from \"../../store/image\";\nimport {\n  XIcon,\n  UserCircleIcon,\n  HeartIcon,\n  ChatIcon,\n} from \"@heroicons/react/outline\";\nimport EditFormPage from \"../EditFormPage\";\nimport \"./ImagePage.css\";\n\nconst ImagePage = (props) => {\n  const userId = useSelector((state) => state.session.user.id);\n  const dispatch = useDispatch();\n\n  const [buttonPopup, setButtonPopup] = useState(0);\n\n  useEffect(() => {\n    dispatch(getImage(props.image.id));\n  }, [dispatch, props.image.id]);\n\n  const handleDelete = (event) => {\n    event.preventDefault();\n    dispatch(deleteOneImage(props.image));\n  };\n\n  const getUser = (userId) =>\n    props.users.filter((user) => user.id === userId)[0];\n\n  return props.trigger === props.image.id ? (\n    <div className=\"image-page-body\">\n      <div className=\"image-page-con\">\n        <div className=\"image-page-left\">\n          <img\n            className={\"image-page-image\"}\n            src={`${props.image.url}`}\n            alt=\"user-upload\"\n          ></img>\n        </div>\n        <div className=\"image-page-right\">\n          <div className=\"image-page-header\">\n            <UserCircleIcon className=\"image-page-avatar\" />\n            <p>{getUser(props.image.user_id)?.username}</p>\n          </div>\n          {props.commentsArray && (\n            <div className=\"image-page-comment-container\">\n              {props.commentsArray?.map((comment) => {\n                if (comment.image_id === props.image.id) {\n                  return (\n                    <div className=\"image-page-comment-header\">\n                      <UserCircleIcon className=\"image-page-comment-avatar\" />\n                      <p className=\"image-page-username\">\n                        {getUser(comment.user_id)?.username}\n                      </p>\n                      <p className=\"image-page-comment\">{comment.content}</p>\n                    </div>\n                  );\n                }\n                return \"\";\n              })}\n            </div>\n          )}\n          <div className=\"image-page-options-container\">\n            <HeartIcon className=\"\"/>\n            <ChatIcon className=\"\"/>\n          </div>\n          {userId === props.image.user_id && (\n            <div>\n              <button className={props.image.id} onClick={handleDelete}>\n                delete\n              </button>\n              <button onClick={() => setButtonPopup(props.image.id)}>\n                Edit\n              </button>\n              <EditFormPage\n                trigger={buttonPopup}\n                setTrigger={setButtonPopup}\n                image={props.image}\n              />\n            </div>\n          )}\n          <button className=\"x-button-wrap\" onClick={() => props.setTrigger(0)}>\n            <XIcon className=\"image-page-close\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n};\n\nexport default ImagePage;\n"]},"metadata":{},"sourceType":"module"}