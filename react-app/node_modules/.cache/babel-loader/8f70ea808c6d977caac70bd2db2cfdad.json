{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/imagesPage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImages, deleteOneImage } from \"../../store/image\";\nimport { createComment } from \"../../store/comment\";\nimport EditFormPage from \"../EditFormPage\";\nimport NavBar from \"../Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ImagesPage() {\n  _s();\n\n  const userId = useSelector(state => state.session.user.id);\n  const dispatch = useDispatch();\n  const images = useSelector(state => state.images);\n  const imagesArr = Object.values(images);\n  const [buttonPopup, setButtonPopup] = useState(0);\n  useEffect(() => {\n    dispatch(getImages());\n  }, [dispatch]);\n\n  const handleDelete = e => {\n    e.preventDefault();\n    dispatch(deleteOneImage(images[e.target.className]));\n  };\n\n  const onCommentSubmit = e => {\n    e.preventDefault();\n    dispatch(createComment(images[e.target.className], comment));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: imagesArr.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: image.user_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: image.caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${image.url}`,\n            alt: \"user-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), userId === image.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: image.id,\n            onClick: handleDelete,\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setButtonPopup(image.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(EditFormPage, {\n            trigger: buttonPopup,\n            setTrigger: setButtonPopup,\n            image: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: onCommentSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Comment\",\n              value: comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, `${image.id}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ImagesPage, \"RVkbq6j925cUKOY+uKoLRmJxBoQ=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = ImagesPage;\nexport default ImagesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesPage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/imagesPage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","getImages","deleteOneImage","createComment","EditFormPage","NavBar","ImagesPage","userId","state","session","user","id","dispatch","images","imagesArr","Object","values","buttonPopup","setButtonPopup","handleDelete","e","preventDefault","target","className","onCommentSubmit","comment","map","image","user_id","caption","url"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImages, deleteOneImage } from \"../../store/image\";\nimport {createComment} from \"../../store/comment\"\nimport EditFormPage from \"../EditFormPage\";\nimport NavBar from \"../Navbar\";\n\nfunction ImagesPage() {\n  const userId = useSelector((state) => state.session.user.id);\n\n  const dispatch = useDispatch();\n  const images = useSelector((state) => state.images);\n  const imagesArr = Object.values(images);\n\n  const [buttonPopup, setButtonPopup] = useState(0);\n\n  useEffect(() => {\n    dispatch(getImages());\n  }, [dispatch]);\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    dispatch(deleteOneImage(images[e.target.className]));\n  };\n\n  const onCommentSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(createComment(images[e.target.className], comment))\n  }\n\n  return (\n    <>\n      <NavBar />\n      <ul>\n        {imagesArr.map((image) => (\n          <div key={`${image.id}`}>\n            <li>{image.user_id}</li>\n            <li>{image.caption}</li>\n            <li>\n              <img src={`${image.url}`} alt=\"user-upload\"></img>\n            </li>\n            {userId === image.user_id && (\n              <div>\n                <button className={image.id} onClick={handleDelete}>\n                  delete\n                </button>\n                <button onClick={() => setButtonPopup(image.id)}\n                  >Edit</button>\n                <EditFormPage\n                  trigger={buttonPopup}\n                  setTrigger={setButtonPopup}\n                  image={image}\n                />\n                <form onSubmit={onCommentSubmit}>\n                  <input placeholder=\"Comment\" value={comment}/>\n                  <button>comment</button>\n                </form>\n              </div>\n            )}\n          </div>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default ImagesPage;\n"]},"metadata":{},"sourceType":"module"}