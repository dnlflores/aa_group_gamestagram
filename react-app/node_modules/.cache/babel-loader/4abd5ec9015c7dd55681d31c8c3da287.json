{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ProfilePage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NavBar from \"../Navbar\"; // import ImagePage from \"../ImagePage\";\n// import EditFormPage from \"../EditFormPage\";\n\nimport { getUserImages } from \"../../store/image\";\nimport { getTheLikes } from \"../../store/likes\";\nimport { getComments } from \"../../store/comment\";\nimport { getFollowers, getFollowings, followUser, unfollowUser } from \"../../store/follow\";\nimport { useParams } from \"react-router-dom\";\nimport { UserCircleIcon, UserAddIcon, UserRemoveIcon } from \"@heroicons/react/outline\";\nimport \"./ProfilePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfilePage = props => {\n  _s();\n\n  const user = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n  const images = useSelector(state => state.images); // const likes = useSelector(state => state.likes);\n  // const comments = useSelector(state => state.comments);\n\n  const followings = useSelector(state => state.follows.followings);\n  const followers = useSelector(state => state.follows.followers); // const [imageButtonPopup, setImageButtonPopup] = useState(0);\n  // const [editButtonPopup, setEditButtonPopup] = useState(0);\n\n  const {\n    userId: profileId\n  } = useParams();\n  const userImages = Object.values(images).filter(image => image.user_id === +profileId);\n  const followingsArr = Object.values(followings || {});\n  const followersArr = Object.values(followers || {});\n  useEffect(() => {\n    dispatch(getUserImages(profileId));\n    dispatch(getTheLikes());\n    dispatch(getComments());\n    dispatch(getFollowings(profileId));\n    dispatch(getFollowers(profileId));\n  }, [dispatch, user, profileId]); // const handleDelete = event => {\n  //     event.preventDefault();\n  // };\n\n  const followProfileUser = profileId => {\n    dispatch(followUser(user.id, +profileId));\n  };\n\n  const unfollowProfileUser = profileId => {\n    dispatch(unfollowUser(user.id, +profileId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"profile-header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-avatar\",\n        children: /*#__PURE__*/_jsxDEV(UserCircleIcon, {\n          width: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-top-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), +profileId !== user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: followersArr.filter(profileUser => +profileUser.id === +user.id).length === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: event => followProfileUser(profileId),\n              children: /*#__PURE__*/_jsxDEV(UserAddIcon, {\n                width: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: event => unfollowProfileUser(profileId),\n              children: \"Unfollow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-middle-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [userImages.length, \" posts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [followersArr.length, \" followers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [followingsArr.length, \" following\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-bottom-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Description coming soon...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), userImages.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image.url,\n      alt: \"user_upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfilePage, \"eagcJk2iieMhh2/vOpnR40dk4jk=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector, useSelector, useParams];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ProfilePage/index.js"],"names":["useEffect","useDispatch","useSelector","NavBar","getUserImages","getTheLikes","getComments","getFollowers","getFollowings","followUser","unfollowUser","useParams","UserCircleIcon","UserAddIcon","UserRemoveIcon","ProfilePage","props","user","state","session","dispatch","images","followings","follows","followers","userId","profileId","userImages","Object","values","filter","image","user_id","followingsArr","followersArr","followProfileUser","id","unfollowProfileUser","username","profileUser","length","event","email","map","url"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NavBar from \"../Navbar\";\n// import ImagePage from \"../ImagePage\";\n// import EditFormPage from \"../EditFormPage\";\nimport { getUserImages } from \"../../store/image\";\nimport { getTheLikes } from \"../../store/likes\";\nimport { getComments } from \"../../store/comment\";\nimport {\n  getFollowers,\n  getFollowings,\n  followUser,\n  unfollowUser,\n} from \"../../store/follow\";\nimport { useParams } from \"react-router-dom\";\nimport { UserCircleIcon, UserAddIcon, UserRemoveIcon } from \"@heroicons/react/outline\";\nimport \"./ProfilePage.css\"\n\nconst ProfilePage = (props) => {\n  const user = useSelector((state) => state.session.user);\n  const dispatch = useDispatch();\n  const images = useSelector((state) => state.images);\n  // const likes = useSelector(state => state.likes);\n  // const comments = useSelector(state => state.comments);\n  const followings = useSelector((state) => state.follows.followings);\n  const followers = useSelector((state) => state.follows.followers);\n  // const [imageButtonPopup, setImageButtonPopup] = useState(0);\n  // const [editButtonPopup, setEditButtonPopup] = useState(0);\n  const { userId: profileId } = useParams();\n\n  const userImages = Object.values(images).filter(\n    (image) => image.user_id === +profileId\n  );\n  const followingsArr = Object.values(followings || {});\n  const followersArr = Object.values(followers || {});\n\n  useEffect(() => {\n    dispatch(getUserImages(profileId));\n    dispatch(getTheLikes());\n    dispatch(getComments());\n    dispatch(getFollowings(profileId));\n    dispatch(getFollowers(profileId));\n  }, [dispatch, user, profileId]);\n\n  // const handleDelete = event => {\n  //     event.preventDefault();\n\n  // };\n\n  const followProfileUser = (profileId) => {\n    dispatch(followUser(user.id, +profileId));\n  };\n\n  const unfollowProfileUser = (profileId) => {\n    dispatch(unfollowUser(user.id, +profileId));\n  };\n\n  return (\n    <div>\n      <NavBar />\n      <header className=\"profile-header-container\">\n        <div className=\"profile-avatar\">\n          <UserCircleIcon width={150} />\n        </div>\n        <div className=\"column\">\n          <div className=\"profile-top-row\">\n            <p>{user.username}</p>\n            {+profileId !== user.id ? (\n              <div>\n                {followersArr.filter(\n                  (profileUser) => +profileUser.id === +user.id\n                ).length === 0 ? (\n                  <button onClick={(event) => followProfileUser(profileId)}>\n                    <UserAddIcon width={24}/>\n                  </button>\n                ) : (\n                  <button onClick={(event) => unfollowProfileUser(profileId)}>\n                    Unfollow\n                  </button>\n                )}\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <div className=\"profile-middle-row\">\n            <p>{userImages.length} posts</p>\n            <p>{followersArr.length} followers</p>\n            <p>{followingsArr.length} following</p>\n          </div>\n          <div className=\"profile-bottom-row\">\n                <h1>{user.email}</h1>\n                <p>Description coming soon...</p>\n          </div>\n        </div>\n      </header>\n      {userImages.map((image) => (\n        <img src={image.url} alt=\"user_upload\"></img>\n      ))}\n    </div>\n  );\n};\n\nexport default ProfilePage;\n"]},"metadata":{},"sourceType":"module"}