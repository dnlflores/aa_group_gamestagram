{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/imagesPage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getImages, deleteOneImage } from \"../../store/image\";\nimport { getComments, createComment, editOneComment, deleteOneComment } from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\";\nimport EditFormPage from \"../EditFormPage\";\nimport ImagePage from \"../ImagePage\";\nimport NavBar from \"../Navbar\";\nimport { UserCircleIcon, HeartIcon, ChatIcon, DotsHorizontalIcon } from \"@heroicons/react/outline\";\nimport { HeartIcon as HeartIconFilled } from \"@heroicons/react/solid\";\nimport \"./imagesPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImagesPage() {\n  _s();\n\n  const userId = useSelector(state => state.session.user.id);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const images = useSelector(state => state.images);\n  const comments = useSelector(state => state.comments);\n  const imagesArr = Object.values(images);\n  const likes = useSelector(state => state.likes);\n  const likesArr = Object.values(likes);\n  const keys = Object.keys(likes);\n  const [imageButtonPopup, setImageButtonPopup] = useState(0);\n  const [editButtonPopup, setEditButtonPopup] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [commentShow, setCommentShow] = useState(0);\n  const [showOptions, setShowOptions] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [commentId, setCommentId] = useState(-2);\n  const commentsArray = Object.values(comments);\n  const body = document.body;\n  const likedImages = likesArr.filter(like => like.user_id === userId);\n  useEffect(() => {\n    dispatch(getImages());\n    dispatch(getTheLikes());\n    dispatch(getComments());\n\n    async function fetchData() {\n      const response = await fetch(\"/api/users/\");\n      const responseData = await response.json();\n      setUsers(responseData.users);\n    }\n\n    fetchData();\n  }, [dispatch]);\n\n  const handleDelete = e => {\n    e.preventDefault();\n    dispatch(deleteOneImage(images[e.target.className.split(\" \")[0]]));\n  };\n\n  const handleLike = e => {\n    e.preventDefault();\n    const image_id = e.target.className.split(\" \")[1];\n\n    if (keys.filter(key => likes[key].image_id === +image_id && likes[key].user_id === userId).length) {\n      dispatch(unOneLike(image_id));\n    } else dispatch(setOneLike(image_id));\n  };\n\n  const onContentSubmit = async e => {\n    e.preventDefault();\n    setCommentShow(0);\n    const comment = await dispatch(createComment(e.target.className, content));\n\n    if (comment) {\n      setContent(\"\");\n    }\n  };\n\n  const onEditComment = async e => {\n    e.preventDefault();\n    setCommentShow(0);\n    const str = e.target.className.split(\":\");\n    const image_id = str[0];\n    const comment_id = str[1];\n    await dispatch(editOneComment(+image_id, +comment_id, content));\n  };\n\n  const onDeleteComment = async (image_id, comment_id) => {\n    // e.preventDefault();\n    setCommentShow(0);\n    await dispatch(deleteOneComment(image_id, comment_id));\n  };\n\n  const handleEdit = imageId => {\n    setEditButtonPopup(imageId);\n    setShowOptions(false);\n  };\n\n  const getUser = userId => users.filter(user => user.id === userId)[0];\n\n  const checkIfLiked = imageId => {\n    for (let i = 0; i < likedImages.length; i++) {\n      if (+likedImages[i].image_id === +imageId) return true;\n    }\n\n    return false;\n  };\n\n  const canEditComment = comment => {\n    return \"editCom\".concat(String(comment.user_id === userId).toUpperCase());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"games-page-body\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"game-post-container\",\n        children: imagesArr.map((image, i) => {\n          var _getUser, _getUser2;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ind-post-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"game-post-header\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"game-post-ava-name\",\n                onClick: event => history.push(`/users/${image.user_id}`),\n                children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                  className: \"game-post-avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: (_getUser = getUser(image.user_id)) === null || _getUser === void 0 ? void 0 : _getUser.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"game-post-image\",\n                src: `${image.url}`,\n                alt: \"user-upload\",\n                onClick: event => {\n                  setImageButtonPopup(image.id);\n                  body.style.overflow = \"hidden\";\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ImagePage, {\n                trigger: imageButtonPopup,\n                setTrigger: setImageButtonPopup,\n                image: image,\n                commentsArray: commentsArray,\n                users: users\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-footer-icon-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `like-div ${image.id}`,\n                onClick: handleLike\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), checkIfLiked(image.id) ? /*#__PURE__*/_jsxDEV(HeartIconFilled, {\n                className: \"post-footer-icon liked-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(HeartIcon, {\n                className: \"post-footer-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ChatIcon, {\n                onClick: () => {\n                  if (commentShow === image.id) {\n                    setCommentShow(0);\n                  } else setCommentShow(image.id);\n\n                  setContent(\"\");\n                  setEdit(false);\n                },\n                className: \"post-footer-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"caption-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"caption-username\",\n                children: (_getUser2 = getUser(image.user_id)) === null || _getUser2 === void 0 ? void 0 : _getUser2.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"caption\",\n                children: image.caption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"games-view-comments\",\n              onClick: () => {\n                setImageButtonPopup(image.id);\n                body.style.overflow = \"hidden\";\n              },\n              children: \"View all comments...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), commentsArray === null || commentsArray === void 0 ? void 0 : commentsArray.splice(-3, 3).map((comment, index) => {\n              if (comment.image_id === image.id) {\n                var _getUser3;\n\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"games-comment-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"games-username\",\n                    children: (_getUser3 = getUser(comment.user_id)) === null || _getUser3 === void 0 ? void 0 : _getUser3.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    id: comment.id,\n                    className: canEditComment(comment),\n                    children: [comment.content, /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        setEdit(true);\n                        setCommentShow(image.id);\n                        setCommentId(comment.id);\n                        setContent(`${comments[comment.id].content}`);\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        onDeleteComment(image.id, comment.id);\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this);\n              }\n\n              return \"\";\n            }), commentShow === image.id && edit === false && /*#__PURE__*/_jsxDEV(\"form\", {\n              className: image.id,\n              onSubmit: onContentSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                autoFocus: true,\n                name: \"CommentAutoFocus\",\n                placeholder: \"Comment\",\n                value: content,\n                onChange: e => {\n                  setContent(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), commentShow === image.id && edit === true && /*#__PURE__*/_jsxDEV(\"form\", {\n              className: `${image.id}:${commentId}`,\n              onSubmit: onEditComment,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                autoFocus: true,\n                placeholder: \"Edit\",\n                value: content,\n                onChange: e => setContent(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"submit edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), userId === image.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(DotsHorizontalIcon, {\n                onClick: () => setShowOptions(!showOptions),\n                className: \"post-options-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(EditFormPage, {\n                trigger: editButtonPopup,\n                setTrigger: setEditButtonPopup,\n                image: image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), showOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-options\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `${image.id} post-option-delete`,\n                  onClick: handleDelete,\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(image.id),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Go to post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setShowOptions(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, `${image.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImagesPage, \"v7vYn392x8kIOd7Npqv4dYMDYXQ=\", false, function () {\n  return [useSelector, useHistory, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ImagesPage;\nexport default ImagesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesPage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/imagesPage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","useHistory","getImages","deleteOneImage","getComments","createComment","editOneComment","deleteOneComment","getTheLikes","setOneLike","unOneLike","EditFormPage","ImagePage","NavBar","UserCircleIcon","HeartIcon","ChatIcon","DotsHorizontalIcon","HeartIconFilled","ImagesPage","userId","state","session","user","id","history","dispatch","images","comments","imagesArr","Object","values","likes","likesArr","keys","imageButtonPopup","setImageButtonPopup","editButtonPopup","setEditButtonPopup","content","setContent","commentShow","setCommentShow","showOptions","setShowOptions","users","setUsers","edit","setEdit","commentId","setCommentId","commentsArray","body","document","likedImages","filter","like","user_id","fetchData","response","fetch","responseData","json","handleDelete","e","preventDefault","target","className","split","handleLike","image_id","key","length","onContentSubmit","comment","onEditComment","str","comment_id","onDeleteComment","handleEdit","imageId","getUser","checkIfLiked","i","canEditComment","concat","String","toUpperCase","map","image","event","push","username","url","style","overflow","caption","splice","index","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,mBAA1C;AACA,SACEC,WADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,gBAJF,QAKO,qBALP;AAMA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,QAAmD,mBAAnD;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SACEC,cADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,kBAJF,QAKO,0BALP;AAMA,SAASF,SAAS,IAAIG,eAAtB,QAA6C,wBAA7C;AACA,OAAO,kBAAP;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,MAAM,GAAGpB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,EAA/B,CAA1B;AACA,QAAMC,OAAO,GAAGxB,UAAU,EAA1B;AACA,QAAMyB,QAAQ,GAAG3B,WAAW,EAA5B;AACA,QAAM4B,MAAM,GAAG3B,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACM,MAAlB,CAA1B;AACA,QAAMC,QAAQ,GAAG5B,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACO,QAAlB,CAA5B;AACA,QAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcJ,MAAd,CAAlB;AACA,QAAMK,KAAK,GAAGhC,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACW,KAAlB,CAAzB;AACA,QAAMC,QAAQ,GAAGH,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAjB;AACA,QAAME,IAAI,GAAGJ,MAAM,CAACI,IAAP,CAAYF,KAAZ,CAAb;AACA,QAAM,CAACG,gBAAD,EAAmBC,mBAAnB,IAA0CtC,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAACuC,eAAD,EAAkBC,kBAAlB,IAAwCxC,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACyC,OAAD,EAAUC,UAAV,IAAwB1C,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC2C,WAAD,EAAcC,cAAd,IAAgC5C,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAAC6C,WAAD,EAAcC,cAAd,IAAgC9C,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAC+C,KAAD,EAAQC,QAAR,IAAoBhD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiD,IAAD,EAAOC,OAAP,IAAkBlD,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACmD,SAAD,EAAYC,YAAZ,IAA4BpD,QAAQ,CAAC,CAAC,CAAF,CAA1C;AACA,QAAMqD,aAAa,GAAGrB,MAAM,CAACC,MAAP,CAAcH,QAAd,CAAtB;AACA,QAAMwB,IAAI,GAAGC,QAAQ,CAACD,IAAtB;AAEA,QAAME,WAAW,GAAGrB,QAAQ,CAACsB,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiBrC,MAA3C,CAApB;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,QAAQ,CAACxB,SAAS,EAAV,CAAR;AACAwB,IAAAA,QAAQ,CAAClB,WAAW,EAAZ,CAAR;AACAkB,IAAAA,QAAQ,CAACtB,WAAW,EAAZ,CAAR;;AACA,mBAAesD,SAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,CAA5B;AACA,YAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAhB,MAAAA,QAAQ,CAACe,YAAY,CAAChB,KAAd,CAAR;AACD;;AACDa,IAAAA,SAAS;AACV,GAVQ,EAUN,CAAChC,QAAD,CAVM,CAAT;;AAYA,QAAMqC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAvC,IAAAA,QAAQ,CAACvB,cAAc,CAACwB,MAAM,CAACqC,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAD,CAAP,CAAf,CAAR;AACD,GAHD;;AAKA,QAAMC,UAAU,GAAIL,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMK,QAAQ,GAAGN,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAjB;;AAEA,QACElC,IAAI,CAACqB,MAAL,CACGgB,GAAD,IACEvC,KAAK,CAACuC,GAAD,CAAL,CAAWD,QAAX,KAAwB,CAACA,QAAzB,IAAqCtC,KAAK,CAACuC,GAAD,CAAL,CAAWd,OAAX,KAAuBrC,MAFhE,EAGEoD,MAJJ,EAKE;AACA9C,MAAAA,QAAQ,CAAChB,SAAS,CAAC4D,QAAD,CAAV,CAAR;AACD,KAPD,MAOO5C,QAAQ,CAACjB,UAAU,CAAC6D,QAAD,CAAX,CAAR;AACR,GAZD;;AAcA,QAAMG,eAAe,GAAG,MAAOT,CAAP,IAAa;AACnCA,IAAAA,CAAC,CAACC,cAAF;AACAvB,IAAAA,cAAc,CAAC,CAAD,CAAd;AAEA,UAAMgC,OAAO,GAAG,MAAMhD,QAAQ,CAACrB,aAAa,CAAC2D,CAAC,CAACE,MAAF,CAASC,SAAV,EAAqB5B,OAArB,CAAd,CAA9B;;AAEA,QAAImC,OAAJ,EAAa;AACXlC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GATD;;AAWA,QAAMmC,aAAa,GAAG,MAAOX,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACAvB,IAAAA,cAAc,CAAC,CAAD,CAAd;AACA,UAAMkC,GAAG,GAAGZ,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBC,KAAnB,CAAyB,GAAzB,CAAZ;AAEA,UAAME,QAAQ,GAAGM,GAAG,CAAC,CAAD,CAApB;AACA,UAAMC,UAAU,GAAGD,GAAG,CAAC,CAAD,CAAtB;AAEA,UAAMlD,QAAQ,CAACpB,cAAc,CAAC,CAACgE,QAAF,EAAY,CAACO,UAAb,EAAyBtC,OAAzB,CAAf,CAAd;AACD,GATD;;AAWA,QAAMuC,eAAe,GAAG,OAAOR,QAAP,EAAiBO,UAAjB,KAAgC;AACtD;AACAnC,IAAAA,cAAc,CAAC,CAAD,CAAd;AACA,UAAMhB,QAAQ,CAACnB,gBAAgB,CAAC+D,QAAD,EAAWO,UAAX,CAAjB,CAAd;AACD,GAJD;;AAMA,QAAME,UAAU,GAAIC,OAAD,IAAa;AAC9B1C,IAAAA,kBAAkB,CAAC0C,OAAD,CAAlB;AACApC,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAHD;;AAKA,QAAMqC,OAAO,GAAI7D,MAAD,IAAYyB,KAAK,CAACU,MAAN,CAAchC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAnC,EAA2C,CAA3C,CAA5B;;AAEA,QAAM8D,YAAY,GAAIF,OAAD,IAAa;AAChC,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7B,WAAW,CAACkB,MAAhC,EAAwCW,CAAC,EAAzC,EAA6C;AAC3C,UAAI,CAAC7B,WAAW,CAAC6B,CAAD,CAAX,CAAeb,QAAhB,KAA6B,CAACU,OAAlC,EAA2C,OAAO,IAAP;AAC5C;;AACD,WAAO,KAAP;AACD,GALD;;AAOA,QAAMI,cAAc,GAAIV,OAAD,IAAa;AAClC,WAAO,UAAUW,MAAV,CAAiBC,MAAM,CAACZ,OAAO,CAACjB,OAAR,KAAoBrC,MAArB,CAAN,CAAmCmE,WAAnC,EAAjB,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA,kBACG1D,SAAS,CAAC2D,GAAV,CAAc,CAACC,KAAD,EAAQN,CAAR;AAAA;;AAAA,8BACb;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,qCACE;AACE,gBAAA,SAAS,EAAC,oBADZ;AAEE,gBAAA,OAAO,EAAGO,KAAD,IAAWjE,OAAO,CAACkE,IAAR,CAAc,UAASF,KAAK,CAAChC,OAAQ,EAArC,CAFtB;AAAA,wCAIE,QAAC,cAAD;AAAgB,kBAAA,SAAS,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE;AAAA,wCAAKwB,OAAO,CAACQ,KAAK,CAAChC,OAAP,CAAZ,6CAAK,SAAwBmC;AAA7B;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAA,sCACE;AACE,gBAAA,SAAS,EAAC,iBADZ;AAEE,gBAAA,GAAG,EAAG,GAAEH,KAAK,CAACI,GAAI,EAFpB;AAGE,gBAAA,GAAG,EAAC,aAHN;AAIE,gBAAA,OAAO,EAAGH,KAAD,IAAW;AAClBtD,kBAAAA,mBAAmB,CAACqD,KAAK,CAACjE,EAAP,CAAnB;AACA4B,kBAAAA,IAAI,CAAC0C,KAAL,CAAWC,QAAX,GAAsB,QAAtB;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE,QAAC,SAAD;AACE,gBAAA,OAAO,EAAE5D,gBADX;AAEE,gBAAA,UAAU,EAAEC,mBAFd;AAGE,gBAAA,KAAK,EAAEqD,KAHT;AAIE,gBAAA,aAAa,EAAEtC,aAJjB;AAKE,gBAAA,KAAK,EAAEN;AALT;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eA4BE;AAAK,cAAA,SAAS,EAAC,4BAAf;AAAA,sCACE;AACE,gBAAA,SAAS,EAAG,YAAW4C,KAAK,CAACjE,EAAG,EADlC;AAEE,gBAAA,OAAO,EAAE6C;AAFX;AAAA;AAAA;AAAA;AAAA,sBADF,EAKGa,YAAY,CAACO,KAAK,CAACjE,EAAP,CAAZ,gBACC,QAAC,eAAD;AAAiB,gBAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,sBADD,gBAGC,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,sBARJ,eAUE,QAAC,QAAD;AACE,gBAAA,OAAO,EAAE,MAAM;AACb,sBAAIiB,WAAW,KAAKgD,KAAK,CAACjE,EAA1B,EAA8B;AAC5BkB,oBAAAA,cAAc,CAAC,CAAD,CAAd;AACD,mBAFD,MAEOA,cAAc,CAAC+C,KAAK,CAACjE,EAAP,CAAd;;AACPgB,kBAAAA,UAAU,CAAC,EAAD,CAAV;AACAQ,kBAAAA,OAAO,CAAC,KAAD,CAAP;AACD,iBAPH;AAQE,gBAAA,SAAS,EAAC;AARZ;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5BF,eAiDE;AAAI,cAAA,SAAS,EAAC,mBAAd;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,kBAAf;AAAA,uCACGiC,OAAO,CAACQ,KAAK,CAAChC,OAAP,CADV,8CACG,UAAwBmC;AAD3B;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAK,gBAAA,SAAS,EAAC,SAAf;AAAA,0BAA0BH,KAAK,CAACO;AAAhC;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjDF,eAuDE;AACE,cAAA,SAAS,EAAC,qBADZ;AAEE,cAAA,OAAO,EAAE,MAAM;AACb5D,gBAAAA,mBAAmB,CAACqD,KAAK,CAACjE,EAAP,CAAnB;AACA4B,gBAAAA,IAAI,CAAC0C,KAAL,CAAWC,QAAX,GAAsB,QAAtB;AACD,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvDF,EAgEG5C,aAhEH,aAgEGA,aAhEH,uBAgEGA,aAAa,CAAE8C,MAAf,CAAsB,CAAC,CAAvB,EAA0B,CAA1B,EAA6BT,GAA7B,CAAiC,CAACd,OAAD,EAAUwB,KAAV,KAAoB;AACpD,kBAAIxB,OAAO,CAACJ,QAAR,KAAqBmB,KAAK,CAACjE,EAA/B,EAAmC;AAAA;;AACjC,oCACE;AAAK,kBAAA,SAAS,EAAC,yBAAf;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,gBAAf;AAAA,2CACGyD,OAAO,CAACP,OAAO,CAACjB,OAAT,CADV,8CACG,UAA0BmC;AAD7B;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAG,oBAAA,EAAE,EAAElB,OAAO,CAAClD,EAAf;AAAmB,oBAAA,SAAS,EAAE4D,cAAc,CAACV,OAAD,CAA5C;AAAA,+BACGA,OAAO,CAACnC,OADX,eAEE;AACE,sBAAA,OAAO,EAAE,MAAM;AACbS,wBAAAA,OAAO,CAAC,IAAD,CAAP;AACAN,wBAAAA,cAAc,CAAC+C,KAAK,CAACjE,EAAP,CAAd;AACA0B,wBAAAA,YAAY,CAACwB,OAAO,CAAClD,EAAT,CAAZ;AACAgB,wBAAAA,UAAU,CAAE,GAAEZ,QAAQ,CAAC8C,OAAO,CAAClD,EAAT,CAAR,CAAqBe,OAAQ,EAAjC,CAAV;AACD,uBANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,eAYE;AACE,sBAAA,OAAO,EAAE,MAAM;AACbuC,wBAAAA,eAAe,CAACW,KAAK,CAACjE,EAAP,EAAWkD,OAAO,CAAClD,EAAnB,CAAf;AACD,uBAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAZF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AA2BD;;AACD,qBAAO,EAAP;AACD,aA/BA,CAhEH,EAgGGiB,WAAW,KAAKgD,KAAK,CAACjE,EAAtB,IAA4BuB,IAAI,KAAK,KAArC,iBACC;AAAM,cAAA,SAAS,EAAE0C,KAAK,CAACjE,EAAvB;AAA2B,cAAA,QAAQ,EAAEiD,eAArC;AAAA,sCACE;AACE,gBAAA,SAAS,MADX;AAEE,gBAAA,IAAI,EAAC,kBAFP;AAGE,gBAAA,WAAW,EAAC,SAHd;AAIE,gBAAA,KAAK,EAAElC,OAJT;AAKE,gBAAA,QAAQ,EAAGyB,CAAD,IAAO;AACfxB,kBAAAA,UAAU,CAACwB,CAAC,CAACE,MAAF,CAASiC,KAAV,CAAV;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjGJ,EA8GG1D,WAAW,KAAKgD,KAAK,CAACjE,EAAtB,IAA4BuB,IAAI,KAAK,IAArC,iBACC;AACE,cAAA,SAAS,EAAG,GAAE0C,KAAK,CAACjE,EAAG,IAAGyB,SAAU,EADtC;AAEE,cAAA,QAAQ,EAAE0B,aAFZ;AAAA,sCAIE;AACE,gBAAA,SAAS,MADX;AAEE,gBAAA,WAAW,EAAC,MAFd;AAGE,gBAAA,KAAK,EAAEpC,OAHT;AAIE,gBAAA,QAAQ,EAAGyB,CAAD,IAAOxB,UAAU,CAACwB,CAAC,CAACE,MAAF,CAASiC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,sBAJF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/GJ,EA4HG/E,MAAM,KAAKqE,KAAK,CAAChC,OAAjB,iBACC;AAAA,sCACE,QAAC,kBAAD;AACE,gBAAA,OAAO,EAAE,MAAMb,cAAc,CAAC,CAACD,WAAF,CAD/B;AAEE,gBAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE,QAAC,YAAD;AACE,gBAAA,OAAO,EAAEN,eADX;AAEE,gBAAA,UAAU,EAAEC,kBAFd;AAGE,gBAAA,KAAK,EAAEmD;AAHT;AAAA;AAAA;AAAA;AAAA,sBALF,EAUG9C,WAAW,iBACV;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACE;AACE,kBAAA,SAAS,EAAG,GAAE8C,KAAK,CAACjE,EAAG,qBADzB;AAEE,kBAAA,OAAO,EAAEuC,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAOE;AAAQ,kBAAA,OAAO,EAAE,MAAMgB,UAAU,CAACU,KAAK,CAACjE,EAAP,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF,eASE;AAAQ,kBAAA,OAAO,EAAE,MAAMoB,cAAc,CAAC,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7HJ;AAAA,aAA0C,GAAE6C,KAAK,CAACjE,EAAG,EAArD;AAAA;AAAA;AAAA;AAAA,kBADa;AAAA,SAAd;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqKD;;GAzQQL,U;UACQnB,W,EACCC,U,EACCF,W,EACFC,W,EACEA,W,EAEHA,W;;;KAPPmB,U;AA2QT,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getImages, deleteOneImage } from \"../../store/image\";\nimport {\n  getComments,\n  createComment,\n  editOneComment,\n  deleteOneComment,\n} from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\";\nimport EditFormPage from \"../EditFormPage\";\nimport ImagePage from \"../ImagePage\";\nimport NavBar from \"../Navbar\";\nimport {\n  UserCircleIcon,\n  HeartIcon,\n  ChatIcon,\n  DotsHorizontalIcon,\n} from \"@heroicons/react/outline\";\nimport { HeartIcon as HeartIconFilled } from \"@heroicons/react/solid\";\nimport \"./imagesPage.css\";\n\nfunction ImagesPage() {\n  const userId = useSelector((state) => state.session.user.id);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const images = useSelector((state) => state.images);\n  const comments = useSelector((state) => state.comments);\n  const imagesArr = Object.values(images);\n  const likes = useSelector((state) => state.likes);\n  const likesArr = Object.values(likes);\n  const keys = Object.keys(likes);\n  const [imageButtonPopup, setImageButtonPopup] = useState(0);\n  const [editButtonPopup, setEditButtonPopup] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [commentShow, setCommentShow] = useState(0);\n  const [showOptions, setShowOptions] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [commentId, setCommentId] = useState(-2);\n  const commentsArray = Object.values(comments);\n  const body = document.body;\n\n  const likedImages = likesArr.filter((like) => like.user_id === userId);\n\n  useEffect(() => {\n    dispatch(getImages());\n    dispatch(getTheLikes());\n    dispatch(getComments());\n    async function fetchData() {\n      const response = await fetch(\"/api/users/\");\n      const responseData = await response.json();\n      setUsers(responseData.users);\n    }\n    fetchData();\n  }, [dispatch]);\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    dispatch(deleteOneImage(images[e.target.className.split(\" \")[0]]));\n  };\n\n  const handleLike = (e) => {\n    e.preventDefault();\n    const image_id = e.target.className.split(\" \")[1];\n\n    if (\n      keys.filter(\n        (key) =>\n          likes[key].image_id === +image_id && likes[key].user_id === userId\n      ).length\n    ) {\n      dispatch(unOneLike(image_id));\n    } else dispatch(setOneLike(image_id));\n  };\n\n  const onContentSubmit = async (e) => {\n    e.preventDefault();\n    setCommentShow(0);\n\n    const comment = await dispatch(createComment(e.target.className, content));\n\n    if (comment) {\n      setContent(\"\");\n    }\n  };\n\n  const onEditComment = async (e) => {\n    e.preventDefault();\n    setCommentShow(0);\n    const str = e.target.className.split(\":\");\n\n    const image_id = str[0];\n    const comment_id = str[1];\n\n    await dispatch(editOneComment(+image_id, +comment_id, content));\n  };\n\n  const onDeleteComment = async (image_id, comment_id) => {\n    // e.preventDefault();\n    setCommentShow(0);\n    await dispatch(deleteOneComment(image_id, comment_id));\n  };\n\n  const handleEdit = (imageId) => {\n    setEditButtonPopup(imageId);\n    setShowOptions(false);\n  };\n\n  const getUser = (userId) => users.filter((user) => user.id === userId)[0];\n\n  const checkIfLiked = (imageId) => {\n    for (let i = 0; i < likedImages.length; i++) {\n      if (+likedImages[i].image_id === +imageId) return true;\n    }\n    return false;\n  };\n\n  const canEditComment = (comment) => {\n    return \"editCom\".concat(String(comment.user_id === userId).toUpperCase());\n  };\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"games-page-body\">\n        <ul className=\"game-post-container\">\n          {imagesArr.map((image, i) => (\n            <div className=\"ind-post-container\" key={`${image.id}`}>\n              <div className=\"game-post-header\">\n                <div\n                  className=\"game-post-ava-name\"\n                  onClick={(event) => history.push(`/users/${image.user_id}`)}\n                >\n                  <UserCircleIcon className=\"game-post-avatar\" />\n                  <li>{getUser(image.user_id)?.username}</li>\n                </div>\n              </div>\n              <li>\n                <img\n                  className=\"game-post-image\"\n                  src={`${image.url}`}\n                  alt=\"user-upload\"\n                  onClick={(event) => {\n                    setImageButtonPopup(image.id);\n                    body.style.overflow = \"hidden\";\n                  }}\n                ></img>\n                <ImagePage\n                  trigger={imageButtonPopup}\n                  setTrigger={setImageButtonPopup}\n                  image={image}\n                  commentsArray={commentsArray}\n                  users={users}\n                />\n              </li>\n              <div className=\"post-footer-icon-container\">\n                <div\n                  className={`like-div ${image.id}`}\n                  onClick={handleLike}\n                ></div>\n                {checkIfLiked(image.id) ? (\n                  <HeartIconFilled className=\"post-footer-icon liked-icon\" />\n                ) : (\n                  <HeartIcon className=\"post-footer-icon\" />\n                )}\n                <ChatIcon\n                  onClick={() => {\n                    if (commentShow === image.id) {\n                      setCommentShow(0);\n                    } else setCommentShow(image.id);\n                    setContent(\"\");\n                    setEdit(false);\n                  }}\n                  className=\"post-footer-icon\"\n                />\n              </div>\n              <li className=\"caption-container\">\n                <div className=\"caption-username\">\n                  {getUser(image.user_id)?.username}\n                </div>\n                <div className=\"caption\">{image.caption}</div>\n              </li>\n              <p\n                className=\"games-view-comments\"\n                onClick={() => {\n                  setImageButtonPopup(image.id);\n                  body.style.overflow = \"hidden\";\n                }}\n              >\n                View all comments...\n              </p>\n              {commentsArray?.splice(-3, 3).map((comment, index) => {\n                if (comment.image_id === image.id) {\n                  return (\n                    <div className=\"games-comment-container\">\n                      <div className=\"games-username\">\n                        {getUser(comment.user_id)?.username}\n                      </div>\n                      <p id={comment.id} className={canEditComment(comment)}>\n                        {comment.content}\n                        <button\n                          onClick={() => {\n                            setEdit(true);\n                            setCommentShow(image.id);\n                            setCommentId(comment.id);\n                            setContent(`${comments[comment.id].content}`);\n                          }}\n                        >\n                          Edit\n                        </button>\n                        <button\n                          onClick={() => {\n                            onDeleteComment(image.id, comment.id);\n                          }}\n                        >\n                          Delete\n                        </button>\n                      </p>\n                    </div>\n                  );\n                }\n                return \"\";\n              })}\n              {commentShow === image.id && edit === false && (\n                <form className={image.id} onSubmit={onContentSubmit}>\n                  <input\n                    autoFocus\n                    name=\"CommentAutoFocus\"\n                    placeholder=\"Comment\"\n                    value={content}\n                    onChange={(e) => {\n                      setContent(e.target.value);\n                    }}\n                  />\n                  <button>comment</button>\n                </form>\n              )}\n              {commentShow === image.id && edit === true && (\n                <form\n                  className={`${image.id}:${commentId}`}\n                  onSubmit={onEditComment}\n                >\n                  <input\n                    autoFocus\n                    placeholder=\"Edit\"\n                    value={content}\n                    onChange={(e) => setContent(e.target.value)}\n                  />\n                  <button>submit edit</button>\n                </form>\n              )}\n              {userId === image.user_id && (\n                <div>\n                  <DotsHorizontalIcon\n                    onClick={() => setShowOptions(!showOptions)}\n                    className=\"post-options-icon\"\n                  />\n                  <EditFormPage\n                    trigger={editButtonPopup}\n                    setTrigger={setEditButtonPopup}\n                    image={image}\n                  />\n                  {showOptions && (\n                    <div className=\"post-options\">\n                      <button\n                        className={`${image.id} post-option-delete`}\n                        onClick={handleDelete}\n                      >\n                        Delete\n                      </button>\n                      <button onClick={() => handleEdit(image.id)}>Edit</button>\n                      <button>Go to post</button>\n                      <button onClick={() => setShowOptions(false)}>\n                        Cancel\n                      </button>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n        </ul>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default ImagesPage;\n"]},"metadata":{},"sourceType":"module"}