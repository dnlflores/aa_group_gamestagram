{"ast":null,"code":"import { useSelector } from \"react-redux\";\nconst LOAD_USERS_TO_FOLLOW = \"follows/LOAD_USERS_TO_FOLLOW\";\n\nconst loadUsersToFollow = usersToFollow => ({\n  type: LOAD_USERS_TO_FOLLOW,\n  payload: usersToFollow\n});\n\nexport const getUsersToFollow = followingArr => async dispatch => {\n  const usersFetch = await fetch(\"/api/users/\");\n  const usersFetchData = await usersFetch.json();\n  const users = [usersFetchData.users];\n  const usersToFollow = [];\n  const followingSet = new Set();\n\n  for (let i = 0; i < followingArr.length; i++) {\n    const user = followingArr[i];\n    followingSet.add(user.id);\n  }\n\n  for (let i = 0; i < users.length; i++) {\n    const user = users[i];\n\n    if (!followingSet.has(user.id)) {\n      usersToFollow.push(user);\n    }\n  }\n\n  console.log(usersToFollow);\n  dispatch(loadUsersToFollow(usersToFollow));\n};\nexport default function usersToFollowReducer(state = {}, action) {\n  switch (action.type) {\n    case LOAD_USERS_TO_FOLLOW:\n      const loaderState = { ...state\n      };\n      console.log('        ', action.payload);\n      action.payload.forEach(thing => console.log());\n      return loaderState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/store/usersToFollow.js"],"names":["useSelector","LOAD_USERS_TO_FOLLOW","loadUsersToFollow","usersToFollow","type","payload","getUsersToFollow","followingArr","dispatch","usersFetch","fetch","usersFetchData","json","users","followingSet","Set","i","length","user","add","id","has","push","console","log","usersToFollowReducer","state","action","loaderState","forEach","thing"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,MAAMC,oBAAoB,GAAG,8BAA7B;;AAEA,MAAMC,iBAAiB,GAAIC,aAAD,KAAoB;AAC5CC,EAAAA,IAAI,EAAEH,oBADsC;AAE5CI,EAAAA,OAAO,EAAEF;AAFmC,CAApB,CAA1B;;AAKA,OAAO,MAAMG,gBAAgB,GAAIC,YAAD,IAAkB,MAAOC,QAAP,IAAoB;AACpE,QAAMC,UAAU,GAAG,MAAMC,KAAK,CAAC,aAAD,CAA9B;AACA,QAAMC,cAAc,GAAG,MAAMF,UAAU,CAACG,IAAX,EAA7B;AACA,QAAMC,KAAK,GAAG,CAACF,cAAc,CAACE,KAAhB,CAAd;AACA,QAAMV,aAAa,GAAG,EAAtB;AACA,QAAMW,YAAY,GAAG,IAAIC,GAAJ,EAArB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,YAAY,CAACU,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,UAAME,IAAI,GAAGX,YAAY,CAACS,CAAD,CAAzB;AACAF,IAAAA,YAAY,CAACK,GAAb,CAAiBD,IAAI,CAACE,EAAtB;AACD;;AACD,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAME,IAAI,GAAGL,KAAK,CAACG,CAAD,CAAlB;;AACA,QAAI,CAACF,YAAY,CAACO,GAAb,CAAiBH,IAAI,CAACE,EAAtB,CAAL,EAAgC;AAC9BjB,MAAAA,aAAa,CAACmB,IAAd,CAAmBJ,IAAnB;AACD;AACF;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYrB,aAAZ;AACAK,EAAAA,QAAQ,CAACN,iBAAiB,CAACC,aAAD,CAAlB,CAAR;AACD,CAlBM;AAoBP,eAAe,SAASsB,oBAAT,CAA8BC,KAAK,GAAG,EAAtC,EAA0CC,MAA1C,EAAkD;AAC/D,UAAQA,MAAM,CAACvB,IAAf;AACE,SAAKH,oBAAL;AACE,YAAM2B,WAAW,GAAG,EAAE,GAAGF;AAAL,OAApB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,MAAM,CAACtB,OAA/B;AACAsB,MAAAA,MAAM,CAACtB,OAAP,CAAewB,OAAf,CAAwBC,KAAD,IAAWP,OAAO,CAACC,GAAR,EAAlC;AACA,aAAOI,WAAP;;AACF;AACE,aAAOF,KAAP;AAPJ;AASD","sourcesContent":["import { useSelector } from \"react-redux\";\nconst LOAD_USERS_TO_FOLLOW = \"follows/LOAD_USERS_TO_FOLLOW\";\n\nconst loadUsersToFollow = (usersToFollow) => ({\n  type: LOAD_USERS_TO_FOLLOW,\n  payload: usersToFollow,\n});\n\nexport const getUsersToFollow = (followingArr) => async (dispatch) => {\n  const usersFetch = await fetch(\"/api/users/\");\n  const usersFetchData = await usersFetch.json();\n  const users = [usersFetchData.users];\n  const usersToFollow = [];\n  const followingSet = new Set();\n  for (let i = 0; i < followingArr.length; i++) {\n    const user = followingArr[i];\n    followingSet.add(user.id);\n  }\n  for (let i = 0; i < users.length; i++) {\n    const user = users[i];\n    if (!followingSet.has(user.id)) {\n      usersToFollow.push(user);\n    }\n  }\n  console.log(usersToFollow)\n  dispatch(loadUsersToFollow(usersToFollow));\n};\n\nexport default function usersToFollowReducer(state = {}, action) {\n  switch (action.type) {\n    case LOAD_USERS_TO_FOLLOW:\n      const loaderState = { ...state };\n      console.log('        ', action.payload)\n      action.payload.forEach((thing) => console.log())\n      return loaderState;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}