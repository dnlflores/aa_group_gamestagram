{"ast":null,"code":"import { useSelector } from \"react-redux\";\nconst LOAD_USERS_TO_FOLLOW = \"follows/LOAD_USERS_TO_FOLLOW\"; // const loadUsersToFollow = () => ({\n//   type: LOAD_USERS_TO_FOLLOW,\n//   payload: usersToFollow,\n// });\n\nexport const getUsersToFollow = () => {\n  var _s = $RefreshSig$();\n\n  return _s(async dispatch => {\n    _s();\n\n    const usersFetch = await fetch(\"/api/users/\");\n    const usersFetchData = await usersFetch.json();\n    const users = [usersFetchData.users];\n    const following = useSelector(state => state.follows.followings);\n    const followingArr = Object.values(following || {});\n    const usersToFollow = [];\n    const followingSet = new Set();\n\n    for (let i = 0; i < followingArr.length; i++) {\n      const user = followingArr[i];\n      followingSet.add(user.id);\n    }\n\n    for (let i = 0; i < users.length; i++) {\n      const user = users[i];\n\n      if (!followingSet.has(user.id)) {\n        usersToFollow.push(user);\n      }\n    }\n\n    return loadUsersToFollow(usersToFollow);\n  }, \"xlE7KZN85nhFkz+vfEruAM7vbgE=\", false, function () {\n    return [useSelector];\n  });\n};\nexport default function usersToFollowReducer(state = {}, action) {\n  var _action$payload;\n\n  switch (action.type) {\n    case LOAD_USERS_TO_FOLLOW:\n      const loaderState = { ...state,\n        usersToFollow: {}\n      };\n      (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.forEach(user => loaderState.usersToFollow[user.id] = user);\n      return loaderState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/store/usersToFollow.js"],"names":["useSelector","LOAD_USERS_TO_FOLLOW","getUsersToFollow","dispatch","usersFetch","fetch","usersFetchData","json","users","following","state","follows","followings","followingArr","Object","values","usersToFollow","followingSet","Set","i","length","user","add","id","has","push","loadUsersToFollow","usersToFollowReducer","action","type","loaderState","payload","forEach"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,MAAMC,oBAAoB,GAAG,8BAA7B,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAG;AAAA;;AAAA,YAAM,MAAOC,QAAP,IAAoB;AAAA;;AACxD,UAAMC,UAAU,GAAG,MAAMC,KAAK,CAAC,aAAD,CAA9B;AACA,UAAMC,cAAc,GAAG,MAAMF,UAAU,CAACG,IAAX,EAA7B;AACA,UAAMC,KAAK,GAAG,CAACF,cAAc,CAACE,KAAhB,CAAd;AAEA,UAAMC,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,UAA1B,CAA7B;AACA,UAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcN,SAAS,IAAI,EAA3B,CAArB;AACA,UAAMO,aAAa,GAAG,EAAtB;AACA,UAAMC,YAAY,GAAG,IAAIC,GAAJ,EAArB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,YAAY,CAACO,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,YAAME,IAAI,GAAGR,YAAY,CAACM,CAAD,CAAzB;AACAF,MAAAA,YAAY,CAACK,GAAb,CAAiBD,IAAI,CAACE,EAAtB;AACD;;AACD,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACY,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAME,IAAI,GAAGb,KAAK,CAACW,CAAD,CAAlB;;AACA,UAAI,CAACF,YAAY,CAACO,GAAb,CAAiBH,IAAI,CAACE,EAAtB,CAAL,EAAgC;AAC9BP,QAAAA,aAAa,CAACS,IAAd,CAAmBJ,IAAnB;AACD;AACF;;AACD,WAAOK,iBAAiB,CAACV,aAAD,CAAxB;AACD,GApB+B;AAAA,YAKZhB,WALY;AAAA;AAAA,CAAzB;AAsBP,eAAe,SAAS2B,oBAAT,CAA8BjB,KAAK,GAAG,EAAtC,EAA0CkB,MAA1C,EAAkD;AAAA;;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK5B,oBAAL;AACE,YAAM6B,WAAW,GAAG,EAAE,GAAGpB,KAAL;AAAYM,QAAAA,aAAa,EAAE;AAA3B,OAApB;AACA,yBAAAY,MAAM,CAACG,OAAP,oEAAgBC,OAAhB,CACGX,IAAD,IAAWS,WAAW,CAACd,aAAZ,CAA0BK,IAAI,CAACE,EAA/B,IAAqCF,IADlD;AAGA,aAAOS,WAAP;;AACF;AACE,aAAOpB,KAAP;AARJ;AAUD","sourcesContent":["import { useSelector } from \"react-redux\";\nconst LOAD_USERS_TO_FOLLOW = \"follows/LOAD_USERS_TO_FOLLOW\";\n\n// const loadUsersToFollow = () => ({\n//   type: LOAD_USERS_TO_FOLLOW,\n//   payload: usersToFollow,\n// });\n\nexport const getUsersToFollow = () => async (dispatch) => {\n  const usersFetch = await fetch(\"/api/users/\");\n  const usersFetchData = await usersFetch.json();\n  const users = [usersFetchData.users];\n\n  const following = useSelector((state) => state.follows.followings);\n  const followingArr = Object.values(following || {});\n  const usersToFollow = [];\n  const followingSet = new Set();\n  for (let i = 0; i < followingArr.length; i++) {\n    const user = followingArr[i];\n    followingSet.add(user.id);\n  }\n  for (let i = 0; i < users.length; i++) {\n    const user = users[i];\n    if (!followingSet.has(user.id)) {\n      usersToFollow.push(user);\n    }\n  }\n  return loadUsersToFollow(usersToFollow);\n};\n\nexport default function usersToFollowReducer(state = {}, action) {\n  switch (action.type) {\n    case LOAD_USERS_TO_FOLLOW:\n      const loaderState = { ...state, usersToFollow: {} };\n      action.payload?.forEach(\n        (user) => (loaderState.usersToFollow[user.id] = user)\n      );\n      return loaderState;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}