{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ImagePage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImage, deleteOneImage } from \"../../store/image\";\nimport { createComment } from \"../../store/comment\";\nimport { XIcon, UserCircleIcon, HeartIcon, ChatIcon } from \"@heroicons/react/outline\";\nimport EditFormPage from \"../EditFormPage\";\nimport \"./ImagePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImagePage = props => {\n  _s();\n\n  var _getUser, _props$commentsArray;\n\n  const userId = useSelector(state => state.session.user.id);\n  const dispatch = useDispatch();\n  const [buttonPopup, setButtonPopup] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const body = document.body;\n  useEffect(() => {\n    dispatch(getImage(props.image.id));\n  }, [dispatch, props.image.id]);\n\n  const handleDelete = event => {\n    event.preventDefault();\n    dispatch(deleteOneImage(props.image));\n  };\n\n  const onContentSubmit = async e => {\n    e.preventDefault();\n    const comment = await dispatch(createComment(e.target.className, content));\n\n    if (comment) {\n      setContent(\"\");\n    }\n  };\n\n  const handleClick = e => {\n    const imagePage = document.querySelector(\".image-page-body\");\n\n    if (e.target === imagePage) {\n      body.style.overflow = \"visible\";\n      imagePage.style.display = \"none\"; // imagePage.style.display = \"flex\";\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener(\"click\", handleClick);\n  }, [handleClick]);\n  useEffect(() => {});\n\n  const getUser = userId => props.users.filter(user => user.id === userId)[0];\n\n  return props.trigger === props.image.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-page-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-page-con\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-page-left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image-page-image\",\n          src: `${props.image.url}`,\n          alt: \"user-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-page-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-header\",\n          children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n            className: \"image-page-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_getUser = getUser(props.image.user_id)) === null || _getUser === void 0 ? void 0 : _getUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), props.commentsArray && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-comment-container\",\n          children: (_props$commentsArray = props.commentsArray) === null || _props$commentsArray === void 0 ? void 0 : _props$commentsArray.map(comment => {\n            if (comment.image_id === props.image.id) {\n              var _getUser2;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-page-comment-header\",\n                children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                  className: \"image-page-comment-avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"image-page-username\",\n                  children: (_getUser2 = getUser(comment.user_id)) === null || _getUser2 === void 0 ? void 0 : _getUser2.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"image-page-comment\",\n                  children: comment.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this);\n            }\n\n            return \"\";\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-page-options-container\",\n            children: [/*#__PURE__*/_jsxDEV(HeartIcon, {\n              className: \"image-page-options-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChatIcon, {\n              className: \"image-page-options-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: props.image.id,\n            id: \"form-comment-con\",\n            onSubmit: onContentSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"image-page-comment-input\",\n              placeholder: \"Add a comment...\",\n              value: content,\n              onChange: e => setContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"image-page-comment-submit\",\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), userId === props.image.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: props.image.id,\n            onClick: handleDelete,\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setButtonPopup(props.image.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditFormPage, {\n            trigger: buttonPopup,\n            setTrigger: setButtonPopup,\n            image: props.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"x-button-wrap\",\n          onClick: () => props.setTrigger(0),\n          children: /*#__PURE__*/_jsxDEV(XIcon, {\n            onClick: () => {\n              body.style.overflow = \"visible\";\n            },\n            className: \"image-page-close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this) : \"\";\n};\n\n_s(ImagePage, \"htjQZUdPsySeOI07OrJAkRFy52k=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ImagePage;\nexport default ImagePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ImagePage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","getImage","deleteOneImage","createComment","XIcon","UserCircleIcon","HeartIcon","ChatIcon","EditFormPage","ImagePage","props","userId","state","session","user","id","dispatch","buttonPopup","setButtonPopup","content","setContent","body","document","image","handleDelete","event","preventDefault","onContentSubmit","e","comment","target","className","handleClick","imagePage","querySelector","style","overflow","display","addEventListener","getUser","users","filter","trigger","url","user_id","username","commentsArray","map","image_id","value","setTrigger"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImage, deleteOneImage } from \"../../store/image\";\nimport { createComment } from \"../../store/comment\";\nimport {\n  XIcon,\n  UserCircleIcon,\n  HeartIcon,\n  ChatIcon,\n} from \"@heroicons/react/outline\";\nimport EditFormPage from \"../EditFormPage\";\nimport \"./ImagePage.css\";\n\nconst ImagePage = (props) => {\n  const userId = useSelector((state) => state.session.user.id);\n  const dispatch = useDispatch();\n\n  const [buttonPopup, setButtonPopup] = useState(0);\n  const [content, setContent] = useState(\"\");\n\n  const body = document.body;\n\n  useEffect(() => {\n    dispatch(getImage(props.image.id));\n  }, [dispatch, props.image.id]);\n\n  const handleDelete = (event) => {\n    event.preventDefault();\n    dispatch(deleteOneImage(props.image));\n  };\n\n  const onContentSubmit = async (e) => {\n    e.preventDefault();\n\n    const comment = await dispatch(createComment(e.target.className, content));\n\n    if (comment) {\n      setContent(\"\");\n    }\n  };\n\n  const handleClick = (e) => {\n    const imagePage = document.querySelector(\".image-page-body\")\n    if (e.target === imagePage) {\n      body.style.overflow = \"visible\";\n      imagePage.style.display = \"none\";\n      // imagePage.style.display = \"flex\";\n    }\n  };\n  useEffect(() => {\n    document.body.addEventListener(\"click\", handleClick);\n  }, [handleClick]);\n  useEffect(() => {\n    \n  })\n\n  const getUser = (userId) =>\n    props.users.filter((user) => user.id === userId)[0];\n\n  return props.trigger === props.image.id ? (\n    <div className=\"image-page-body\">\n      <div className=\"image-page-con\">\n        <div className=\"image-page-left\">\n          <img\n            className={\"image-page-image\"}\n            src={`${props.image.url}`}\n            alt=\"user-upload\"\n          ></img>\n        </div>\n        <div className=\"image-page-right\">\n          <div className=\"image-page-header\">\n            <UserCircleIcon className=\"image-page-avatar\" />\n            <p>{getUser(props.image.user_id)?.username}</p>\n          </div>\n          {props.commentsArray && (\n            <div className=\"image-page-comment-container\">\n              {props.commentsArray?.map((comment) => {\n                if (comment.image_id === props.image.id) {\n                  return (\n                    <div className=\"image-page-comment-header\">\n                      <UserCircleIcon className=\"image-page-comment-avatar\" />\n                      <p className=\"image-page-username\">\n                        {getUser(comment.user_id)?.username}\n                      </p>\n                      <p className=\"image-page-comment\">{comment.content}</p>\n                    </div>\n                  );\n                }\n                return \"\";\n              })}\n            </div>\n          )}\n          <div className=\"image-page-footer\">\n            <div className=\"image-page-options-container\">\n              <HeartIcon className=\"image-page-options-icon\" />\n              <ChatIcon className=\"image-page-options-icon\" />\n            </div>\n            <form\n              className={props.image.id}\n              id=\"form-comment-con\"\n              onSubmit={onContentSubmit}\n            >\n              <input\n                className=\"image-page-comment-input\"\n                placeholder=\"Add a comment...\"\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n              />\n              <button className=\"image-page-comment-submit\">Post</button>\n            </form>\n          </div>\n          {userId === props.image.user_id && (\n            <div>\n              <button className={props.image.id} onClick={handleDelete}>\n                delete\n              </button>\n              <button onClick={() => setButtonPopup(props.image.id)}>\n                Edit\n              </button>\n              <EditFormPage\n                trigger={buttonPopup}\n                setTrigger={setButtonPopup}\n                image={props.image}\n              />\n            </div>\n          )}\n          <button className=\"x-button-wrap\" onClick={() => props.setTrigger(0)}>\n            <XIcon\n              onClick={() => {\n                body.style.overflow = \"visible\";\n              }}\n              className=\"image-page-close\"\n            />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n};\n\nexport default ImagePage;\n"]},"metadata":{},"sourceType":"module"}