{"ast":null,"code":"const GET_LIKES = 'likes/GET_LIKES';\nconst SET_LIKE = 'likes/SET_LIKE';\nconst UN_LIKE = 'likes/UN_LIKE';\n\nconst getLike = likes => ({\n  type: GET_LIKES,\n  payload: likes\n});\n\nconst setLike = likes => ({\n  type: SET_LIKE,\n  payload: likes\n});\n\nconst unLike = likes => ({\n  type: UN_LIKE,\n  payload: likes\n});\n\nexport const getTheLikes = () => async dispatch => {\n  const response = await fetch('/api/likes');\n\n  if (response.ok) {\n    const likes = await response.json();\n    dispatch(getLike(likes));\n  }\n};\nexport const setOneLike = image_id => async dispatch => {\n  const response = await fetch(`/api/likes/${image_id}`, {\n    method: 'POST'\n  });\n\n  if (response.ok) {\n    const likes = await response.json();\n    dispatch(setLike(likes));\n  }\n};\nexport const unOneLike = image_id => async dispatch => {\n  const response = await fetch(`/api/likes/${image_id}`, {\n    method: 'DELETE'\n  });\n  console.log('response ok', response.ok);\n\n  if (response.ok) {\n    console.log('made it here');\n    const unlike = await response.json();\n    dispatch(unLike(unlike));\n  }\n};\nexport default function likeReducer(state = {}, action) {\n  var _action$payload$likes;\n\n  switch (action.type) {\n    case GET_LIKES:\n      const newState = {};\n      (_action$payload$likes = action.payload.likes) === null || _action$payload$likes === void 0 ? void 0 : _action$payload$likes.forEach(like => newState[like.id] = like);\n      return newState;\n\n    case SET_LIKE:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case UN_LIKE:\n      const deleting = { ...state\n      };\n      delete deleting[action.payload.id];\n      return deleting;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/store/likes.js"],"names":["GET_LIKES","SET_LIKE","UN_LIKE","getLike","likes","type","payload","setLike","unLike","getTheLikes","dispatch","response","fetch","ok","json","setOneLike","image_id","method","unOneLike","console","log","unlike","likeReducer","state","action","newState","forEach","like","id","deleting"],"mappings":"AAAA,MAAMA,SAAS,GAAG,iBAAlB;AACA,MAAMC,QAAQ,GAAG,gBAAjB;AACA,MAAMC,OAAO,GAAG,eAAhB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,KAAK;AACtBC,EAAAA,IAAI,EAAEL,SADgB;AAEtBM,EAAAA,OAAO,EAAEF;AAFa,CAAL,CAArB;;AAKA,MAAMG,OAAO,GAAGH,KAAK,KAAK;AACtBC,EAAAA,IAAI,EAAEJ,QADgB;AAEtBK,EAAAA,OAAO,EAAEF;AAFa,CAAL,CAArB;;AAKA,MAAMI,MAAM,GAAGJ,KAAK,KAAK;AACrBC,EAAAA,IAAI,EAAEH,OADe;AAErBI,EAAAA,OAAO,EAAEF;AAFY,CAAL,CAApB;;AAKA,OAAO,MAAMK,WAAW,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC/C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,CAA5B;;AACA,MAAID,QAAQ,CAACE,EAAb,EAAiB;AACb,UAAMT,KAAK,GAAG,MAAMO,QAAQ,CAACG,IAAT,EAApB;AACAJ,IAAAA,QAAQ,CAACP,OAAO,CAACC,KAAD,CAAR,CAAR;AACH;AACJ,CANM;AAQP,OAAO,MAAMW,UAAU,GAAIC,QAAD,IAAc,MAAMN,QAAN,IAAkB;AACtD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaI,QAAS,EAAxB,EAA2B;AACnDC,IAAAA,MAAM,EAAE;AAD2C,GAA3B,CAA5B;;AAGA,MAAIN,QAAQ,CAACE,EAAb,EAAiB;AACb,UAAMT,KAAK,GAAG,MAAMO,QAAQ,CAACG,IAAT,EAApB;AACAJ,IAAAA,QAAQ,CAACH,OAAO,CAACH,KAAD,CAAR,CAAR;AACH;AACJ,CARM;AAUP,OAAO,MAAMc,SAAS,GAAGF,QAAQ,IAAI,MAAMN,QAAN,IAAkB;AACnD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaI,QAAS,EAAxB,EAA2B;AACnDC,IAAAA,MAAM,EAAE;AAD2C,GAA3B,CAA5B;AAGAE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BT,QAAQ,CAACE,EAApC;;AAEA,MAAIF,QAAQ,CAACE,EAAb,EAAiB;AACbM,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,UAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACG,IAAT,EAArB;AACAJ,IAAAA,QAAQ,CAACF,MAAM,CAACa,MAAD,CAAP,CAAR;AACH;AACJ,CAXM;AAaP,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAG,EAA7B,EAAiCC,MAAjC,EAAyC;AAAA;;AACpD,UAAQA,MAAM,CAACnB,IAAf;AACI,SAAKL,SAAL;AACI,YAAMyB,QAAQ,GAAG,EAAjB;AACA,+BAAAD,MAAM,CAAClB,OAAP,CAAeF,KAAf,gFAAsBsB,OAAtB,CAA8BC,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,EAAN,CAAR,GAAoBD,IAA1D;AACA,aAAOF,QAAP;;AACJ,SAAKxB,QAAL;AACI,aAAO,EAAC,GAAGsB,KAAJ;AAAW,SAACC,MAAM,CAAClB,OAAP,CAAesB,EAAhB,GAAqBJ,MAAM,CAAClB;AAAvC,OAAP;;AACJ,SAAKJ,OAAL;AACI,YAAM2B,QAAQ,GAAG,EAAC,GAAGN;AAAJ,OAAjB;AACA,aAAOM,QAAQ,CAACL,MAAM,CAAClB,OAAP,CAAesB,EAAhB,CAAf;AACA,aAAOC,QAAP;;AACJ;AACI,aAAON,KAAP;AAZR;AAcH","sourcesContent":["const GET_LIKES = 'likes/GET_LIKES'\nconst SET_LIKE = 'likes/SET_LIKE'\nconst UN_LIKE = 'likes/UN_LIKE'\n\nconst getLike = likes => ({\n    type: GET_LIKES,\n    payload: likes,\n})\n\nconst setLike = likes => ({\n    type: SET_LIKE,\n    payload: likes,\n})\n\nconst unLike = likes => ({\n    type: UN_LIKE,\n    payload: likes,\n})\n\nexport const getTheLikes = () => async dispatch => {\n    const response = await fetch('/api/likes');\n    if (response.ok) {\n        const likes = await response.json();\n        dispatch(getLike(likes));\n    }\n}\n\nexport const setOneLike = (image_id) => async dispatch => {\n    const response = await fetch(`/api/likes/${image_id}`, {\n        method: 'POST'\n    })\n    if (response.ok) {\n        const likes = await response.json();\n        dispatch(setLike(likes));\n    }\n}\n\nexport const unOneLike = image_id => async dispatch => {\n    const response = await fetch(`/api/likes/${image_id}`, {\n        method: 'DELETE'\n    })\n    console.log('response ok', response.ok)\n\n    if (response.ok) {\n        console.log('made it here')\n        const unlike = await response.json();\n        dispatch(unLike(unlike));\n    }\n}\n\nexport default function likeReducer(state = {}, action) {\n    switch (action.type) {\n        case GET_LIKES:\n            const newState = {};\n            action.payload.likes?.forEach(like => newState[like.id] = like)\n            return newState;\n        case SET_LIKE:\n            return {...state, [action.payload.id]: action.payload};\n        case UN_LIKE:\n            const deleting = {...state}\n            delete deleting[action.payload.id];\n            return deleting;\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}