{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/HomePage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getImages, deleteOneImage, getUserImages } from \"../../store/image\";\nimport { getFollowers, getFollowings } from \"../../store/follow\";\nimport { getComments, createComment, editOneComment, deleteOneComment } from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\";\nimport EditFormPage from \"../EditFormPage\";\nimport ImagePage from \"../ImagePage\";\nimport NavBar from \"../Navbar\";\nimport { UserCircleIcon, HeartIcon, ChatIcon, DotsHorizontalIcon } from \"@heroicons/react/outline\";\nimport { HeartIcon as HeartIconFilled } from \"@heroicons/react/solid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomePage() {\n  _s();\n\n  const userId = useSelector(state => state.session.user.id);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const images = useSelector(state => state.images);\n  const comments = useSelector(state => state.comments);\n  const followings = useSelector(state => Object.values(state.follows.followings || {}));\n  const imagesArr = Object.values(images);\n  const likes = useSelector(state => state.likes);\n  const likesArr = Object.values(likes);\n  const keys = Object.keys(likes);\n  const [imageButtonPopup, setImageButtonPopup] = useState(0);\n  const [editButtonPopup, setEditButtonPopup] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [commentShow, setCommentShow] = useState(0);\n  const [showOptions, setShowOptions] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [commentId, setCommentId] = useState(-2);\n  const commentsArray = Object.values(comments);\n  const body = document.body;\n  const likedImages = likesArr.filter(like => like.user_id === userId);\n  const [editB, setEditB] = useState(false);\n  const followedImages = [];\n\n  for (let i = 0; i < followings.length; i++) {\n    const user = followings[i];\n\n    for (let j = 0; j < imagesArr.length; j++) {\n      const image = imagesArr[j];\n      if (user.id === image.user_id) followedImages.push(image);\n    }\n  }\n\n  console.log(\"THIS IS THE FOLLOWED IMAGES => \", followedImages);\n  useEffect(() => {\n    dispatch(getImages());\n    dispatch(getTheLikes());\n    dispatch(getComments());\n    dispatch(getFollowings(userId));\n\n    async function fetchData() {\n      const response = await fetch(\"/api/users/\");\n      const responseData = await response.json();\n      setUsers(responseData.users);\n    }\n\n    fetchData();\n  }, [dispatch, userId]);\n\n  const handleDelete = e => {\n    e.preventDefault();\n    dispatch(deleteOneImage(images[e.target.className.split(\" \")[0]]));\n  };\n\n  const handleLike = e => {\n    e.preventDefault();\n    const image_id = e.target.className.split(\" \")[1];\n\n    if (keys.filter(key => likes[key].image_id === +image_id && likes[key].user_id === userId).length) {\n      dispatch(unOneLike(image_id));\n    } else dispatch(setOneLike(image_id));\n  };\n\n  const onContentSubmit = async e => {\n    e.preventDefault();\n\n    if (e.target.value) {\n      await dispatch(createComment(e.target.className, e.target.value));\n      setContent(\"\");\n    } else {\n      await dispatch(createComment(e.target.className, e.target['0'].value));\n      e.target['0'].value = '';\n    }\n  };\n\n  const onEditComment = async e => {\n    e.preventDefault();\n    setCommentShow(0);\n    const str = e.target.className.split(\":\");\n    const image_id = str[0];\n    const comment_id = str[1];\n\n    if (content) {\n      await dispatch(editOneComment(+image_id, +comment_id, content));\n      setContent(\"\");\n    } else {\n      await dispatch(editOneComment(+image_id, +comment_id, e.target['0'].value));\n      e.target['0'].value = '';\n      setEditB(false);\n    }\n  };\n\n  const onDeleteComment = async (image_id, comment_id, setContentB = null) => {\n    if (setContentB) setContentB('');\n    await dispatch(deleteOneComment(image_id, comment_id));\n  };\n\n  const handleEdit = imageId => {\n    setEditButtonPopup(imageId);\n    setShowOptions(false);\n  };\n\n  const postCommentForm = (image_id, submitFn, content) => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form-comment-con\",\n      className: image_id,\n      onSubmit: submitFn,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: \"true\",\n        className: `input-comment`,\n        name: \"CommentAutoFocus\",\n        placeholder: \"Comment\",\n        value: content,\n        onChange: e => {\n          if (image_id === e.target.className.split('-')[2]) {\n            setContent(e.target.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"comment-submit-button\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this);\n  };\n\n  const editCommentForm = (image_id, commentId, editFn, content) => /*#__PURE__*/_jsxDEV(\"form\", {\n    className: `${image_id}:${commentId}`,\n    onSubmit: editFn // onEditComment\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      autoFocus: true,\n      placeholder: \"Edit\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"submit edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n\n  const getUser = userId => users.filter(user => user.id === userId)[0];\n\n  const checkIfLiked = imageId => {\n    for (let i = 0; i < likedImages.length; i++) {\n      if (+likedImages[i].image_id === +imageId) return true;\n    }\n\n    return false;\n  };\n\n  const canEditComment = comment => {\n    return \"editCom\".concat(String(comment.user_id === userId).toUpperCase());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"games-page-body\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"game-post-container\",\n        children: followedImages.map((image, i) => {\n          var _getUser, _getUser2;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ind-post-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"game-post-header\",\n              children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                className: \"game-post-avatar\",\n                onClick: event => history.push(`/users/${image.user_id}`)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: (_getUser = getUser(image.user_id)) === null || _getUser === void 0 ? void 0 : _getUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"game-post-image\",\n                src: `${image.url}`,\n                alt: \"user-upload\",\n                onClick: event => {\n                  setImageButtonPopup(image.id);\n                  body.style.overflow = \"hidden\";\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ImagePage, {\n                trigger: imageButtonPopup,\n                setTrigger: setImageButtonPopup,\n                image: image,\n                commentsArray: commentsArray,\n                comments: comments,\n                users: users,\n                content: content //new props\n                ,\n                edit: edit,\n                onContentSubmit: onContentSubmit,\n                postCommentForm: postCommentForm,\n                editCommentForm: editCommentForm,\n                onEditComment: onEditComment,\n                onDeleteComment: onDeleteComment,\n                canEditComment: canEditComment,\n                editB: editB,\n                setEditB: setEditB,\n                handleDelete: handleDelete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-footer-icon-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `like-div ${image.id}`,\n                onClick: handleLike\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this), checkIfLiked(image.id) ? /*#__PURE__*/_jsxDEV(HeartIconFilled, {\n                className: \"post-footer-icon liked-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(HeartIcon, {\n                className: \"post-footer-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ChatIcon, {\n                onClick: () => {\n                  setImageButtonPopup(image.id);\n                  body.style.overflow = \"hidden\";\n                },\n                className: \"post-footer-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"caption-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"caption-username\",\n                children: (_getUser2 = getUser(image.user_id)) === null || _getUser2 === void 0 ? void 0 : _getUser2.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"caption\",\n                children: image.caption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), commentsArray.filter(comment => image.id === comment.image_id).slice(-2).map(comment => {\n              if (comment.image_id === image.id) {\n                var _getUser3;\n\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"games-comment-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"games-username\",\n                    children: (_getUser3 = getUser(comment.user_id)) === null || _getUser3 === void 0 ? void 0 : _getUser3.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"commentPDiv\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      id: comment.id,\n                      className: canEditComment(comment),\n                      children: [comment.content, /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          setEdit(true);\n                          setCommentShow(image.id);\n                          setCommentId(comment.id);\n                          setContent(`${comments[comment.id].content}`);\n                        },\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          onDeleteComment(image.id, comment.id);\n                        },\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 41\n                }, this);\n              }\n\n              return \"\";\n            }), commentsArray.filter(comment => image.id === comment.image_id).length > 2 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"games-view-comments\",\n              onClick: () => {\n                setImageButtonPopup(image.id);\n                body.style.overflow = \"hidden\";\n              },\n              children: \"View all comments...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-container-div\",\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                id: \"form-comment-con\",\n                className: image.id,\n                onSubmit: onContentSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  required: \"true\",\n                  className: `input-comment`,\n                  name: \"CommentAutoFocus\",\n                  placeholder: \"Comment\",\n                  value: content,\n                  onChange: e => {\n                    setContent(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"comment-submit-button\",\n                  children: \"Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this), commentShow === image.id && edit === true && editCommentForm(image.id, commentId, onEditComment, content)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this), userId === image.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(DotsHorizontalIcon, {\n                onClick: () => setShowOptions(!showOptions),\n                className: \"post-options-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(EditFormPage, {\n                trigger: editButtonPopup,\n                setTrigger: setEditButtonPopup,\n                image: image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 37\n              }, this), showOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-options\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `${image.id} post-option-delete`,\n                  onClick: handleDelete,\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(image.id),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Go to post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setShowOptions(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 33\n            }, this)]\n          }, `${image.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomePage, \"rB7ClIlySXSJ1fXEm8PuPETlcnk=\", false, function () {\n  return [useSelector, useHistory, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/HomePage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","useHistory","getImages","deleteOneImage","getUserImages","getFollowers","getFollowings","getComments","createComment","editOneComment","deleteOneComment","getTheLikes","setOneLike","unOneLike","EditFormPage","ImagePage","NavBar","UserCircleIcon","HeartIcon","ChatIcon","DotsHorizontalIcon","HeartIconFilled","HomePage","userId","state","session","user","id","history","dispatch","images","comments","followings","Object","values","follows","imagesArr","likes","likesArr","keys","imageButtonPopup","setImageButtonPopup","editButtonPopup","setEditButtonPopup","content","setContent","commentShow","setCommentShow","showOptions","setShowOptions","users","setUsers","edit","setEdit","commentId","setCommentId","commentsArray","body","document","likedImages","filter","like","user_id","editB","setEditB","followedImages","i","length","j","image","push","console","log","fetchData","response","fetch","responseData","json","handleDelete","e","preventDefault","target","className","split","handleLike","image_id","key","onContentSubmit","value","onEditComment","str","comment_id","onDeleteComment","setContentB","handleEdit","imageId","postCommentForm","submitFn","editCommentForm","editFn","getUser","checkIfLiked","canEditComment","comment","concat","String","toUpperCase","map","event","username","url","style","overflow","caption","slice"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getImages, deleteOneImage, getUserImages } from \"../../store/image\";\nimport { getFollowers, getFollowings } from \"../../store/follow\";\nimport {\n    getComments,\n    createComment,\n    editOneComment,\n    deleteOneComment,\n} from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\";\nimport EditFormPage from \"../EditFormPage\";\nimport ImagePage from \"../ImagePage\";\nimport NavBar from \"../Navbar\";\nimport {\n    UserCircleIcon,\n    HeartIcon,\n    ChatIcon,\n    DotsHorizontalIcon,\n} from \"@heroicons/react/outline\";\nimport { HeartIcon as HeartIconFilled } from \"@heroicons/react/solid\";\n\nfunction HomePage() {\n    const userId = useSelector(state => state.session.user.id);\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const images = useSelector(state => state.images);\n    const comments = useSelector(state => state.comments);\n    const followings = useSelector(state => Object.values(state.follows.followings || {}));\n    const imagesArr = Object.values(images);\n    const likes = useSelector(state => state.likes);\n    const likesArr = Object.values(likes);\n    const keys = Object.keys(likes);\n    const [imageButtonPopup, setImageButtonPopup] = useState(0);\n    const [editButtonPopup, setEditButtonPopup] = useState(0);\n    const [content, setContent] = useState(\"\");\n    const [commentShow, setCommentShow] = useState(0);\n    const [showOptions, setShowOptions] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [edit, setEdit] = useState(false);\n    const [commentId, setCommentId] = useState(-2);\n    const commentsArray = Object.values(comments);\n    const body = document.body;\n    const likedImages = likesArr.filter((like) => like.user_id === userId);\n\n    const [editB, setEditB] = useState(false);\n\n    const followedImages = [];\n\n    for (let i = 0; i < followings.length; i++) {\n        const user = followings[i];\n        for (let j = 0; j < imagesArr.length; j++) {\n            const image = imagesArr[j];\n            if (user.id === image.user_id) followedImages.push(image);\n        }\n    }\n\n    console.log(\"THIS IS THE FOLLOWED IMAGES => \", followedImages);\n\n    useEffect(() => {\n        dispatch(getImages());\n        dispatch(getTheLikes());\n        dispatch(getComments());\n        dispatch(getFollowings(userId));\n        async function fetchData() {\n            const response = await fetch(\"/api/users/\");\n            const responseData = await response.json();\n            setUsers(responseData.users);\n        }\n        fetchData();\n    }, [dispatch, userId]);\n\n    const handleDelete = (e) => {\n        e.preventDefault();\n        dispatch(deleteOneImage(images[e.target.className.split(\" \")[0]]));\n    };\n\n    const handleLike = (e) => {\n        e.preventDefault();\n        const image_id = e.target.className.split(\" \")[1];\n\n        if (\n            keys.filter(\n                (key) =>\n                    likes[key].image_id === +image_id && likes[key].user_id === userId\n            ).length\n        ) {\n            dispatch(unOneLike(image_id));\n        } else dispatch(setOneLike(image_id));\n    };\n\n    const onContentSubmit = async (e) => {\n        e.preventDefault();\n        if (e.target.value) {\n            await dispatch(createComment(e.target.className, e.target.value));\n            setContent(\"\");\n        } else {\n            await dispatch(createComment(e.target.className, e.target['0'].value));\n            e.target['0'].value = '';\n        }\n    };\n\n    const onEditComment = async (e) => {\n        e.preventDefault();\n        setCommentShow(0);\n        const str = e.target.className.split(\":\");\n        const image_id = str[0];\n        const comment_id = str[1];\n        if (content) {\n            await dispatch(editOneComment(+image_id, +comment_id, content));\n            setContent(\"\");\n        } else {\n            await dispatch(editOneComment(+image_id, +comment_id, e.target['0'].value));\n            e.target['0'].value = '';\n            setEditB(false);\n        }\n    };\n\n    const onDeleteComment = async (image_id, comment_id, setContentB = null) => {\n        if (setContentB) setContentB('');\n        await dispatch(deleteOneComment(image_id, comment_id));\n    };\n\n    const handleEdit = (imageId) => {\n        setEditButtonPopup(imageId);\n        setShowOptions(false);\n    };\n\n    const postCommentForm = (image_id, submitFn, content) => {\n        return (<form id=\"form-comment-con\" className={image_id} onSubmit={submitFn}>\n            <input\n                required=\"true\"\n                className={`input-comment`}\n                name=\"CommentAutoFocus\"\n                placeholder=\"Comment\"\n                value={content}\n                onChange={(e) => {\n                    if (image_id === e.target.className.split('-')[2]) {\n                        setContent(e.target.value);\n                    }\n                }}\n            />\n            <button className=\"comment-submit-button\">Post</button>\n        </form>\n        )\n    }\n\n    const editCommentForm = (image_id, commentId, editFn, content) => (\n        <form\n            className={`${image_id}:${commentId}`}\n            onSubmit={editFn} // onEditComment\n        >\n            <input\n                autoFocus\n                placeholder=\"Edit\"\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n            />\n            <button>submit edit</button>\n        </form>\n    )\n\n    const getUser = (userId) => users.filter((user) => user.id === userId)[0];\n\n    const checkIfLiked = (imageId) => {\n        for (let i = 0; i < likedImages.length; i++) {\n            if (+likedImages[i].image_id === +imageId) return true;\n        }\n        return false;\n    };\n\n    const canEditComment = (comment) => {\n        return \"editCom\".concat(String(comment.user_id === userId).toUpperCase());\n    };\n\n\n    return (\n        <div>\n            <NavBar />\n            <div className=\"games-page-body\">\n                <ul className=\"game-post-container\">\n                    {followedImages.map((image, i) => (\n                        <div className=\"ind-post-container\" key={`${image.id}`}>\n                            <div className=\"game-post-header\" >\n                                <UserCircleIcon className=\"game-post-avatar\" onClick={event => history.push(`/users/${image.user_id}`)} />\n                                <li>{getUser(image.user_id)?.username}</li>\n                            </div>\n                            <li>\n                                <img\n                                    className=\"game-post-image\"\n                                    src={`${image.url}`}\n                                    alt=\"user-upload\"\n                                    onClick={(event) => {\n                                        setImageButtonPopup(image.id);\n                                        body.style.overflow = \"hidden\";\n                                    }}\n                                ></img>\n                                <ImagePage\n                                    trigger={imageButtonPopup}\n                                    setTrigger={setImageButtonPopup}\n                                    image={image}\n                                    commentsArray={commentsArray}\n                                    comments={comments}\n                                    users={users}\n                                    content={content}\n\n                                    //new props\n                                    edit={edit}\n                                    onContentSubmit={onContentSubmit}\n                                    postCommentForm={postCommentForm}\n                                    editCommentForm={editCommentForm}\n                                    onEditComment={onEditComment}\n                                    onDeleteComment={onDeleteComment}\n                                    canEditComment={canEditComment}\n                                    editB={editB}\n                                    setEditB={setEditB}\n                                    handleDelete={handleDelete}\n                                />\n                            </li>\n                            <div className=\"post-footer-icon-container\">\n                                <div\n                                    className={`like-div ${image.id}`}\n                                    onClick={handleLike}\n                                ></div>\n                                {checkIfLiked(image.id) ? (\n                                    <HeartIconFilled className=\"post-footer-icon liked-icon\" />\n                                ) : (\n                                    <HeartIcon className=\"post-footer-icon\" />\n                                )}\n                                <ChatIcon\n                                    onClick={() => {\n                                        setImageButtonPopup(image.id);\n                                        body.style.overflow = \"hidden\";\n                                    }}\n                                    className=\"post-footer-icon\"\n                                />\n                            </div>\n                            <li className=\"caption-container\">\n                                <div className=\"caption-username\">\n                                    {getUser(image.user_id)?.username}\n                                </div>\n                                <div className=\"caption\">{image.caption}</div>\n                            </li>\n\n                            {commentsArray.filter(comment => image.id === comment.image_id).slice(-2).map(comment => {\n                                if (comment.image_id === image.id) {\n                                    return (\n                                        <div className=\"games-comment-container\">\n                                            <div className=\"games-username\">\n                                                {getUser(comment.user_id)?.username}\n                                            </div>\n                                            <div className='commentPDiv'>\n                                                <p id={comment.id} className={canEditComment(comment)}>\n                                                    {comment.content}\n                                                    <button\n                                                        onClick={() => {\n                                                            setEdit(true);\n                                                            setCommentShow(image.id);\n                                                            setCommentId(comment.id);\n                                                            setContent(`${comments[comment.id].content}`);\n                                                        }}\n                                                    >\n                                                        Edit\n                                                    </button>\n                                                    <button\n                                                        onClick={() => {\n                                                            onDeleteComment(image.id, comment.id);\n                                                        }}\n                                                    >\n                                                        Delete\n                                                    </button>\n                                                </p>\n                                            </div>\n                                        </div>\n                                    );\n                                }\n                                return \"\";\n                            })}\n                            {commentsArray.filter(comment => image.id === comment.image_id).length > 2 &&\n                                <p\n                                    className=\"games-view-comments\"\n                                    onClick={() => {\n                                        setImageButtonPopup(image.id);\n                                        body.style.overflow = \"hidden\";\n                                    }}\n                                >\n                                    View all comments...\n                                </p>}\n                            <div className=\"comment-container-div\">\n                                <form id=\"form-comment-con\" className={image.id} onSubmit={onContentSubmit}>\n                                    <input\n                                        required=\"true\"\n                                        className={`input-comment`}\n                                        name=\"CommentAutoFocus\"\n                                        placeholder=\"Comment\"\n                                        value={content}\n                                        onChange={(e) => {\n                                            setContent(e.target.value);\n                                        }}\n                                    />\n                                    <button className=\"comment-submit-button\">Post</button>\n                                </form>\n                                {commentShow === image.id && edit === true &&\n                                    editCommentForm(image.id, commentId, onEditComment, content)}\n                            </div>\n                            {userId === image.user_id && (\n                                <div>\n                                    <DotsHorizontalIcon\n                                        onClick={() => setShowOptions(!showOptions)}\n                                        className=\"post-options-icon\"\n                                    />\n                                    <EditFormPage\n                                        trigger={editButtonPopup}\n                                        setTrigger={setEditButtonPopup}\n                                        image={image}\n                                    />\n                                    {showOptions && (\n                                        <div className=\"post-options\">\n                                            <button\n                                                className={`${image.id} post-option-delete`}\n                                                onClick={handleDelete}\n                                            >\n                                                Delete\n                                            </button>\n                                            <button onClick={() => handleEdit(image.id)}>Edit</button>\n                                            <button>Go to post</button>\n                                            <button onClick={() => setShowOptions(false)}>\n                                                Cancel\n                                            </button>\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        </div>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}