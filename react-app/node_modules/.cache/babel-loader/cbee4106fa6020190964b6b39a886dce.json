{"ast":null,"code":"const LOAD_IMAGES = 'images/LOAD_IMAGES';\nconst DELETE_IMAGE = 'images/DELETE_IMAGE'; // const SET_IMAGE = 'images/SET_IMAGE';\n\nconst loadImages = images => ({\n  type: LOAD_IMAGES,\n  payload: images\n});\n\nconst deleteImage = image => ({\n  type: DELETE_IMAGE,\n  payload: image\n});\n\nexport const getImages = () => async dispatch => {\n  const response = await fetch('/api/games');\n\n  if (response.ok) {\n    const images = await response.json();\n    dispatch(loadImages(images)); // return images\n  } else return;\n};\nexport const deleteOneImage = image => async dispatch => {\n  const response = await fetch(`/api/games/${image.id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    } // body: JSON.stringify(image)\n\n  });\n\n  if (response.ok) {\n    const imageToDelete = await response.json();\n    dispatch(deleteImage(imageToDelete));\n  }\n};\nexport default function imageReducer(state = {}, action) {\n  switch (action.type) {\n    case LOAD_IMAGES:\n      {\n        var _action$payload$image;\n\n        const newState = {};\n        (_action$payload$image = action.payload.images) === null || _action$payload$image === void 0 ? void 0 : _action$payload$image.forEach(image => newState[image.id] = image);\n        return newState;\n      }\n\n    case DELETE_IMAGE:\n      {}\n      const deleteState = { ...state\n      };\n      console.log('action.payload!!!', action.payload);\n      delete deleteState[action.payload.id];\n      return deleteState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/store/image.js"],"names":["LOAD_IMAGES","DELETE_IMAGE","loadImages","images","type","payload","deleteImage","image","getImages","dispatch","response","fetch","ok","json","deleteOneImage","id","method","headers","imageToDelete","imageReducer","state","action","newState","forEach","deleteState","console","log"],"mappings":"AAAA,MAAMA,WAAW,GAAG,oBAApB;AACA,MAAMC,YAAY,GAAG,qBAArB,C,CACA;;AAEA,MAAMC,UAAU,GAAIC,MAAD,KAAa;AAC5BC,EAAAA,IAAI,EAAEJ,WADsB;AAE5BK,EAAAA,OAAO,EAAEF;AAFmB,CAAb,CAAnB;;AAKA,MAAMG,WAAW,GAAIC,KAAD,KAAY;AAC5BH,EAAAA,IAAI,EAAEH,YADsB;AAE5BI,EAAAA,OAAO,EAAEE;AAFmB,CAAZ,CAApB;;AAKA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC/C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,CAA5B;;AACA,MAAID,QAAQ,CAACE,EAAb,EAAiB;AACb,UAAMT,MAAM,GAAG,MAAMO,QAAQ,CAACG,IAAT,EAArB;AACAJ,IAAAA,QAAQ,CAACP,UAAU,CAACC,MAAD,CAAX,CAAR,CAFa,CAGb;AAEH,GALD,MAKO;AACV,CARM;AAUP,OAAO,MAAMW,cAAc,GAAIP,KAAD,IAAW,MAAOE,QAAP,IAAoB;AACzD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaJ,KAAK,CAACQ,EAAG,EAAxB,EAA2B;AACnDC,IAAAA,MAAM,EAAE,QAD2C;AAEnDC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAF0C,CAKnD;;AALmD,GAA3B,CAA5B;;AAOA,MAAIP,QAAQ,CAACE,EAAb,EAAiB;AACb,UAAMM,aAAa,GAAG,MAAMR,QAAQ,CAACG,IAAT,EAA5B;AACAJ,IAAAA,QAAQ,CAACH,WAAW,CAACY,aAAD,CAAZ,CAAR;AACH;AACJ,CAZM;AAcP,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAG,EAA9B,EAAkCC,MAAlC,EAA0C;AACrD,UAAQA,MAAM,CAACjB,IAAf;AACI,SAAKJ,WAAL;AAAkB;AAAA;;AACd,cAAMsB,QAAQ,GAAG,EAAjB;AACA,iCAAAD,MAAM,CAAChB,OAAP,CAAeF,MAAf,gFAAuBoB,OAAvB,CAA+BhB,KAAK,IAAIe,QAAQ,CAACf,KAAK,CAACQ,EAAP,CAAR,GAAqBR,KAA7D;AACA,eAAOe,QAAP;AACH;;AACD,SAAKrB,YAAL;AAAmB,OAAE;AACjB,YAAMuB,WAAW,GAAG,EAAC,GAAGJ;AAAJ,OAApB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,MAAM,CAAChB,OAAxC;AACA,aAAOmB,WAAW,CAACH,MAAM,CAAChB,OAAP,CAAeU,EAAhB,CAAlB;AACA,aAAOS,WAAP;;AACJ;AACI,aAAOJ,KAAP;AAZR;AAcH","sourcesContent":["const LOAD_IMAGES = 'images/LOAD_IMAGES';\nconst DELETE_IMAGE = 'images/DELETE_IMAGE';\n// const SET_IMAGE = 'images/SET_IMAGE';\n\nconst loadImages = (images) => ({\n    type: LOAD_IMAGES,\n    payload: images\n})\n\nconst deleteImage = (image) => ({\n    type: DELETE_IMAGE,\n    payload: image,\n})\n\nexport const getImages = () => async (dispatch) => {\n    const response = await fetch('/api/games')\n    if (response.ok) {\n        const images = await response.json();\n        dispatch(loadImages(images));\n        // return images\n\n    } else return;\n}\n\nexport const deleteOneImage = (image) => async (dispatch) => {\n    const response = await fetch(`/api/games/${image.id}`, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        // body: JSON.stringify(image)\n    })\n    if (response.ok) {\n        const imageToDelete = await response.json();\n        dispatch(deleteImage(imageToDelete))\n    }\n}\n\nexport default function imageReducer(state = {}, action) {\n    switch (action.type) {\n        case LOAD_IMAGES: {\n            const newState = {}\n            action.payload.images?.forEach(image => newState[image.id] = image)\n            return newState\n        }\n        case DELETE_IMAGE: {}\n            const deleteState = {...state};\n            console.log('action.payload!!!', action.payload)\n            delete deleteState[action.payload.id];\n            return deleteState;\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}