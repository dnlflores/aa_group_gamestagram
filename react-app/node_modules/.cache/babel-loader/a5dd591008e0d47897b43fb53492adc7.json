{"ast":null,"code":"const LOAD_IMAGES = 'images/LOAD_IMAGES';\nconst DELETE_IMAGE = 'images/DELETE_IMAGE';\nconst EDIT_IMAGE = 'images/EDIT_IMAGE';\nconst LOAD_IMAGE = 'images/LOAD_IMAGE';\nconst LOAD_USER_IMAGES = 'images/LOAD_USER_IMAGES';\n\nconst loadImages = images => ({\n  type: LOAD_IMAGES,\n  payload: images\n});\n\nconst deleteImage = image => ({\n  type: DELETE_IMAGE,\n  payload: image\n});\n\nconst editImage = image => ({\n  type: EDIT_IMAGE,\n  payload: image\n});\n\nconst loadImage = image => ({\n  type: LOAD_IMAGE,\n  payload: image\n});\n\nconst loadUserImages = images => ({\n  type: LOAD_USER_IMAGES,\n  payload: images\n});\n\nexport const getImage = imageId => async dispatch => {\n  const response = await fetch(`/api/games/${imageId}`);\n\n  if (response.ok) {\n    const image = await response.json();\n    dispatch(loadImage(image));\n    return image;\n  }\n};\nexport const getImages = () => async dispatch => {\n  const response = await fetch('/api/games');\n\n  if (response.ok) {\n    const images = await response.json();\n    dispatch(loadImages(images));\n    return images;\n  } else return;\n};\nexport const deleteOneImage = image => async dispatch => {\n  const response = await fetch(`/api/games/${image.id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    } // body: JSON.stringify(image)\n\n  });\n\n  if (response.ok) {\n    const imageToDelete = await response.json();\n    dispatch(deleteImage(imageToDelete));\n  }\n};\nexport const editOneImage = image => async dispatch => {\n  const response = await fetch(`/api/games/${image.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(image)\n  });\n\n  if (response.ok) {\n    const imageToEdit = await response.json();\n    dispatch(editImage(imageToEdit));\n    return imageToEdit;\n  }\n};\nexport const getUserImages = userId => async dispatch => {\n  const response = await fetch(`/api/users/${userId}/games`);\n\n  if (response.ok) {\n    const userImages = await response.json();\n    dispatch(loadUserImages(userImages));\n    return userImages;\n  }\n};\nexport default function imageReducer(state = {}, action) {\n  var _action$payload$image, _action$payload$user_;\n\n  switch (action.type) {\n    case LOAD_IMAGES:\n      const newState = {};\n      (_action$payload$image = action.payload.images) === null || _action$payload$image === void 0 ? void 0 : _action$payload$image.forEach(image => newState[image.id] = image);\n      return newState;\n\n    case DELETE_IMAGE:\n      const deleteState = { ...state\n      };\n      delete deleteState[action.payload.id];\n      return deleteState;\n\n    case EDIT_IMAGE:\n      const editState = { ...state\n      };\n      editState[action.payload.id] = action.payload;\n      return editState;\n\n    case LOAD_USER_IMAGES:\n      const loadState = { ...state\n      };\n      (_action$payload$user_ = action.payload.user_images) === null || _action$payload$user_ === void 0 ? void 0 : _action$payload$user_.forEach(image => loadState[image.id] = image);\n      return loadState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/store/image.js"],"names":["LOAD_IMAGES","DELETE_IMAGE","EDIT_IMAGE","LOAD_IMAGE","LOAD_USER_IMAGES","loadImages","images","type","payload","deleteImage","image","editImage","loadImage","loadUserImages","getImage","imageId","dispatch","response","fetch","ok","json","getImages","deleteOneImage","id","method","headers","imageToDelete","editOneImage","body","JSON","stringify","imageToEdit","getUserImages","userId","userImages","imageReducer","state","action","newState","forEach","deleteState","editState","loadState","user_images"],"mappings":"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","sourcesContent":["const LOAD_IMAGES = 'images/LOAD_IMAGES';\nconst DELETE_IMAGE = 'images/DELETE_IMAGE';\nconst EDIT_IMAGE = 'images/EDIT_IMAGE';\nconst LOAD_IMAGE = 'images/LOAD_IMAGE';\nconst LOAD_USER_IMAGES = 'images/LOAD_USER_IMAGES';\n\nconst loadImages = (images) => ({\n    type: LOAD_IMAGES,\n    payload: images\n});\n\nconst deleteImage = (image) => ({\n    type: DELETE_IMAGE,\n    payload: image\n});\n\nconst editImage = image => ({\n    type: EDIT_IMAGE,\n    payload: image\n});\n\nconst loadImage = image => ({\n    type: LOAD_IMAGE,\n    payload: image\n});\n\nconst loadUserImages = images => ({\n    type: LOAD_USER_IMAGES,\n    payload: images\n})\n\nexport const getImage = imageId => async dispatch => {\n    const response = await fetch(`/api/games/${imageId}`);\n    if (response.ok) {\n        const image = await response.json();\n        dispatch(loadImage(image));\n        return image;\n    }\n}\n\nexport const getImages = () => async (dispatch) => {\n    const response = await fetch('/api/games')\n    if (response.ok) {\n        const images = await response.json();\n        dispatch(loadImages(images));\n        return images;\n\n    } else return;\n};\n\nexport const deleteOneImage = (image) => async (dispatch) => {\n    const response = await fetch(`/api/games/${image.id}`, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        // body: JSON.stringify(image)\n    })\n    if (response.ok) {\n        const imageToDelete = await response.json();\n        dispatch(deleteImage(imageToDelete));\n    }\n};\n\nexport const editOneImage = image => async (dispatch) => {\n    const response = await fetch(`/api/games/${image.id}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(image)\n    });\n    if (response.ok) {\n        const imageToEdit = await response.json();\n        dispatch(editImage(imageToEdit));\n        return imageToEdit;\n    }\n};\n\nexport const getUserImages = userId => async dispatch => {\n    const response = await fetch(`/api/users/${userId}/games`);\n\n    if(response.ok){\n        const userImages = await response.json();\n        dispatch(loadUserImages(userImages));\n        return userImages;\n    }\n};\n\nexport default function imageReducer(state = {}, action) {\n    switch (action.type) {\n        case LOAD_IMAGES:\n            const newState = {};\n            action.payload.images?.forEach(image => newState[image.id] = image);\n            return newState;\n        case DELETE_IMAGE:\n            const deleteState = {...state};\n            delete deleteState[action.payload.id];\n            return deleteState;\n        case EDIT_IMAGE:\n            const editState = {...state};\n            editState[action.payload.id] = action.payload;\n            return editState;\n        case LOAD_USER_IMAGES:\n            const loadState = {...state};\n            action.payload.user_images?.forEach(image => loadState[image.id] = image);\n            return loadState;\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}