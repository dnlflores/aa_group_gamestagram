{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ImagePage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImage, deleteOneImage } from \"../../store/image\";\nimport { createComment } from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\";\nimport { XIcon, UserCircleIcon, HeartIcon, ChatIcon } from \"@heroicons/react/outline\";\nimport { HeartIcon as HeartIconFilled } from \"@heroicons/react/solid\";\nimport EditFormPage from \"../EditFormPage\";\nimport \"./ImagePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImagePage = props => {\n  _s();\n\n  var _getUser, _getUser2, _props$commentsArray;\n\n  const userId = useSelector(state => state.session.user.id);\n  const likes = useSelector(state => state.likes);\n  const likesArr = Object.values(likes);\n  const keys = Object.keys(likes);\n  const likedImages = likesArr.filter(like => like.user_id === userId);\n  const dispatch = useDispatch();\n  const [buttonPopup, setButtonPopup] = useState(0);\n  const body = document.body; // working with imagesPage file\n\n  const [contentB, setContentB] = useState(\"\");\n  const [editB, setEditB] = useState(false);\n  const [commentShowB, setCommentShowB] = useState(0);\n  const [commentIdB, setCommentIdB] = useState(-6);\n  useEffect(() => {\n    dispatch(getImage(props.image.id));\n    dispatch(getTheLikes());\n  }, [dispatch, props.image.id]);\n\n  const handleClick = e => {\n    const imagePage = document.querySelector(\".image-page-body\");\n\n    if (e.target === imagePage) {\n      body.style.overflow = \"visible\";\n      props.setTrigger(0);\n    }\n  };\n\n  const handleLike = e => {\n    e.preventDefault();\n    console.log(\"E TARGET => \", e.target.farthestViewportElement.className.baseVal.split(\" \")[1]);\n    const image_id = e.target.farthestViewportElement.className.baseVal.split(\" \")[1];\n\n    if (keys.filter(key => likes[key].image_id === +image_id && likes[key].user_id === userId).length) {\n      dispatch(unOneLike(image_id));\n    } else dispatch(setOneLike(image_id));\n  };\n\n  const newHandleLike = event => {\n    event.preventDefault();\n    console.log(\"THE LIKE GOT TRIGGERED\");\n    console.log(\"THE EVENT => \", event);\n    console.log(\"TRYING TO GET THE IMAGE ID => \", event.target.className.baseVal.split(\" \")[1]);\n    const image_id = event.target.className.baseVal.split(\" \")[1];\n    dispatch(setOneLike(image_id));\n  };\n\n  const handleUnlike = event => {\n    event.preventDefault();\n    console.log(\"THE UNLIKE GOT TRIGGERED\");\n    console.log(\"THE EVENT => \", event);\n    console.log(\"TRYING TO GET IMAGE ID => \", event.target.farthestViewportElement.className.baseVal.split(\" \")[1]);\n    const image_id = event.target.farthestViewportElement.className.baseVal.split(\" \")[1];\n    dispatch(unOneLike(image_id));\n  };\n\n  const checkIfLiked = imageId => {\n    for (let i = 0; i < likedImages.length; i++) {\n      if (+likedImages[i].image_id === +imageId) return true;\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    document.body.addEventListener(\"click\", handleClick);\n  }, [handleClick]);\n\n  const getUser = userId => props.users.filter(user => user.id === userId)[0];\n\n  return props.trigger === props.image.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-page-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-page-con\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-page-left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image-page-image\",\n          src: `${props.image.url}`,\n          alt: \"user-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-page-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-header\",\n          children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n            className: \"image-page-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_getUser = getUser(props.image.user_id)) === null || _getUser === void 0 ? void 0 : _getUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), props.commentsArray && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-comment-container\",\n          children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n            className: \"image-page-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"image-page-username\",\n            children: (_getUser2 = getUser(props.image.user_id)) === null || _getUser2 === void 0 ? void 0 : _getUser2.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"image-page-caption\",\n            children: props.image.caption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), (_props$commentsArray = props.commentsArray) === null || _props$commentsArray === void 0 ? void 0 : _props$commentsArray.map(comment => {\n            if (comment.image_id === props.image.id) {\n              var _getUser3;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-page-comment-header\",\n                children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                  className: \"image-page-comment-avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"image-page-comment-username\",\n                  children: (_getUser3 = getUser(comment.user_id)) === null || _getUser3 === void 0 ? void 0 : _getUser3.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"commentPDivPage\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: props.canEditComment(comment),\n                    children: [comment.content, /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        setEditB(true);\n                        props.setEditB(true);\n                        setCommentShowB(props.image.id);\n                        setCommentIdB(comment.id);\n                        setContentB(`${props.comments[comment.id].content}`);\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        props.onDeleteComment(props.image.id, comment.id, setContentB);\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this);\n            }\n\n            return \"\";\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-page-options-container\",\n            children: [checkIfLiked(props.image.id) ? /*#__PURE__*/_jsxDEV(HeartIconFilled, {\n              className: `post-footer-icon ${props.image.id} liked-icon`,\n              onClick: handleUnlike\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(HeartIcon, {\n              className: `post-footer-icon ${props.image.id}`,\n              onClick: newHandleLike\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ChatIcon, {\n              className: \"image-page-options-icon\",\n              onClick: () => {\n                if (commentShowB === props.image.id) {\n                  setCommentShowB(0);\n                } else {\n                  setCommentShowB(props.image.id); // body.getElementById\n                }\n\n                setContentB(\"\");\n                setEditB(false);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), editB === false && props.postCommentForm(props.image.id, props.onContentSubmit, contentB, setContentB), editB === true && props.editB && props.editCommentForm(props.image.id, commentIdB, props.onEditComment, contentB, setContentB)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), userId === props.image.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: props.image.id,\n            onClick: props.handleDelete,\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setButtonPopup(props.image.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditFormPage, {\n            trigger: buttonPopup,\n            setTrigger: setButtonPopup,\n            image: props.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"x-button-wrap\",\n          onClick: () => props.setTrigger(0),\n          children: /*#__PURE__*/_jsxDEV(XIcon, {\n            onClick: () => {\n              body.style.overflow = \"visible\";\n            },\n            className: \"image-page-close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this) : \"\";\n};\n\n_s(ImagePage, \"pIlJeu4nFLTiEMcYpxYyFH6YALE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ImagePage;\nexport default ImagePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ImagePage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","getImage","deleteOneImage","createComment","getTheLikes","setOneLike","unOneLike","XIcon","UserCircleIcon","HeartIcon","ChatIcon","HeartIconFilled","EditFormPage","ImagePage","props","userId","state","session","user","id","likes","likesArr","Object","values","keys","likedImages","filter","like","user_id","dispatch","buttonPopup","setButtonPopup","body","document","contentB","setContentB","editB","setEditB","commentShowB","setCommentShowB","commentIdB","setCommentIdB","image","handleClick","e","imagePage","querySelector","target","style","overflow","setTrigger","handleLike","preventDefault","console","log","farthestViewportElement","className","baseVal","split","image_id","key","length","newHandleLike","event","handleUnlike","checkIfLiked","imageId","i","addEventListener","getUser","users","trigger","url","username","commentsArray","caption","map","comment","canEditComment","content","comments","onDeleteComment","postCommentForm","onContentSubmit","editCommentForm","onEditComment","handleDelete"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImage, deleteOneImage } from \"../../store/image\";\nimport { createComment } from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\"\nimport {\n  XIcon,\n  UserCircleIcon,\n  HeartIcon,\n  ChatIcon,\n} from \"@heroicons/react/outline\";\nimport { HeartIcon as HeartIconFilled } from \"@heroicons/react/solid\";\nimport EditFormPage from \"../EditFormPage\";\nimport \"./ImagePage.css\";\n\nconst ImagePage = (props) => {\n  const userId = useSelector((state) => state.session.user.id);\n  const likes = useSelector((state) => state.likes);\n  const likesArr = Object.values(likes);\n  const keys = Object.keys(likes);\n  const likedImages = likesArr.filter((like) => like.user_id === userId);\n  const dispatch = useDispatch();\n\n  const [buttonPopup, setButtonPopup] = useState(0);\n\n  const body = document.body;\n\n\n  // working with imagesPage file\n  const [contentB, setContentB] = useState(\"\");\n  const [editB, setEditB] = useState(false)\n  const [commentShowB, setCommentShowB] = useState(0)\n  const [commentIdB, setCommentIdB] = useState(-6)\n\n\n  useEffect(() => {\n    dispatch(getImage(props.image.id));\n    dispatch(getTheLikes());\n  }, [dispatch, props.image.id]);\n\n\n  const handleClick = (e) => {\n    const imagePage = document.querySelector(\".image-page-body\")\n    if (e.target === imagePage) {\n      body.style.overflow = \"visible\";\n      props.setTrigger(0)\n    }\n  };\n\n  const handleLike = (e) => {\n    e.preventDefault();\n    console.log(\"E TARGET => \", e.target.farthestViewportElement.className.baseVal.split(\" \")[1]);\n    const image_id = e.target.farthestViewportElement.className.baseVal.split(\" \")[1];\n\n    if (\n      keys.filter(\n        (key) =>\n          likes[key].image_id === +image_id && likes[key].user_id === userId\n      ).length\n    ) {\n      dispatch(unOneLike(image_id));\n    } else dispatch(setOneLike(image_id));\n  };\n\n  const newHandleLike = event => {\n    event.preventDefault();\n    console.log(\"THE LIKE GOT TRIGGERED\");\n    console.log(\"THE EVENT => \", event);\n    console.log(\"TRYING TO GET THE IMAGE ID => \", event.target.className.baseVal.split(\" \")[1]);\n    const image_id = event.target.className.baseVal.split(\" \")[1];\n\n    dispatch(setOneLike(image_id));\n  }\n\n  const handleUnlike = event => {\n    event.preventDefault();\n    console.log(\"THE UNLIKE GOT TRIGGERED\");\n    console.log(\"THE EVENT => \", event);\n    console.log(\"TRYING TO GET IMAGE ID => \", event.target.farthestViewportElement.className.baseVal.split(\" \")[1]);\n    const image_id = event.target.farthestViewportElement.className.baseVal.split(\" \")[1];\n\n    dispatch(unOneLike(image_id));\n  }\n\n  const checkIfLiked = (imageId) => {\n    for (let i = 0; i < likedImages.length; i++) {\n      if (+likedImages[i].image_id === +imageId) return true;\n    }\n    return false;\n  };\n  \n  useEffect(() => {\n    document.body.addEventListener(\"click\", handleClick);\n  }, [handleClick]);\n\n  const getUser = (userId) =>\n    props.users.filter((user) => user.id === userId)[0];\n\n  return props.trigger === props.image.id ? (\n    <div className=\"image-page-body\">\n      <div className=\"image-page-con\">\n        <div className=\"image-page-left\">\n          <img\n            className={\"image-page-image\"}\n            src={`${props.image.url}`}\n            alt=\"user-upload\"\n          ></img>\n        </div>\n        <div className=\"image-page-right\">\n          <div className=\"image-page-header\">\n            <UserCircleIcon className=\"image-page-avatar\" />\n            <p>{getUser(props.image.user_id)?.username}</p>\n          </div>\n          {props.commentsArray && (\n            <div className=\"image-page-comment-container\">\n              <UserCircleIcon className=\"image-page-avatar\" />\n              <label className=\"image-page-username\">{getUser(props.image.user_id)?.username}</label>\n              <label className=\"image-page-caption\">{props.image.caption}</label>\n              {props.commentsArray?.map((comment) => {\n                if (comment.image_id === props.image.id) {\n                  return (\n                    <div className=\"image-page-comment-header\">\n                      <UserCircleIcon className=\"image-page-comment-avatar\" />\n                      <label className=\"image-page-comment-username\">\n                        {getUser(comment.user_id)?.username}\n                      </label>\n                      <div className=\"commentPDivPage\">\n                        <p className={props.canEditComment(comment)}>\n                          {comment.content}\n                          <button\n                            onClick={() => {\n                              setEditB(true);\n                              props.setEditB(true);\n                              setCommentShowB(props.image.id);\n                              setCommentIdB(comment.id);\n                              setContentB(`${props.comments[comment.id].content}`);\n                            }}\n                          >\n                            Edit\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              props.onDeleteComment(props.image.id, comment.id, setContentB);\n                            }}\n                          >\n                            Delete\n                          </button>\n                        </p>\n                      </div>\n                    </div>\n                  );\n                }\n                return \"\";\n              })}\n            </div>\n          )}\n          <div className=\"image-page-footer\">\n            <div className=\"image-page-options-container\">\n            {checkIfLiked(props.image.id) ? (\n                <HeartIconFilled className={`post-footer-icon ${props.image.id} liked-icon`} onClick={handleUnlike} />\n              ) : (\n                <HeartIcon className={`post-footer-icon ${props.image.id}`} onClick={newHandleLike} />\n              )}\n              <ChatIcon className=\"image-page-options-icon\"\n                onClick={() => {\n                  if (commentShowB === props.image.id) {\n                    setCommentShowB(0);\n                  } else {\n                    setCommentShowB(props.image.id);\n                    // body.getElementById\n                  }\n                  setContentB(\"\");\n                  setEditB(false);\n                }}\n              />\n            </div>\n            {editB === false\n              && props.postCommentForm(props.image.id, props.onContentSubmit, contentB, setContentB)}\n            {editB === true && props.editB\n              && props.editCommentForm(props.image.id, commentIdB, props.onEditComment, contentB, setContentB)}\n          </div>\n          {userId === props.image.user_id && (\n            <div>\n              <button className={props.image.id} onClick={props.handleDelete}>\n                delete\n              </button>\n              <button onClick={() => setButtonPopup(props.image.id)}>\n                Edit\n              </button>\n              <EditFormPage\n                trigger={buttonPopup}\n                setTrigger={setButtonPopup}\n                image={props.image}\n              />\n            </div>\n          )}\n          <button className=\"x-button-wrap\" onClick={() => props.setTrigger(0)}>\n            <XIcon\n              onClick={() => {\n                body.style.overflow = \"visible\";\n              }}\n              className=\"image-page-close\"\n            />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n};\n\nexport default ImagePage;\n"]},"metadata":{},"sourceType":"module"}