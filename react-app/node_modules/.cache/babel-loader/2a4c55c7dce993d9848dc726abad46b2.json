{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/SelectImagePage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport './SelectImagePage.css';\nimport { XIcon } from \"@heroicons/react/outline\";\nimport { getImages } from \"../../store/image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectImagePage = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [errors, setErrors] = useState([]);\n  const [caption, setCaption] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [imageLoading, setImageLoading] = useState(false);\n  const history = useHistory(); // so that we can redirect after the image upload is successful\n\n  const updateImage = e => {\n    const file = e.target.files[0];\n    setImage(file);\n  };\n\n  const updateCaption = e => {\n    setCaption(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const errArr = [];\n    image || errArr.push(\"* Please upload an image.\");\n    caption || errArr.push(\"* Please enter a caption.\");\n\n    if (errArr.length) {\n      setErrors(errArr);\n    } else {\n      const formData = new FormData();\n      formData.append(\"image\", image); // aws uploads can be a bit slowâ€”displaying\n      // some sort of loading message is a good idea\n\n      setImageLoading(true);\n      formData.append(\"caption\", caption);\n      const res = await fetch(\"/api/games\", {\n        method: \"POST\",\n        body: formData\n      });\n\n      if (res.ok) {\n        await res.json();\n        setImageLoading(false);\n        history.push(\"/games\") || dispatch(getImages()) && props.setTrigger(false);\n      } else {\n        setImageLoading(false); // a real app would probably use more advanced\n        // error handling\n\n        console.log(\"there was an error here is some info\", res, res.formData, res.status);\n      }\n    }\n  };\n\n  return props.trigger && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-image-page-body\",\n    onClick: e => e.target.className === \"select-image-page-body\" && props.setTrigger(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-post-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create A New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XIcon, {\n          className: \"X\",\n          onClick: e => props.setTrigger(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modal-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: errors.length > 0 && errors.map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"display-errors\",\n            children: err\n          }, err, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"file-thing\",\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: updateImage,\n          onClick: e => e.target.style.color = \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Caption\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"caption\",\n            className: \"caption-input\",\n            onChange: updateCaption,\n            value: caption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          type: \"submit\",\n          children: \"Submit Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), imageLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectImagePage, \"V1I3M1ABSbwEdsjGvME2y3o37k8=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = SelectImagePage;\nexport default SelectImagePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectImagePage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/SelectImagePage/index.js"],"names":["React","useState","useDispatch","useHistory","XIcon","getImages","SelectImagePage","props","dispatch","errors","setErrors","caption","setCaption","image","setImage","imageLoading","setImageLoading","history","updateImage","e","file","target","files","updateCaption","value","handleSubmit","preventDefault","errArr","push","length","formData","FormData","append","res","fetch","method","body","ok","json","setTrigger","console","log","status","trigger","className","map","err","style","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport './SelectImagePage.css'\nimport { XIcon } from \"@heroicons/react/outline\";\nimport { getImages } from \"../../store/image\";\n\nconst SelectImagePage = (props) => {\n\n    const dispatch = useDispatch();\n\n    const [errors, setErrors] = useState([]);\n    const [caption, setCaption] = useState(\"\");\n    const [image, setImage] = useState(null);\n\n    const [imageLoading, setImageLoading] = useState(false);\n    const history = useHistory(); // so that we can redirect after the image upload is successful\n\n    const updateImage = (e) => {\n        const file = e.target.files[0];\n        setImage(file);\n    };\n\n    const updateCaption = (e) => {\n        setCaption(e.target.value);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const errArr = [];\n        image || errArr.push(\"* Please upload an image.\");\n        caption || errArr.push(\"* Please enter a caption.\");\n\n        if (errArr.length) {\n            setErrors(errArr);\n\n        } else {\n            const formData = new FormData();\n            formData.append(\"image\", image);\n\n            // aws uploads can be a bit slowâ€”displaying\n            // some sort of loading message is a good idea\n            setImageLoading(true);\n\n            formData.append(\"caption\", caption);\n\n            const res = await fetch(\"/api/games\", {\n                method: \"POST\",\n                body: formData,\n            });\n            if (res.ok) {\n                await res.json();\n                setImageLoading(false);\n                history.push(\"/games\")\n                    || dispatch(getImages()) && props.setTrigger(false);\n\n            } else {\n                setImageLoading(false);\n                // a real app would probably use more advanced\n                // error handling\n                console.log(\"there was an error here is some info\", res, res.formData, res.status);\n            }\n        }\n    };\n\n    return props.trigger && (\n        <div className=\"select-image-page-body\"\n            onClick={e => e.target.className === \"select-image-page-body\" && props.setTrigger(false)}>\n            <div className=\"modal-container\">\n                <div className=\"new-post-text\">\n                    <p>Create A New Post</p>\n                    <XIcon\n                        className=\"X\"\n                        onClick={e => props.setTrigger(false)}\n                    />\n                </div>\n                <form className=\"modal-form\" onSubmit={handleSubmit}>\n                    <ul>\n                        {errors.length > 0 && errors.map(err => (\n                            <li className=\"display-errors\" key={err}>{err}</li>\n                        ))}\n                    </ul>\n                        <input\n                            className=\"file-thing\"\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={updateImage}\n                            onClick={e => e.target.style.color = \"black\"}\n                        />\n                    <div className=\"upload\">\n                        <label>Caption</label>\n                        <input\n                            type=\"text\"\n                            name=\"caption\"\n                            className=\"caption-input\"\n                            onChange={updateCaption}\n                            value={caption}\n                        ></input>\n                    </div>\n                    <button className=\"submit-button\" type=\"submit\">Submit Post</button>\n                    {imageLoading && <p>Loading...</p>}\n                </form>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )\n}\n\nexport default SelectImagePage;"]},"metadata":{},"sourceType":"module"}