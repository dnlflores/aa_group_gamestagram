{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ImagePage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImage, deleteOneImage } from \"../../store/image\";\nimport { createComment } from \"../../store/comment\";\nimport { XIcon, UserCircleIcon, HeartIcon, ChatIcon, DotsHorizontalIcon } from \"@heroicons/react/outline\";\nimport EditFormPage from \"../EditFormPage\";\nimport \"./ImagePage.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImagePage = props => {\n  _s();\n\n  var _getUser, _props$commentsArray;\n\n  const userId = useSelector(state => state.session.user.id);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [buttonPopup, setButtonPopup] = useState(0);\n  const [showImageOptions, setShowImageOptions] = useState(false);\n  const body = document.body; // working with imagesPage file\n\n  const [contentB, setContentB] = useState(\"\");\n  const [editB, setEditB] = useState(false);\n  const [commentShowB, setCommentShowB] = useState(0);\n  const [commentIdB, setCommentIdB] = useState(-6);\n  useEffect(() => {\n    dispatch(getImage(props.image.id));\n  }, [dispatch, props.image.id]);\n\n  const handleClick = e => {\n    const imagePage = document.querySelector(\".image-page-body\");\n\n    if (e.target === imagePage) {\n      body.style.overflow = \"visible\";\n      props.setTrigger(0);\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener(\"click\", handleClick);\n  }, [handleClick]);\n\n  const getUser = userId => props.users.filter(user => user.id === userId)[0];\n\n  return props.trigger === props.image.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-page-body\",\n    children: [showImageOptions && userId === props.image.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-post-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.image.id,\n        onClick: props.handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setButtonPopup(props.image.id),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditFormPage, {\n        trigger: buttonPopup,\n        setTrigger: setButtonPopup,\n        image: props.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-page-con\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-page-left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image-page-image\",\n          src: `${props.image.url}`,\n          alt: \"user-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-page-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-header\",\n          children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n            className: \"image-page-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_getUser = getUser(props.image.user_id)) === null || _getUser === void 0 ? void 0 : _getUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), props.image.user_id === userId && /*#__PURE__*/_jsxDEV(DotsHorizontalIcon, {\n            className: \"image-options-icon\",\n            onClick: () => setShowImageOptions(!showImageOptions)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), props.commentsArray && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-comment-container\",\n          children: (_props$commentsArray = props.commentsArray) === null || _props$commentsArray === void 0 ? void 0 : _props$commentsArray.map(comment => {\n            if (comment.image_id === props.image.id) {\n              var _getUser2;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-page-comment-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-page-ava-un\",\n                  onClick: () => {\n                    history.push(`/users/${comment.user_id}`);\n                    document.body.style.overflow = \"visible\";\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                    className: \"image-page-comment-avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"image-page-username\",\n                    children: (_getUser2 = getUser(comment.user_id)) === null || _getUser2 === void 0 ? void 0 : _getUser2.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"commentPDiv\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: props.canEditComment(comment),\n                    children: [comment.content, /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        setEditB(true);\n                        props.setEditB(true);\n                        setCommentShowB(props.image.id);\n                        setCommentIdB(comment.id);\n                        setContentB(`${props.comments[comment.id].content}`);\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        props.onDeleteComment(props.image.id, comment.id, setContentB);\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this);\n            }\n\n            return \"\";\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-page-options-container\",\n            children: [/*#__PURE__*/_jsxDEV(HeartIcon, {\n              className: \"image-page-options-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChatIcon, {\n              className: \"image-page-options-icon\",\n              onClick: () => {\n                if (commentShowB === props.image.id) {\n                  setCommentShowB(0);\n                } else setCommentShowB(props.image.id);\n\n                setContentB(\"\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), editB === false && props.postCommentForm(props.image.id, props.onContentSubmit, contentB, setContentB), editB === true && props.editB && props.editCommentForm(props.image.id, commentIdB, props.onEditComment, contentB, setContentB)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"x-button-wrap\",\n          onClick: () => props.setTrigger(0),\n          children: /*#__PURE__*/_jsxDEV(XIcon, {\n            onClick: () => {\n              body.style.overflow = \"visible\";\n            },\n            className: \"image-page-close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this) : \"\";\n};\n\n_s(ImagePage, \"aqNAgPYiBYe3zIeQ02eDZrCDXVw=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = ImagePage;\nexport default ImagePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ImagePage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","getImage","deleteOneImage","createComment","XIcon","UserCircleIcon","HeartIcon","ChatIcon","DotsHorizontalIcon","EditFormPage","useHistory","ImagePage","props","userId","state","session","user","id","dispatch","history","buttonPopup","setButtonPopup","showImageOptions","setShowImageOptions","body","document","contentB","setContentB","editB","setEditB","commentShowB","setCommentShowB","commentIdB","setCommentIdB","image","handleClick","e","imagePage","querySelector","target","style","overflow","setTrigger","addEventListener","getUser","users","filter","trigger","user_id","handleDelete","url","username","commentsArray","map","comment","image_id","push","canEditComment","content","comments","onDeleteComment","postCommentForm","onContentSubmit","editCommentForm","onEditComment"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImage, deleteOneImage } from \"../../store/image\";\nimport { createComment } from \"../../store/comment\";\nimport {\n  XIcon,\n  UserCircleIcon,\n  HeartIcon,\n  ChatIcon,\n  DotsHorizontalIcon,\n} from \"@heroicons/react/outline\";\nimport EditFormPage from \"../EditFormPage\";\nimport \"./ImagePage.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ImagePage = (props) => {\n  const userId = useSelector((state) => state.session.user.id);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [buttonPopup, setButtonPopup] = useState(0);\n  const [showImageOptions, setShowImageOptions] = useState(false);\n\n  const body = document.body;\n\n  // working with imagesPage file\n  const [contentB, setContentB] = useState(\"\");\n  const [editB, setEditB] = useState(false);\n  const [commentShowB, setCommentShowB] = useState(0);\n  const [commentIdB, setCommentIdB] = useState(-6);\n\n  useEffect(() => {\n    dispatch(getImage(props.image.id));\n  }, [dispatch, props.image.id]);\n\n  const handleClick = (e) => {\n    const imagePage = document.querySelector(\".image-page-body\");\n    if (e.target === imagePage) {\n      body.style.overflow = \"visible\";\n      props.setTrigger(0);\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener(\"click\", handleClick);\n  }, [handleClick]);\n\n  const getUser = (userId) =>\n    props.users.filter((user) => user.id === userId)[0];\n\n  return props.trigger === props.image.id ? (\n    <div className=\"image-page-body\">\n      {showImageOptions && userId === props.image.user_id && (\n        <div className=\"image-post-options\">\n          <button className={props.image.id} onClick={props.handleDelete}>\n            Delete\n          </button>\n          <button>Close</button>\n          <button onClick={() => setButtonPopup(props.image.id)}>Edit</button>\n          <EditFormPage\n            trigger={buttonPopup}\n            setTrigger={setButtonPopup}\n            image={props.image}\n          />\n        </div>\n      )}\n      <div className=\"image-page-con\">\n        <div className=\"image-page-left\">\n          <img\n            className={\"image-page-image\"}\n            src={`${props.image.url}`}\n            alt=\"user-upload\"\n          ></img>\n        </div>\n        <div className=\"image-page-right\">\n          <div className=\"image-page-header\">\n            <UserCircleIcon className=\"image-page-avatar\" />\n            <p>{getUser(props.image.user_id)?.username}</p>\n            {props.image.user_id === userId && (\n              <DotsHorizontalIcon className=\"image-options-icon\" onClick={() => setShowImageOptions(!showImageOptions)} />\n            )}\n          </div>\n          {props.commentsArray && (\n            <div className=\"image-page-comment-container\">\n              {props.commentsArray?.map((comment) => {\n                if (comment.image_id === props.image.id) {\n                  return (\n                    <div className=\"image-page-comment-header\">\n                      <div\n                        className=\"image-page-ava-un\"\n                        onClick={() => {\n                          history.push(`/users/${comment.user_id}`);\n                          document.body.style.overflow = \"visible\";\n                        }}\n                      >\n                        <UserCircleIcon className=\"image-page-comment-avatar\" />\n                        <p className=\"image-page-username\">\n                          {getUser(comment.user_id)?.username}\n                        </p>\n                      </div>\n                      <div className=\"commentPDiv\">\n                        <p className={props.canEditComment(comment)}>\n                          {comment.content}\n                          <button\n                            onClick={() => {\n                              setEditB(true);\n                              props.setEditB(true);\n                              setCommentShowB(props.image.id);\n                              setCommentIdB(comment.id);\n                              setContentB(\n                                `${props.comments[comment.id].content}`\n                              );\n                            }}\n                          >\n                            Edit\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              props.onDeleteComment(\n                                props.image.id,\n                                comment.id,\n                                setContentB\n                              );\n                            }}\n                          >\n                            Delete\n                          </button>\n                        </p>\n                      </div>\n                    </div>\n                  );\n                }\n                return \"\";\n              })}\n            </div>\n          )}\n          <div className=\"image-page-footer\">\n            <div className=\"image-page-options-container\">\n              <HeartIcon className=\"image-page-options-icon\" />\n              <ChatIcon\n                className=\"image-page-options-icon\"\n                onClick={() => {\n                  if (commentShowB === props.image.id) {\n                    setCommentShowB(0);\n                  } else setCommentShowB(props.image.id);\n                  setContentB(\"\");\n                }}\n              />\n            </div>\n            {editB === false &&\n              props.postCommentForm(\n                props.image.id,\n                props.onContentSubmit,\n                contentB,\n                setContentB\n              )}\n            {editB === true &&\n              props.editB &&\n              props.editCommentForm(\n                props.image.id,\n                commentIdB,\n                props.onEditComment,\n                contentB,\n                setContentB\n              )}\n          </div>\n\n          <button className=\"x-button-wrap\" onClick={() => props.setTrigger(0)}>\n            <XIcon\n              onClick={() => {\n                body.style.overflow = \"visible\";\n              }}\n              className=\"image-page-close\"\n            />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n};\n\nexport default ImagePage;\n"]},"metadata":{},"sourceType":"module"}