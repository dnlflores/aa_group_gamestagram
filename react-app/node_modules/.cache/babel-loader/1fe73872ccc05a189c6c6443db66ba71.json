{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/imagesPage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImages, deleteOneImage } from \"../../store/image\";\nimport { createComment } from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\";\nimport EditFormPage from \"../EditFormPage\";\nimport ImagePage from \"../ImagePage\";\nimport NavBar from \"../Navbar\";\nimport { UserCircleIcon, HeartIcon, ChatIcon, DotsHorizontalIcon } from \"@heroicons/react/outline\";\nimport \"./imagesPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImagesPage() {\n  _s();\n\n  const userId = useSelector(state => state.session.user.id);\n  const dispatch = useDispatch();\n  const images = useSelector(state => state.images);\n  const imagesArr = Object.values(images);\n  const likes = useSelector(state => state.likes);\n  const likesArr = Object.values(likes);\n  console.log('likes', likesArr);\n  console.log('images', imagesArr);\n  imagesArr.forEach(image);\n  const keys = Object.keys(likes);\n  const [imageButtonPopup, setImageButtonPopup] = useState(0);\n  const [editButtonPopup, setEditButtonPopup] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [commentShow, setCommentShow] = useState(false);\n  const [showOptions, setShowOptions] = useState(false);\n  useEffect(() => {\n    dispatch(getImages());\n    dispatch(getTheLikes());\n  }, [dispatch]);\n\n  const handleDelete = e => {\n    e.preventDefault();\n    dispatch(deleteOneImage(images[e.target.className]));\n  };\n\n  const handleLike = e => {\n    e.preventDefault();\n    console.log(\"this is the e.target\", e.target);\n    const image_id = e.target.className.split(' ')[1];\n\n    if (keys.filter(key => likes[key].image_id === +image_id && likes[key].user_id === userId).length) {\n      dispatch(unOneLike(image_id));\n    } else dispatch(setOneLike(image_id));\n  };\n\n  const onContentSubmit = async e => {\n    e.preventDefault();\n    dispatch(createComment(e.target.className, content));\n  };\n\n  const handleEdit = imageId => {\n    setEditButtonPopup(imageId);\n    setShowOptions(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"games-page-body\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"game-post-container\",\n        children: imagesArr.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ind-post-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-post-header\",\n            children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n              className: \"game-post-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"username\", image.user_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"game-post-image\",\n              src: `${image.url}`,\n              alt: \"user-upload\",\n              onClick: event => setImageButtonPopup(image.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ImagePage, {\n              trigger: imageButtonPopup,\n              setTrigger: setImageButtonPopup,\n              image: image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-footer-icon-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `like-div ${image.id}`,\n              onClick: handleLike\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(HeartIcon, {\n              className: \"post-footer-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ChatIcon, {\n              onClick: () => setCommentShow(!commentShow),\n              className: \"post-footer-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"caption-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"caption-username\",\n              children: [\"username\", image.user_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"caption\",\n              children: image.caption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), commentShow && /*#__PURE__*/_jsxDEV(\"form\", {\n            className: image.id,\n            onSubmit: onContentSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Comment\",\n              value: content,\n              onChange: e => setContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), userId === image.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(DotsHorizontalIcon, {\n              onClick: () => setShowOptions(!showOptions),\n              className: \"post-options-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(EditFormPage, {\n              trigger: editButtonPopup,\n              setTrigger: setEditButtonPopup,\n              image: image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), showOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-options\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `${image.id} post-option-delete`,\n                onClick: handleDelete,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(image.id),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Go to post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowOptions(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, `${image.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImagesPage, \"YrYDUhfnKwxnshzfzMtE+vr1IK0=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n\n_c = ImagesPage;\nexport default ImagesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesPage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/imagesPage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","getImages","deleteOneImage","createComment","getTheLikes","setOneLike","unOneLike","EditFormPage","ImagePage","NavBar","UserCircleIcon","HeartIcon","ChatIcon","DotsHorizontalIcon","ImagesPage","userId","state","session","user","id","dispatch","images","imagesArr","Object","values","likes","likesArr","console","log","forEach","image","keys","imageButtonPopup","setImageButtonPopup","editButtonPopup","setEditButtonPopup","content","setContent","commentShow","setCommentShow","showOptions","setShowOptions","handleDelete","e","preventDefault","target","className","handleLike","image_id","split","filter","key","user_id","length","onContentSubmit","handleEdit","imageId","map","url","event","caption","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImages, deleteOneImage } from \"../../store/image\";\nimport { createComment } from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\";\nimport EditFormPage from \"../EditFormPage\";\nimport ImagePage from \"../ImagePage\";\nimport NavBar from \"../Navbar\";\nimport {\n  UserCircleIcon,\n  HeartIcon,\n  ChatIcon,\n  DotsHorizontalIcon,\n} from \"@heroicons/react/outline\";\nimport \"./imagesPage.css\";\n\nfunction ImagesPage() {\n  const userId = useSelector((state) => state.session.user.id);\n\n  const dispatch = useDispatch();\n  const images = useSelector((state) => state.images);\n  const imagesArr = Object.values(images);\n  const likes = useSelector((state) => state.likes);\n  const likesArr = Object.values(likes)\n  console.log('likes', likesArr)\n  console.log('images', imagesArr)\n  imagesArr.forEach((image))\n  const keys = Object.keys(likes)\n  const [imageButtonPopup, setImageButtonPopup] = useState(0);\n  const [editButtonPopup, setEditButtonPopup] = useState(0);\n  const [content, setContent] = useState(\"\");\n\n  const [commentShow, setCommentShow] = useState(false);\n  const [showOptions, setShowOptions] = useState(false);\n  useEffect(() => {\n    dispatch(getImages());\n    dispatch(getTheLikes());\n  }, [dispatch]);\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    dispatch(deleteOneImage(images[e.target.className]));\n  };\n\n  const handleLike = e => {\n    e.preventDefault();\n    console.log(\"this is the e.target\", e.target)\n    const image_id = e.target.className.split(' ')[1]\n\n    if (keys.filter(key => likes[key].image_id === +image_id && likes[key].user_id === userId).length) {\n      dispatch(unOneLike(image_id))\n    } else dispatch(setOneLike(image_id));\n  }\n\n  const onContentSubmit = async (e) => {\n    e.preventDefault();\n\n    dispatch(createComment(e.target.className, content));\n  };\n\n  const handleEdit = (imageId) => {\n    setEditButtonPopup(imageId);\n    setShowOptions(false);\n  };\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"games-page-body\">\n        <ul className=\"game-post-container\">\n          {imagesArr.map((image) => (\n            <div className=\"ind-post-container\" key={`${image.id}`}>\n              <div className=\"game-post-header\">\n                <UserCircleIcon className=\"game-post-avatar\" />\n                <li>username{image.user_id}</li>\n              </div>\n              <li>\n                <img\n                  className=\"game-post-image\"\n                  src={`${image.url}`}\n                  alt=\"user-upload\"\n                  onClick={(event) => setImageButtonPopup(image.id)}\n                ></img>\n                <ImagePage\n                  trigger={imageButtonPopup}\n                  setTrigger={setImageButtonPopup}\n                  image={image}\n                />\n              </li>\n              <div className=\"post-footer-icon-container\">\n                <div className={`like-div ${image.id}`} onClick={handleLike}></div>\n                  <HeartIcon className=\"post-footer-icon\"/>\n                <ChatIcon\n                  onClick={() => setCommentShow(!commentShow)}\n                  className=\"post-footer-icon\"\n                />\n              </div>\n              <li className=\"caption-container\">\n                <div className=\"caption-username\">username{image.user_id}</div>\n                <div className=\"caption\">{image.caption}</div>\n              </li>\n              {commentShow && (\n                <form className={image.id} onSubmit={onContentSubmit}>\n                  <input\n                    placeholder=\"Comment\"\n                    value={content}\n                    onChange={(e) => setContent(e.target.value)}\n                  />\n                  <button>comment</button>\n                </form>\n              )}\n              {userId === image.user_id && (\n                <div>\n                  <DotsHorizontalIcon\n                    onClick={() => setShowOptions(!showOptions)}\n                    className=\"post-options-icon\"\n                  />\n                  <EditFormPage\n                    trigger={editButtonPopup}\n                    setTrigger={setEditButtonPopup}\n                    image={image}\n                  />\n                  {showOptions && (\n                    <div className=\"post-options\">\n                      <button className={`${image.id} post-option-delete`} onClick={handleDelete}>\n                        Delete\n                      </button>\n                      <button onClick={() => handleEdit(image.id)}>\n                        Edit\n                      </button>\n                      <button>Go to post</button>\n                      <button onClick={() => setShowOptions(false)}>\n                        Cancel\n                      </button>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagesPage;\n"]},"metadata":{},"sourceType":"module"}