{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/imagesPage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImages, deleteOneImage } from \"../../store/image\";\nimport { getComments } from \"../../store/comment\";\nimport { createComment } from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\";\nimport EditFormPage from \"../EditFormPage\";\nimport ImagePage from \"../ImagePage\";\nimport NavBar from \"../Navbar\";\nimport { UserCircleIcon, HeartIcon, ChatIcon, DotsHorizontalIcon } from \"@heroicons/react/outline\";\nimport { HeartIcon as HeartIconFilled } from \"@heroicons/react/solid\";\nimport \"./imagesPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ImagesPage() {\n  _s();\n\n  const userId = useSelector(state => state.session.user.id);\n  const dispatch = useDispatch();\n  const images = useSelector(state => state.images);\n  const comments = useSelector(state => state.comments);\n  const imagesArr = Object.values(images);\n  const likes = useSelector(state => state.likes);\n  const likesArr = Object.values(likes);\n  const keys = Object.keys(likes);\n  const [imageButtonPopup, setImageButtonPopup] = useState(0);\n  const [editButtonPopup, setEditButtonPopup] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [commentShow, setCommentShow] = useState(0);\n  const [showOptions, setShowOptions] = useState(false);\n  const [users, setUsers] = useState([]);\n  const commentsArray = Object.values(comments);\n  const body = document.body;\n  const likedImages = likesArr.filter(like => like.user_id === userId);\n  console.log('likedImages =>', likedImages);\n  const myLikedImages = [];\n\n  const likeFunc = () => {\n    likesArr.forEach(thing => {\n      console.log('like userId =>', thing.user_id, 'currUser =>', userId);\n\n      if (thing.user_id === userId) {\n        myLikedImages.push(thing.image_id);\n        console.log(thing.image_id);\n      }\n    });\n  };\n\n  useEffect(() => {\n    likeFunc();\n    console.log('hello', myLikedImages.includes(+'1'));\n  }, [likeFunc, likedImages]);\n  useEffect(() => {\n    dispatch(getImages());\n    dispatch(getTheLikes());\n    dispatch(getComments());\n\n    async function fetchData() {\n      const response = await fetch(\"/api/users/\");\n      const responseData = await response.json();\n      setUsers(responseData.users);\n    }\n\n    fetchData();\n  }, [dispatch]);\n\n  const handleDelete = e => {\n    e.preventDefault(); // console.log(\"event target value => \", e.target.className.split(' ')[0])\n\n    dispatch(deleteOneImage(images[e.target.className.split(\" \")[0]]));\n  };\n\n  const handleLike = e => {\n    e.preventDefault();\n    const image_id = e.target.className.split(\" \")[1];\n\n    if (keys.filter(key => likes[key].image_id === +image_id && likes[key].user_id === userId).length) {\n      dispatch(unOneLike(image_id));\n    } else dispatch(setOneLike(image_id));\n  };\n\n  const onContentSubmit = async e => {\n    e.preventDefault();\n    setCommentShow(0);\n    const comment = await dispatch(createComment(e.target.className, content));\n\n    if (comment) {\n      setContent(\"\");\n    }\n  };\n\n  const handleEdit = imageId => {\n    setEditButtonPopup(imageId);\n    setShowOptions(false);\n  };\n\n  const getUser = userId => users.filter(user => user.id === userId)[0];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"games-page-body\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"game-post-container\",\n        children: imagesArr.map((image, i) => {\n          var _getUser, _likedImages$i, _likedImages$, _getUser2;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ind-post-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"game-post-header\",\n              children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                className: \"game-post-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: (_getUser = getUser(image.user_id)) === null || _getUser === void 0 ? void 0 : _getUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"game-post-image\",\n                src: `${image.url}`,\n                alt: \"user-upload\",\n                onClick: event => {\n                  setImageButtonPopup(image.id);\n                  body.style.backgroundColor = \"rgba(0, 0, 0, .7)\";\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ImagePage, {\n                trigger: imageButtonPopup,\n                setTrigger: setImageButtonPopup,\n                image: image,\n                commentsArray: commentsArray,\n                users: users\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-footer-icon-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `like-div ${image.id}`,\n                onClick: handleLike\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), ((_likedImages$i = likedImages[i]) === null || _likedImages$i === void 0 ? void 0 : _likedImages$i.image_id) === image.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: likedImages.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(HeartIconFilled, {\n                  className: \"post-footer-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: (_likedImages$ = likedImages[0]) === null || _likedImages$ === void 0 ? void 0 : _likedImages$.image_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(HeartIcon, {\n                  className: \"post-footer-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(ChatIcon, {\n                onClick: () => {\n                  if (commentShow === image.id) {\n                    setCommentShow(0);\n                  } else setCommentShow(image.id);\n\n                  setContent(\"\");\n                },\n                className: \"post-footer-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"caption-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"caption-username\",\n                children: (_getUser2 = getUser(image.user_id)) === null || _getUser2 === void 0 ? void 0 : _getUser2.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"caption\",\n                children: image.caption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), commentsArray === null || commentsArray === void 0 ? void 0 : commentsArray.map(comment => {\n              if (comment.image_id === image.id) {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n              }\n\n              return \"\";\n            }), commentShow === image.id && /*#__PURE__*/_jsxDEV(\"form\", {\n              className: image.id,\n              onSubmit: onContentSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                autoFocus: true,\n                name: \"CommentAutoFocus\",\n                placeholder: \"Comment\",\n                value: content,\n                onChange: e => {\n                  setContent(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), userId === image.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(DotsHorizontalIcon, {\n                onClick: () => setShowOptions(!showOptions),\n                className: \"post-options-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(EditFormPage, {\n                trigger: editButtonPopup,\n                setTrigger: setEditButtonPopup,\n                image: image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), showOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-options\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `${image.id} post-option-delete`,\n                  onClick: handleDelete,\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(image.id),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Go to post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setShowOptions(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)]\n          }, `${image.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImagesPage, \"ItoRiQdr9Z8Ate1lhxylCzPKXK4=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ImagesPage;\nexport default ImagesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesPage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/imagesPage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","getImages","deleteOneImage","getComments","createComment","getTheLikes","setOneLike","unOneLike","EditFormPage","ImagePage","NavBar","UserCircleIcon","HeartIcon","ChatIcon","DotsHorizontalIcon","HeartIconFilled","ImagesPage","userId","state","session","user","id","dispatch","images","comments","imagesArr","Object","values","likes","likesArr","keys","imageButtonPopup","setImageButtonPopup","editButtonPopup","setEditButtonPopup","content","setContent","commentShow","setCommentShow","showOptions","setShowOptions","users","setUsers","commentsArray","body","document","likedImages","filter","like","user_id","console","log","myLikedImages","likeFunc","forEach","thing","push","image_id","includes","fetchData","response","fetch","responseData","json","handleDelete","e","preventDefault","target","className","split","handleLike","key","length","onContentSubmit","comment","handleEdit","imageId","getUser","map","image","i","username","url","event","style","backgroundColor","caption","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImages, deleteOneImage } from \"../../store/image\";\nimport { getComments } from \"../../store/comment\";\nimport { createComment } from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\";\nimport EditFormPage from \"../EditFormPage\";\nimport ImagePage from \"../ImagePage\";\nimport NavBar from \"../Navbar\";\nimport {\n  UserCircleIcon,\n  HeartIcon,\n  ChatIcon,\n  DotsHorizontalIcon,\n} from \"@heroicons/react/outline\";\nimport { HeartIcon as HeartIconFilled } from \"@heroicons/react/solid\";\nimport \"./imagesPage.css\";\n\nfunction ImagesPage() {\n  const userId = useSelector((state) => state.session.user.id);\n\n  const dispatch = useDispatch();\n  const images = useSelector((state) => state.images);\n  const comments = useSelector((state) => state.comments);\n  const imagesArr = Object.values(images);\n  const likes = useSelector((state) => state.likes);\n  const likesArr = Object.values(likes);\n  const keys = Object.keys(likes);\n  const [imageButtonPopup, setImageButtonPopup] = useState(0);\n  const [editButtonPopup, setEditButtonPopup] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [commentShow, setCommentShow] = useState(0);\n  const [showOptions, setShowOptions] = useState(false);\n  const [users, setUsers] = useState([]);\n  const commentsArray = Object.values(comments);\n  const body = document.body;\n\n  const likedImages = likesArr.filter(like => like.user_id === userId)\n  console.log('likedImages =>', likedImages)\n\n  const myLikedImages = []\n  const likeFunc = () => {\n    likesArr.forEach((thing) => {\n      console.log('like userId =>', thing.user_id, 'currUser =>', userId)\n      if (thing.user_id === userId) {\n        myLikedImages.push(thing.image_id);\n        console.log(thing.image_id);\n      }\n    });\n  };\n\n  useEffect(() => {\n    likeFunc();\n    console.log('hello', myLikedImages.includes(+'1'))\n  }, [likeFunc, likedImages])\n\n\n  useEffect(() => {\n    dispatch(getImages());\n    dispatch(getTheLikes());\n    dispatch(getComments());\n    async function fetchData() {\n      const response = await fetch(\"/api/users/\");\n      const responseData = await response.json();\n      setUsers(responseData.users);\n    }\n    fetchData();\n  }, [dispatch]);\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    // console.log(\"event target value => \", e.target.className.split(' ')[0])\n    dispatch(deleteOneImage(images[e.target.className.split(\" \")[0]]));\n  };\n\n  const handleLike = (e) => {\n    e.preventDefault();\n\n    const image_id = e.target.className.split(\" \")[1];\n\n    if (\n      keys.filter(\n        (key) =>\n          likes[key].image_id === +image_id && likes[key].user_id === userId\n      ).length\n    ) {\n      dispatch(unOneLike(image_id));\n    } else dispatch(setOneLike(image_id));\n  };\n\n  const onContentSubmit = async (e) => {\n    e.preventDefault();\n    setCommentShow(0);\n\n    const comment = await dispatch(createComment(e.target.className, content));\n\n    if (comment) {\n      setContent(\"\");\n    }\n  };\n\n  const handleEdit = (imageId) => {\n    setEditButtonPopup(imageId);\n    setShowOptions(false);\n  };\n  const getUser = (userId) => users.filter((user) => user.id === userId)[0];\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"games-page-body\">\n        <ul className=\"game-post-container\">\n          {imagesArr.map((image, i) => (\n            <div className=\"ind-post-container\" key={`${image.id}`}>\n              <div className=\"game-post-header\">\n                <UserCircleIcon className=\"game-post-avatar\" />\n                <li>{getUser(image.user_id)?.username}</li>\n              </div>\n              <li>\n                <img\n                  className=\"game-post-image\"\n                  src={`${image.url}`}\n                  alt=\"user-upload\"\n                  onClick={(event) => {\n                    setImageButtonPopup(image.id);\n                    body.style.backgroundColor = \"rgba(0, 0, 0, .7)\";\n                  }}\n                ></img>\n                <ImagePage\n                  trigger={imageButtonPopup}\n                  setTrigger={setImageButtonPopup}\n                  image={image}\n                  commentsArray={commentsArray}\n                  users={users}\n                />\n              </li>\n              <div className=\"post-footer-icon-container\">\n                <div\n                  className={`like-div ${image.id}`}\n                  onClick={handleLike}\n                ></div>\n                {likedImages[i]?.image_id === image.id ? (\n                  <>\n                  <h2>{likedImages.length}</h2>\n                  <HeartIconFilled className=\"post-footer-icon\" /></>\n                  ) : (\n                    <>\n                    <h2>{likedImages[0]?.image_id}</h2>\n                    <HeartIcon className=\"post-footer-icon\" />\n                    </>\n                )}\n                <ChatIcon\n                  onClick={() => {\n                    if (commentShow === image.id) {\n                      setCommentShow(0);\n                    } else setCommentShow(image.id);\n                    setContent(\"\");\n                  }}\n                  className=\"post-footer-icon\"\n                />\n              </div>\n              <li className=\"caption-container\">\n                <div className=\"caption-username\">\n                  {getUser(image.user_id)?.username}\n                </div>\n                <div className=\"caption\">{image.caption}</div>\n              </li>\n              {commentsArray?.map((comment) => {\n                if (comment.image_id === image.id) {\n                  return (\n                    <>\n                      {/* <h3>{getUser(comment.user_id)?.username}</h3>\n                      <p>{comment.content}</p> */}\n                    </>\n                  );\n                }\n                return \"\";\n              })}\n              {commentShow === image.id && (\n                <form className={image.id} onSubmit={onContentSubmit}>\n                  <input\n                    autoFocus\n                    name=\"CommentAutoFocus\"\n                    placeholder=\"Comment\"\n                    value={content}\n                    onChange={(e) => {\n                      setContent(e.target.value);\n                    }}\n                  />\n                  <button>comment</button>\n                </form>\n              )}\n              {userId === image.user_id && (\n                <div>\n                  <DotsHorizontalIcon\n                    onClick={() => setShowOptions(!showOptions)}\n                    className=\"post-options-icon\"\n                  />\n                  <EditFormPage\n                    trigger={editButtonPopup}\n                    setTrigger={setEditButtonPopup}\n                    image={image}\n                  />\n                  {showOptions && (\n                    <div className=\"post-options\">\n                      <button\n                        className={`${image.id} post-option-delete`}\n                        onClick={handleDelete}\n                      >\n                        Delete\n                      </button>\n                      <button onClick={() => handleEdit(image.id)}>Edit</button>\n                      <button>Go to post</button>\n                      <button onClick={() => setShowOptions(false)}>\n                        Cancel\n                      </button>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagesPage;\n"]},"metadata":{},"sourceType":"module"}