{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ImagePage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImage, deleteOneImage } from \"../../store/image\";\nimport { createComment } from \"../../store/comment\";\nimport { XIcon, UserCircleIcon, HeartIcon, ChatIcon, DotsHorizontalIcon } from \"@heroicons/react/outline\";\nimport EditFormPage from \"../EditFormPage\";\nimport \"./ImagePage.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImagePage = props => {\n  _s();\n\n  var _getUser, _props$commentsArray;\n\n  const userId = useSelector(state => state.session.user.id);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [buttonPopup, setButtonPopup] = useState(0);\n  const [showImageOptions, setShowImageOptions] = useState(false);\n  const [showEditDelete, setShowEditDelete] = useState(false);\n  const body = document.body; // working with imagesPage file\n\n  const [contentB, setContentB] = useState(\"\");\n  const [editB, setEditB] = useState(false);\n  const [commentShowB, setCommentShowB] = useState(0);\n  const [commentIdB, setCommentIdB] = useState(-6);\n  useEffect(() => {\n    dispatch(getImage(props.image.id));\n  }, [dispatch, props.image.id]);\n\n  const handleClick = e => {\n    const imagePage = document.querySelector(\".image-page-body\");\n\n    if (e.target === imagePage) {\n      body.style.overflow = \"visible\";\n      props.setTrigger(0);\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener(\"click\", handleClick);\n  }, [handleClick]);\n\n  const getUser = userId => props.users.filter(user => user.id === userId)[0];\n\n  return props.trigger === props.image.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-page-body\",\n    children: [showImageOptions && userId === props.image.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-post-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.image.id,\n        onClick: props.handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setButtonPopup(props.image.id),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowImageOptions(!showImageOptions),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditFormPage, {\n        trigger: buttonPopup,\n        setTrigger: setButtonPopup,\n        image: props.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-page-con\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-page-left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image-page-image\",\n          src: `${props.image.url}`,\n          alt: \"user-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-page-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-header\",\n          children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n            className: \"image-page-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_getUser = getUser(props.image.user_id)) === null || _getUser === void 0 ? void 0 : _getUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), props.image.user_id === userId && /*#__PURE__*/_jsxDEV(DotsHorizontalIcon, {\n            className: \"image-options-icon\",\n            onClick: () => setShowImageOptions(!showImageOptions)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), props.commentsArray && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-comment-container\",\n          children: (_props$commentsArray = props.commentsArray) === null || _props$commentsArray === void 0 ? void 0 : _props$commentsArray.map(comment => {\n            if (comment.image_id === props.image.id) {\n              var _getUser2;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ind-comment\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-page-comment-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"image-page-ava-un\",\n                    onClick: () => {\n                      history.push(`/users/${comment.user_id}`);\n                      document.body.style.overflow = \"visible\";\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                      className: \"image-page-comment-avatar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"image-page-username\",\n                      children: (_getUser2 = getUser(comment.user_id)) === null || _getUser2 === void 0 ? void 0 : _getUser2.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"commentPDiv\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: props.canEditComment(comment),\n                      children: comment.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 25\n                  }, this), comment.user_id === userId && /*#__PURE__*/_jsxDEV(DotsHorizontalIcon, {\n                    className: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 56\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this), showEditDelete && userId === comment.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-post-options\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      props.onDeleteComment(props.image.id, comment.id, setContentB);\n                    },\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      setEditB(true);\n                      props.setEditB(true);\n                      setCommentShowB(props.image.id);\n                      setCommentIdB(comment.id);\n                      setContentB(`${props.comments[comment.id].content}`);\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this);\n            }\n\n            return \"\";\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-page-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-page-options-container\",\n            children: [/*#__PURE__*/_jsxDEV(HeartIcon, {\n              className: \"image-page-options-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChatIcon, {\n              className: \"image-page-options-icon\",\n              onClick: () => {\n                if (commentShowB === props.image.id) {\n                  setCommentShowB(0);\n                } else setCommentShowB(props.image.id);\n\n                setContentB(\"\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), editB === false && props.postCommentForm(props.image.id, props.onContentSubmit, contentB, setContentB), editB === true && props.editB && props.editCommentForm(props.image.id, commentIdB, props.onEditComment, contentB, setContentB)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"x-button-wrap\",\n          onClick: () => props.setTrigger(0),\n          children: /*#__PURE__*/_jsxDEV(XIcon, {\n            onClick: () => {\n              body.style.overflow = \"visible\";\n            },\n            className: \"image-page-close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this) : \"\";\n};\n\n_s(ImagePage, \"dJaEMj73f1DUTpNzbUQ+w0nbnNo=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = ImagePage;\nexport default ImagePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/ImagePage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","getImage","deleteOneImage","createComment","XIcon","UserCircleIcon","HeartIcon","ChatIcon","DotsHorizontalIcon","EditFormPage","useHistory","ImagePage","props","userId","state","session","user","id","dispatch","history","buttonPopup","setButtonPopup","showImageOptions","setShowImageOptions","showEditDelete","setShowEditDelete","body","document","contentB","setContentB","editB","setEditB","commentShowB","setCommentShowB","commentIdB","setCommentIdB","image","handleClick","e","imagePage","querySelector","target","style","overflow","setTrigger","addEventListener","getUser","users","filter","trigger","user_id","handleDelete","url","username","commentsArray","map","comment","image_id","push","canEditComment","content","onDeleteComment","comments","postCommentForm","onContentSubmit","editCommentForm","onEditComment"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImage, deleteOneImage } from \"../../store/image\";\nimport { createComment } from \"../../store/comment\";\nimport {\n  XIcon,\n  UserCircleIcon,\n  HeartIcon,\n  ChatIcon,\n  DotsHorizontalIcon,\n} from \"@heroicons/react/outline\";\nimport EditFormPage from \"../EditFormPage\";\nimport \"./ImagePage.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ImagePage = (props) => {\n  const userId = useSelector((state) => state.session.user.id);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [buttonPopup, setButtonPopup] = useState(0);\n  const [showImageOptions, setShowImageOptions] = useState(false);\n  const [showEditDelete, setShowEditDelete] = useState(false);\n\n  const body = document.body;\n\n  // working with imagesPage file\n  const [contentB, setContentB] = useState(\"\");\n  const [editB, setEditB] = useState(false);\n  const [commentShowB, setCommentShowB] = useState(0);\n  const [commentIdB, setCommentIdB] = useState(-6);\n\n  useEffect(() => {\n    dispatch(getImage(props.image.id));\n  }, [dispatch, props.image.id]);\n\n  const handleClick = (e) => {\n    const imagePage = document.querySelector(\".image-page-body\");\n    if (e.target === imagePage) {\n      body.style.overflow = \"visible\";\n      props.setTrigger(0);\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener(\"click\", handleClick);\n  }, [handleClick]);\n\n  const getUser = (userId) =>\n    props.users.filter((user) => user.id === userId)[0];\n\n  return props.trigger === props.image.id ? (\n    <div className=\"image-page-body\">\n      {showImageOptions && userId === props.image.user_id && (\n        <div className=\"image-post-options\">\n          <button className={props.image.id} onClick={props.handleDelete}>\n            Delete\n          </button>\n          <button onClick={() => setButtonPopup(props.image.id)}>Edit</button>\n          <button onClick={() => setShowImageOptions(!showImageOptions)}>\n            Close\n          </button>\n          <EditFormPage\n            trigger={buttonPopup}\n            setTrigger={setButtonPopup}\n            image={props.image}\n          />\n        </div>\n      )}\n      <div className=\"image-page-con\">\n        <div className=\"image-page-left\">\n          <img\n            className={\"image-page-image\"}\n            src={`${props.image.url}`}\n            alt=\"user-upload\"\n          ></img>\n        </div>\n        <div className=\"image-page-right\">\n          <div className=\"image-page-header\">\n            <UserCircleIcon className=\"image-page-avatar\" />\n            <p>{getUser(props.image.user_id)?.username}</p>\n            {props.image.user_id === userId && (\n              <DotsHorizontalIcon\n                className=\"image-options-icon\"\n                onClick={() => setShowImageOptions(!showImageOptions)}\n              />\n            )}\n          </div>\n          {props.commentsArray && (\n            <div className=\"image-page-comment-container\">\n              {props.commentsArray?.map((comment) => {\n                if (comment.image_id === props.image.id) {\n                  return (\n                    <div className=\"ind-comment\">\n                      <div className=\"image-page-comment-header\">\n                        <div\n                          className=\"image-page-ava-un\"\n                          onClick={() => {\n                            history.push(`/users/${comment.user_id}`);\n                            document.body.style.overflow = \"visible\";\n                          }}\n                        >\n                          <UserCircleIcon className=\"image-page-comment-avatar\" />\n                          <p className=\"image-page-username\">\n                            {getUser(comment.user_id)?.username}\n                          </p>\n                        </div>\n                        <div className=\"commentPDiv\">\n                          <p className={props.canEditComment(comment)}>\n                            {comment.content}\n                          </p>\n                        </div>\n                        {comment.user_id === userId && <DotsHorizontalIcon className=\"\"/>}\n                      </div>\n                      {showEditDelete && userId === comment.user_id && (\n                        <div className=\"image-post-options\">\n                          <button\n                            onClick={(e) => {\n                              props.onDeleteComment(\n                                props.image.id,\n                                comment.id,\n                                setContentB\n                              );\n                            }}\n                          >\n                            Delete\n                          </button>\n                          <button\n                            onClick={() => {\n                              setEditB(true);\n                              props.setEditB(true);\n                              setCommentShowB(props.image.id);\n                              setCommentIdB(comment.id);\n                              setContentB(\n                                `${props.comments[comment.id].content}`\n                              );\n                            }}\n                          >\n                            Edit\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  );\n                }\n                return \"\";\n              })}\n            </div>\n          )}\n          <div className=\"image-page-footer\">\n            <div className=\"image-page-options-container\">\n              <HeartIcon className=\"image-page-options-icon\" />\n              <ChatIcon\n                className=\"image-page-options-icon\"\n                onClick={() => {\n                  if (commentShowB === props.image.id) {\n                    setCommentShowB(0);\n                  } else setCommentShowB(props.image.id);\n                  setContentB(\"\");\n                }}\n              />\n            </div>\n            {editB === false &&\n              props.postCommentForm(\n                props.image.id,\n                props.onContentSubmit,\n                contentB,\n                setContentB\n              )}\n            {editB === true &&\n              props.editB &&\n              props.editCommentForm(\n                props.image.id,\n                commentIdB,\n                props.onEditComment,\n                contentB,\n                setContentB\n              )}\n          </div>\n\n          <button className=\"x-button-wrap\" onClick={() => props.setTrigger(0)}>\n            <XIcon\n              onClick={() => {\n                body.style.overflow = \"visible\";\n              }}\n              className=\"image-page-close\"\n            />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n};\n\nexport default ImagePage;\n"]},"metadata":{},"sourceType":"module"}