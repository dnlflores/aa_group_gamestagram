{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/HomePage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getImages, deleteOneImage, getUserImages } from \"../../store/image\";\nimport { getFollowers, getFollowings } from \"../../store/follow\";\nimport { getComments, createComment, editOneComment, deleteOneComment } from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\";\nimport EditFormPage from \"../EditFormPage\";\nimport ImagePage from \"../ImagePage\";\nimport NavBar from \"../Navbar\";\nimport { UserCircleIcon, HeartIcon, ChatIcon, DotsHorizontalIcon } from \"@heroicons/react/outline\";\nimport { HeartIcon as HeartIconFilled } from \"@heroicons/react/solid\";\nimport SideBar from \"../SideBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomePage() {\n  _s();\n\n  const userId = useSelector(state => state.session.user.id);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const images = useSelector(state => state.images);\n  const comments = useSelector(state => state.comments);\n  const followings = useSelector(state => Object.values(state.follows.followings || {}));\n  const imagesArr = Object.values(images);\n  const likes = useSelector(state => state.likes);\n  const likesArr = Object.values(likes);\n  const keys = Object.keys(likes);\n  const [imageButtonPopup, setImageButtonPopup] = useState(0);\n  const [editButtonPopup, setEditButtonPopup] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [commentShow, setCommentShow] = useState(0);\n  const [showOptions, setShowOptions] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [commentId, setCommentId] = useState(-2);\n  const commentsArray = Object.values(comments);\n  const body = document.body;\n  const likedImages = likesArr.filter(like => like.user_id === userId);\n  const [editB, setEditB] = useState(false);\n  const followedImages = [];\n\n  for (let i = 0; i < followings.length; i++) {\n    const user = followings[i];\n\n    for (let j = 0; j < imagesArr.length; j++) {\n      const image = imagesArr[j];\n      if (user.id === image.user_id) followedImages.push(image);\n    }\n  }\n\n  console.log(\"THIS IS THE FOLLOWED IMAGES => \", followedImages);\n  useEffect(() => {\n    dispatch(getImages());\n    dispatch(getTheLikes());\n    dispatch(getComments());\n    dispatch(getFollowings(userId));\n\n    async function fetchData() {\n      const response = await fetch(\"/api/users/\");\n      const responseData = await response.json();\n      setUsers(responseData.users);\n    }\n\n    fetchData();\n  }, [dispatch, userId]);\n\n  const handleDelete = e => {\n    e.preventDefault();\n    dispatch(deleteOneImage(images[e.target.className.split(\" \")[0]]));\n  };\n\n  const handleLike = e => {\n    e.preventDefault();\n    const image_id = e.target.className.split(\" \")[1];\n\n    if (keys.filter(key => likes[key].image_id === +image_id && likes[key].user_id === userId).length) {\n      dispatch(unOneLike(image_id));\n    } else dispatch(setOneLike(image_id));\n  };\n\n  const onContentSubmit = async e => {\n    e.preventDefault();\n\n    if (e.target.value) {\n      await dispatch(createComment(e.target.className, e.target.value));\n      setContent(\"\");\n    } else {\n      await dispatch(createComment(e.target.className, e.target[\"0\"].value));\n      e.target[\"0\"].value = \"\";\n    }\n  };\n\n  const onEditComment = async e => {\n    e.preventDefault();\n    setCommentShow(0);\n    const str = e.target.className.split(\":\");\n    const image_id = str[0];\n    const comment_id = str[1];\n\n    if (content) {\n      await dispatch(editOneComment(+image_id, +comment_id, content));\n      setContent(\"\");\n    } else {\n      await dispatch(editOneComment(+image_id, +comment_id, e.target[\"0\"].value));\n      e.target[\"0\"].value = \"\";\n      setEditB(false);\n    }\n  };\n\n  const onDeleteComment = async (image_id, comment_id, setContentB = null) => {\n    if (setContentB) setContentB(\"\");\n    await dispatch(deleteOneComment(image_id, comment_id));\n  };\n\n  const handleEdit = imageId => {\n    setEditButtonPopup(imageId);\n    setShowOptions(false);\n  };\n\n  const postCommentForm = (image_id, submitFn, content) => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form-comment-con\",\n      className: image_id,\n      onSubmit: submitFn,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: \"true\",\n        className: `input-comment`,\n        name: \"CommentAutoFocus\",\n        placeholder: \"Comment\",\n        value: content,\n        onChange: e => {\n          if (image_id === e.target.className.split(\"-\")[2]) {\n            setContent(e.target.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"comment-submit-button\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  };\n\n  const editCommentForm = (image_id, commentId, editFn, content) => /*#__PURE__*/_jsxDEV(\"form\", {\n    className: `${image_id}:${commentId}`,\n    onSubmit: editFn // onEditComment\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      autoFocus: true,\n      placeholder: \"Edit\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"submit edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n\n  const getUser = userId => users.filter(user => user.id === userId)[0];\n\n  const checkIfLiked = imageId => {\n    for (let i = 0; i < likedImages.length; i++) {\n      if (+likedImages[i].image_id === +imageId) return true;\n    }\n\n    return false;\n  };\n\n  const canEditComment = comment => {\n    return \"editCom\".concat(String(comment.user_id === userId).toUpperCase());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"games-page-body\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"game-post-container\",\n        children: followedImages.map((image, i) => {\n          var _getUser, _getUser2;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ind-post-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"game-post-header\",\n              children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                className: \"game-post-avatar\",\n                onClick: event => history.push(`/users/${image.user_id}`)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: (_getUser = getUser(image.user_id)) === null || _getUser === void 0 ? void 0 : _getUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"game-post-image\",\n                src: `${image.url}`,\n                alt: \"user-upload\",\n                onClick: event => {\n                  setImageButtonPopup(image.id);\n                  body.style.overflow = \"hidden\";\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ImagePage, {\n                trigger: imageButtonPopup,\n                setTrigger: setImageButtonPopup,\n                image: image,\n                commentsArray: commentsArray,\n                comments: comments,\n                users: users,\n                content: content //new props\n                ,\n                edit: edit,\n                onContentSubmit: onContentSubmit,\n                postCommentForm: postCommentForm,\n                editCommentForm: editCommentForm,\n                onEditComment: onEditComment,\n                onDeleteComment: onDeleteComment,\n                canEditComment: canEditComment,\n                editB: editB,\n                setEditB: setEditB,\n                handleDelete: handleDelete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-footer-icon-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `like-div ${image.id}`,\n                onClick: handleLike\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), checkIfLiked(image.id) ? /*#__PURE__*/_jsxDEV(HeartIconFilled, {\n                className: \"post-footer-icon liked-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(HeartIcon, {\n                className: \"post-footer-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ChatIcon, {\n                onClick: () => {\n                  setImageButtonPopup(image.id);\n                  body.style.overflow = \"hidden\";\n                },\n                className: \"post-footer-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"caption-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"caption-username\",\n                children: (_getUser2 = getUser(image.user_id)) === null || _getUser2 === void 0 ? void 0 : _getUser2.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"caption\",\n                children: image.caption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), commentsArray.filter(comment => image.id === comment.image_id).slice(-2).map(comment => {\n              if (comment.image_id === image.id) {\n                var _getUser3;\n\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"games-comment-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"games-username\",\n                    children: (_getUser3 = getUser(comment.user_id)) === null || _getUser3 === void 0 ? void 0 : _getUser3.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"commentPDiv\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      id: comment.id,\n                      className: canEditComment(comment),\n                      children: [comment.content, /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          setEdit(true);\n                          setCommentShow(image.id);\n                          setCommentId(comment.id);\n                          setContent(`${comments[comment.id].content}`);\n                        },\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 269,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          onDeleteComment(image.id, comment.id);\n                        },\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 23\n                }, this);\n              }\n\n              return \"\";\n            }), commentsArray.filter(comment => image.id === comment.image_id).length > 2 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"games-view-comments\",\n              onClick: () => {\n                setImageButtonPopup(image.id);\n                body.style.overflow = \"hidden\";\n              },\n              children: \"View all comments...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-container-div\",\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                id: \"form-comment-con\",\n                className: image.id,\n                onSubmit: onContentSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  required: \"true\",\n                  className: `input-comment`,\n                  name: \"CommentAutoFocus\",\n                  placeholder: \"Comment\",\n                  value: content,\n                  onChange: e => {\n                    setContent(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"comment-submit-button\",\n                  children: \"Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), commentShow === image.id && edit === true && editCommentForm(image.id, commentId, onEditComment, content)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), userId === image.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(DotsHorizontalIcon, {\n                onClick: () => setShowOptions(!showOptions),\n                className: \"post-options-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(EditFormPage, {\n                trigger: editButtonPopup,\n                setTrigger: setEditButtonPopup,\n                image: image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), showOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-options\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `${image.id} post-option-delete`,\n                  onClick: handleDelete,\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(image.id),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Go to post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setShowOptions(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, `${image.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"rB7ClIlySXSJ1fXEm8PuPETlcnk=\", false, function () {\n  return [useSelector, useHistory, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/HomePage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","useHistory","getImages","deleteOneImage","getUserImages","getFollowers","getFollowings","getComments","createComment","editOneComment","deleteOneComment","getTheLikes","setOneLike","unOneLike","EditFormPage","ImagePage","NavBar","UserCircleIcon","HeartIcon","ChatIcon","DotsHorizontalIcon","HeartIconFilled","SideBar","HomePage","userId","state","session","user","id","history","dispatch","images","comments","followings","Object","values","follows","imagesArr","likes","likesArr","keys","imageButtonPopup","setImageButtonPopup","editButtonPopup","setEditButtonPopup","content","setContent","commentShow","setCommentShow","showOptions","setShowOptions","users","setUsers","edit","setEdit","commentId","setCommentId","commentsArray","body","document","likedImages","filter","like","user_id","editB","setEditB","followedImages","i","length","j","image","push","console","log","fetchData","response","fetch","responseData","json","handleDelete","e","preventDefault","target","className","split","handleLike","image_id","key","onContentSubmit","value","onEditComment","str","comment_id","onDeleteComment","setContentB","handleEdit","imageId","postCommentForm","submitFn","editCommentForm","editFn","getUser","checkIfLiked","canEditComment","comment","concat","String","toUpperCase","map","event","username","url","style","overflow","caption","slice"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,aAApC,QAAyD,mBAAzD;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,oBAA5C;AACA,SACEC,WADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,gBAJF,QAKO,qBALP;AAMA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,QAAmD,mBAAnD;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SACEC,cADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,kBAJF,QAKO,0BALP;AAMA,SAASF,SAAS,IAAIG,eAAtB,QAA6C,wBAA7C;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAMC,MAAM,GAAGxB,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,EAA/B,CAA1B;AACA,QAAMC,OAAO,GAAG5B,UAAU,EAA1B;AACA,QAAM6B,QAAQ,GAAG/B,WAAW,EAA5B;AACA,QAAMgC,MAAM,GAAG/B,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACM,MAAlB,CAA1B;AACA,QAAMC,QAAQ,GAAGhC,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACO,QAAlB,CAA5B;AACA,QAAMC,UAAU,GAAGjC,WAAW,CAAEyB,KAAD,IAC7BS,MAAM,CAACC,MAAP,CAAcV,KAAK,CAACW,OAAN,CAAcH,UAAd,IAA4B,EAA1C,CAD4B,CAA9B;AAGA,QAAMI,SAAS,GAAGH,MAAM,CAACC,MAAP,CAAcJ,MAAd,CAAlB;AACA,QAAMO,KAAK,GAAGtC,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACa,KAAlB,CAAzB;AACA,QAAMC,QAAQ,GAAGL,MAAM,CAACC,MAAP,CAAcG,KAAd,CAAjB;AACA,QAAME,IAAI,GAAGN,MAAM,CAACM,IAAP,CAAYF,KAAZ,CAAb;AACA,QAAM,CAACG,gBAAD,EAAmBC,mBAAnB,IAA0C5C,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAAC6C,eAAD,EAAkBC,kBAAlB,IAAwC9C,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAAC+C,OAAD,EAAUC,UAAV,IAAwBhD,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiD,WAAD,EAAcC,cAAd,IAAgClD,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACmD,WAAD,EAAcC,cAAd,IAAgCpD,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACqD,KAAD,EAAQC,QAAR,IAAoBtD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACuD,IAAD,EAAOC,OAAP,IAAkBxD,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACyD,SAAD,EAAYC,YAAZ,IAA4B1D,QAAQ,CAAC,CAAC,CAAF,CAA1C;AACA,QAAM2D,aAAa,GAAGvB,MAAM,CAACC,MAAP,CAAcH,QAAd,CAAtB;AACA,QAAM0B,IAAI,GAAGC,QAAQ,CAACD,IAAtB;AACA,QAAME,WAAW,GAAGrB,QAAQ,CAACsB,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiBvC,MAA3C,CAApB;AAEA,QAAM,CAACwC,KAAD,EAAQC,QAAR,IAAoBnE,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAMoE,cAAc,GAAG,EAAvB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlC,UAAU,CAACmC,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,UAAMxC,IAAI,GAAGM,UAAU,CAACkC,CAAD,CAAvB;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhC,SAAS,CAAC+B,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AACzC,YAAMC,KAAK,GAAGjC,SAAS,CAACgC,CAAD,CAAvB;AACA,UAAI1C,IAAI,CAACC,EAAL,KAAY0C,KAAK,CAACP,OAAtB,EAA+BG,cAAc,CAACK,IAAf,CAAoBD,KAApB;AAChC;AACF;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CP,cAA/C;AAEArE,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,QAAQ,CAAC5B,SAAS,EAAV,CAAR;AACA4B,IAAAA,QAAQ,CAACnB,WAAW,EAAZ,CAAR;AACAmB,IAAAA,QAAQ,CAACvB,WAAW,EAAZ,CAAR;AACAuB,IAAAA,QAAQ,CAACxB,aAAa,CAACkB,MAAD,CAAd,CAAR;;AACA,mBAAekD,SAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,CAA5B;AACA,YAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACA1B,MAAAA,QAAQ,CAACyB,YAAY,CAAC1B,KAAd,CAAR;AACD;;AACDuB,IAAAA,SAAS;AACV,GAXQ,EAWN,CAAC5C,QAAD,EAAWN,MAAX,CAXM,CAAT;;AAaA,QAAMuD,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAnD,IAAAA,QAAQ,CAAC3B,cAAc,CAAC4B,MAAM,CAACiD,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAD,CAAP,CAAf,CAAR;AACD,GAHD;;AAKA,QAAMC,UAAU,GAAIL,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMK,QAAQ,GAAGN,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAjB;;AAEA,QACE5C,IAAI,CAACqB,MAAL,CACG0B,GAAD,IACEjD,KAAK,CAACiD,GAAD,CAAL,CAAWD,QAAX,KAAwB,CAACA,QAAzB,IAAqChD,KAAK,CAACiD,GAAD,CAAL,CAAWxB,OAAX,KAAuBvC,MAFhE,EAGE4C,MAJJ,EAKE;AACAtC,MAAAA,QAAQ,CAACjB,SAAS,CAACyE,QAAD,CAAV,CAAR;AACD,KAPD,MAOOxD,QAAQ,CAAClB,UAAU,CAAC0E,QAAD,CAAX,CAAR;AACR,GAZD;;AAcA,QAAME,eAAe,GAAG,MAAOR,CAAP,IAAa;AACnCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAID,CAAC,CAACE,MAAF,CAASO,KAAb,EAAoB;AAClB,YAAM3D,QAAQ,CAACtB,aAAa,CAACwE,CAAC,CAACE,MAAF,CAASC,SAAV,EAAqBH,CAAC,CAACE,MAAF,CAASO,KAA9B,CAAd,CAAd;AACA3C,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KAHD,MAGO;AACL,YAAMhB,QAAQ,CAACtB,aAAa,CAACwE,CAAC,CAACE,MAAF,CAASC,SAAV,EAAqBH,CAAC,CAACE,MAAF,CAAS,GAAT,EAAcO,KAAnC,CAAd,CAAd;AACAT,MAAAA,CAAC,CAACE,MAAF,CAAS,GAAT,EAAcO,KAAd,GAAsB,EAAtB;AACD;AACF,GATD;;AAWA,QAAMC,aAAa,GAAG,MAAOV,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACAjC,IAAAA,cAAc,CAAC,CAAD,CAAd;AACA,UAAM2C,GAAG,GAAGX,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBC,KAAnB,CAAyB,GAAzB,CAAZ;AACA,UAAME,QAAQ,GAAGK,GAAG,CAAC,CAAD,CAApB;AACA,UAAMC,UAAU,GAAGD,GAAG,CAAC,CAAD,CAAtB;;AACA,QAAI9C,OAAJ,EAAa;AACX,YAAMf,QAAQ,CAACrB,cAAc,CAAC,CAAC6E,QAAF,EAAY,CAACM,UAAb,EAAyB/C,OAAzB,CAAf,CAAd;AACAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KAHD,MAGO;AACL,YAAMhB,QAAQ,CACZrB,cAAc,CAAC,CAAC6E,QAAF,EAAY,CAACM,UAAb,EAAyBZ,CAAC,CAACE,MAAF,CAAS,GAAT,EAAcO,KAAvC,CADF,CAAd;AAGAT,MAAAA,CAAC,CAACE,MAAF,CAAS,GAAT,EAAcO,KAAd,GAAsB,EAAtB;AACAxB,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GAhBD;;AAkBA,QAAM4B,eAAe,GAAG,OAAOP,QAAP,EAAiBM,UAAjB,EAA6BE,WAAW,GAAG,IAA3C,KAAoD;AAC1E,QAAIA,WAAJ,EAAiBA,WAAW,CAAC,EAAD,CAAX;AACjB,UAAMhE,QAAQ,CAACpB,gBAAgB,CAAC4E,QAAD,EAAWM,UAAX,CAAjB,CAAd;AACD,GAHD;;AAKA,QAAMG,UAAU,GAAIC,OAAD,IAAa;AAC9BpD,IAAAA,kBAAkB,CAACoD,OAAD,CAAlB;AACA9C,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAHD;;AAKA,QAAM+C,eAAe,GAAG,CAACX,QAAD,EAAWY,QAAX,EAAqBrD,OAArB,KAAiC;AACvD,wBACE;AAAM,MAAA,EAAE,EAAC,kBAAT;AAA4B,MAAA,SAAS,EAAEyC,QAAvC;AAAiD,MAAA,QAAQ,EAAEY,QAA3D;AAAA,8BACE;AACE,QAAA,QAAQ,EAAC,MADX;AAEE,QAAA,SAAS,EAAG,eAFd;AAGE,QAAA,IAAI,EAAC,kBAHP;AAIE,QAAA,WAAW,EAAC,SAJd;AAKE,QAAA,KAAK,EAAErD,OALT;AAME,QAAA,QAAQ,EAAGmC,CAAD,IAAO;AACf,cAAIM,QAAQ,KAAKN,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAjB,EAAmD;AACjDtC,YAAAA,UAAU,CAACkC,CAAC,CAACE,MAAF,CAASO,KAAV,CAAV;AACD;AACF;AAVH;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAlBD;;AAoBA,QAAMU,eAAe,GAAG,CAACb,QAAD,EAAW/B,SAAX,EAAsB6C,MAAtB,EAA8BvD,OAA9B,kBACtB;AACE,IAAA,SAAS,EAAG,GAAEyC,QAAS,IAAG/B,SAAU,EADtC;AAEE,IAAA,QAAQ,EAAE6C,MAFZ,CAEoB;AAFpB;AAAA,4BAIE;AACE,MAAA,SAAS,MADX;AAEE,MAAA,WAAW,EAAC,MAFd;AAGE,MAAA,KAAK,EAAEvD,OAHT;AAIE,MAAA,QAAQ,EAAGmC,CAAD,IAAOlC,UAAU,CAACkC,CAAC,CAACE,MAAF,CAASO,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAeA,QAAMY,OAAO,GAAI7E,MAAD,IAAY2B,KAAK,CAACU,MAAN,CAAclC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAnC,EAA2C,CAA3C,CAA5B;;AAEA,QAAM8E,YAAY,GAAIN,OAAD,IAAa;AAChC,SAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,WAAW,CAACQ,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,UAAI,CAACP,WAAW,CAACO,CAAD,CAAX,CAAemB,QAAhB,KAA6B,CAACU,OAAlC,EAA2C,OAAO,IAAP;AAC5C;;AACD,WAAO,KAAP;AACD,GALD;;AAOA,QAAMO,cAAc,GAAIC,OAAD,IAAa;AAClC,WAAO,UAAUC,MAAV,CAAiBC,MAAM,CAACF,OAAO,CAACzC,OAAR,KAAoBvC,MAArB,CAAN,CAAmCmF,WAAnC,EAAjB,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA,kBACGzC,cAAc,CAAC0C,GAAf,CAAmB,CAACtC,KAAD,EAAQH,CAAR;AAAA;;AAAA,8BAClB;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,sCACE,QAAC,cAAD;AACE,gBAAA,SAAS,EAAC,kBADZ;AAEE,gBAAA,OAAO,EAAG0C,KAAD,IAAWhF,OAAO,CAAC0C,IAAR,CAAc,UAASD,KAAK,CAACP,OAAQ,EAArC;AAFtB;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAA,sCAAKsC,OAAO,CAAC/B,KAAK,CAACP,OAAP,CAAZ,6CAAK,SAAwB+C;AAA7B;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAA,sCACE;AACE,gBAAA,SAAS,EAAC,iBADZ;AAEE,gBAAA,GAAG,EAAG,GAAExC,KAAK,CAACyC,GAAI,EAFpB;AAGE,gBAAA,GAAG,EAAC,aAHN;AAIE,gBAAA,OAAO,EAAGF,KAAD,IAAW;AAClBnE,kBAAAA,mBAAmB,CAAC4B,KAAK,CAAC1C,EAAP,CAAnB;AACA8B,kBAAAA,IAAI,CAACsD,KAAL,CAAWC,QAAX,GAAsB,QAAtB;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE,QAAC,SAAD;AACE,gBAAA,OAAO,EAAExE,gBADX;AAEE,gBAAA,UAAU,EAAEC,mBAFd;AAGE,gBAAA,KAAK,EAAE4B,KAHT;AAIE,gBAAA,aAAa,EAAEb,aAJjB;AAKE,gBAAA,QAAQ,EAAEzB,QALZ;AAME,gBAAA,KAAK,EAAEmB,KANT;AAOE,gBAAA,OAAO,EAAEN,OAPX,CAQE;AARF;AASE,gBAAA,IAAI,EAAEQ,IATR;AAUE,gBAAA,eAAe,EAAEmC,eAVnB;AAWE,gBAAA,eAAe,EAAES,eAXnB;AAYE,gBAAA,eAAe,EAAEE,eAZnB;AAaE,gBAAA,aAAa,EAAET,aAbjB;AAcE,gBAAA,eAAe,EAAEG,eAdnB;AAeE,gBAAA,cAAc,EAAEU,cAflB;AAgBE,gBAAA,KAAK,EAAEvC,KAhBT;AAiBE,gBAAA,QAAQ,EAAEC,QAjBZ;AAkBE,gBAAA,YAAY,EAAEc;AAlBhB;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eAuCE;AAAK,cAAA,SAAS,EAAC,4BAAf;AAAA,sCACE;AACE,gBAAA,SAAS,EAAG,YAAWT,KAAK,CAAC1C,EAAG,EADlC;AAEE,gBAAA,OAAO,EAAEyD;AAFX;AAAA;AAAA;AAAA;AAAA,sBADF,EAKGiB,YAAY,CAAChC,KAAK,CAAC1C,EAAP,CAAZ,gBACC,QAAC,eAAD;AAAiB,gBAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,sBADD,gBAGC,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,sBARJ,eAUE,QAAC,QAAD;AACE,gBAAA,OAAO,EAAE,MAAM;AACbc,kBAAAA,mBAAmB,CAAC4B,KAAK,CAAC1C,EAAP,CAAnB;AACA8B,kBAAAA,IAAI,CAACsD,KAAL,CAAWC,QAAX,GAAsB,QAAtB;AACD,iBAJH;AAKE,gBAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvCF,eAyDE;AAAI,cAAA,SAAS,EAAC,mBAAd;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,kBAAf;AAAA,uCACGZ,OAAO,CAAC/B,KAAK,CAACP,OAAP,CADV,8CACG,UAAwB+C;AAD3B;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAK,gBAAA,SAAS,EAAC,SAAf;AAAA,0BAA0BxC,KAAK,CAAC4C;AAAhC;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzDF,EAgEGzD,aAAa,CACXI,MADF,CACU2C,OAAD,IAAalC,KAAK,CAAC1C,EAAN,KAAa4E,OAAO,CAAClB,QAD3C,EAEE6B,KAFF,CAEQ,CAAC,CAFT,EAGEP,GAHF,CAGOJ,OAAD,IAAa;AAChB,kBAAIA,OAAO,CAAClB,QAAR,KAAqBhB,KAAK,CAAC1C,EAA/B,EAAmC;AAAA;;AACjC,oCACE;AAAK,kBAAA,SAAS,EAAC,yBAAf;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,gBAAf;AAAA,2CACGyE,OAAO,CAACG,OAAO,CAACzC,OAAT,CADV,8CACG,UAA0B+C;AAD7B;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAK,oBAAA,SAAS,EAAC,aAAf;AAAA,2CACE;AACE,sBAAA,EAAE,EAAEN,OAAO,CAAC5E,EADd;AAEE,sBAAA,SAAS,EAAE2E,cAAc,CAACC,OAAD,CAF3B;AAAA,iCAIGA,OAAO,CAAC3D,OAJX,eAKE;AACE,wBAAA,OAAO,EAAE,MAAM;AACbS,0BAAAA,OAAO,CAAC,IAAD,CAAP;AACAN,0BAAAA,cAAc,CAACsB,KAAK,CAAC1C,EAAP,CAAd;AACA4B,0BAAAA,YAAY,CAACgD,OAAO,CAAC5E,EAAT,CAAZ;AACAkB,0BAAAA,UAAU,CAAE,GAAEd,QAAQ,CAACwE,OAAO,CAAC5E,EAAT,CAAR,CAAqBiB,OAAQ,EAAjC,CAAV;AACD,yBANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BALF,eAeE;AACE,wBAAA,OAAO,EAAE,MAAM;AACbgD,0BAAAA,eAAe,CAACvB,KAAK,CAAC1C,EAAP,EAAW4E,OAAO,CAAC5E,EAAnB,CAAf;AACD,yBAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAgCD;;AACD,qBAAO,EAAP;AACD,aAvCF,CAhEH,EAwGG6B,aAAa,CAACI,MAAd,CAAsB2C,OAAD,IAAalC,KAAK,CAAC1C,EAAN,KAAa4E,OAAO,CAAClB,QAAvD,EACElB,MADF,GACW,CADX,iBAEC;AACE,cAAA,SAAS,EAAC,qBADZ;AAEE,cAAA,OAAO,EAAE,MAAM;AACb1B,gBAAAA,mBAAmB,CAAC4B,KAAK,CAAC1C,EAAP,CAAnB;AACA8B,gBAAAA,IAAI,CAACsD,KAAL,CAAWC,QAAX,GAAsB,QAAtB;AACD,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA1GJ,eAoHE;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,sCACE;AACE,gBAAA,EAAE,EAAC,kBADL;AAEE,gBAAA,SAAS,EAAE3C,KAAK,CAAC1C,EAFnB;AAGE,gBAAA,QAAQ,EAAE4D,eAHZ;AAAA,wCAKE;AACE,kBAAA,QAAQ,EAAC,MADX;AAEE,kBAAA,SAAS,EAAG,eAFd;AAGE,kBAAA,IAAI,EAAC,kBAHP;AAIE,kBAAA,WAAW,EAAC,SAJd;AAKE,kBAAA,KAAK,EAAE3C,OALT;AAME,kBAAA,QAAQ,EAAGmC,CAAD,IAAO;AACflC,oBAAAA,UAAU,CAACkC,CAAC,CAACE,MAAF,CAASO,KAAV,CAAV;AACD;AARH;AAAA;AAAA;AAAA;AAAA,wBALF,eAeE;AAAQ,kBAAA,SAAS,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAkBG1C,WAAW,KAAKuB,KAAK,CAAC1C,EAAtB,IACCyB,IAAI,KAAK,IADV,IAEC8C,eAAe,CAAC7B,KAAK,CAAC1C,EAAP,EAAW2B,SAAX,EAAsBmC,aAAtB,EAAqC7C,OAArC,CApBnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBApHF,EA0IGrB,MAAM,KAAK8C,KAAK,CAACP,OAAjB,iBACC;AAAA,sCACE,QAAC,kBAAD;AACE,gBAAA,OAAO,EAAE,MAAMb,cAAc,CAAC,CAACD,WAAF,CAD/B;AAEE,gBAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE,QAAC,YAAD;AACE,gBAAA,OAAO,EAAEN,eADX;AAEE,gBAAA,UAAU,EAAEC,kBAFd;AAGE,gBAAA,KAAK,EAAE0B;AAHT;AAAA;AAAA;AAAA;AAAA,sBALF,EAUGrB,WAAW,iBACV;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACE;AACE,kBAAA,SAAS,EAAG,GAAEqB,KAAK,CAAC1C,EAAG,qBADzB;AAEE,kBAAA,OAAO,EAAEmD,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAOE;AAAQ,kBAAA,OAAO,EAAE,MAAMgB,UAAU,CAACzB,KAAK,CAAC1C,EAAP,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF,eASE;AAAQ,kBAAA,OAAO,EAAE,MAAMsB,cAAc,CAAC,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3IJ;AAAA,aAA0C,GAAEoB,KAAK,CAAC1C,EAAG,EAArD;AAAA;AAAA;AAAA;AAAA,kBADkB;AAAA,SAAnB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eA+KE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEuB;AAAhB;AAAA;AAAA;AAAA;AAAA,YA/KF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmLD;;GAjVQ5B,Q;UACQvB,W,EACCC,U,EACCF,W,EACFC,W,EACEA,W,EACEA,W,EAILA,W;;;KAVPuB,Q;AAmVT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getImages, deleteOneImage, getUserImages } from \"../../store/image\";\nimport { getFollowers, getFollowings } from \"../../store/follow\";\nimport {\n  getComments,\n  createComment,\n  editOneComment,\n  deleteOneComment,\n} from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\";\nimport EditFormPage from \"../EditFormPage\";\nimport ImagePage from \"../ImagePage\";\nimport NavBar from \"../Navbar\";\nimport {\n  UserCircleIcon,\n  HeartIcon,\n  ChatIcon,\n  DotsHorizontalIcon,\n} from \"@heroicons/react/outline\";\nimport { HeartIcon as HeartIconFilled } from \"@heroicons/react/solid\";\nimport SideBar from \"../SideBar\";\n\nfunction HomePage() {\n  const userId = useSelector((state) => state.session.user.id);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const images = useSelector((state) => state.images);\n  const comments = useSelector((state) => state.comments);\n  const followings = useSelector((state) =>\n    Object.values(state.follows.followings || {})\n  );\n  const imagesArr = Object.values(images);\n  const likes = useSelector((state) => state.likes);\n  const likesArr = Object.values(likes);\n  const keys = Object.keys(likes);\n  const [imageButtonPopup, setImageButtonPopup] = useState(0);\n  const [editButtonPopup, setEditButtonPopup] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [commentShow, setCommentShow] = useState(0);\n  const [showOptions, setShowOptions] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [commentId, setCommentId] = useState(-2);\n  const commentsArray = Object.values(comments);\n  const body = document.body;\n  const likedImages = likesArr.filter((like) => like.user_id === userId);\n\n  const [editB, setEditB] = useState(false);\n\n  const followedImages = [];\n\n  for (let i = 0; i < followings.length; i++) {\n    const user = followings[i];\n    for (let j = 0; j < imagesArr.length; j++) {\n      const image = imagesArr[j];\n      if (user.id === image.user_id) followedImages.push(image);\n    }\n  }\n\n  console.log(\"THIS IS THE FOLLOWED IMAGES => \", followedImages);\n\n  useEffect(() => {\n    dispatch(getImages());\n    dispatch(getTheLikes());\n    dispatch(getComments());\n    dispatch(getFollowings(userId));\n    async function fetchData() {\n      const response = await fetch(\"/api/users/\");\n      const responseData = await response.json();\n      setUsers(responseData.users);\n    }\n    fetchData();\n  }, [dispatch, userId]);\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    dispatch(deleteOneImage(images[e.target.className.split(\" \")[0]]));\n  };\n\n  const handleLike = (e) => {\n    e.preventDefault();\n    const image_id = e.target.className.split(\" \")[1];\n\n    if (\n      keys.filter(\n        (key) =>\n          likes[key].image_id === +image_id && likes[key].user_id === userId\n      ).length\n    ) {\n      dispatch(unOneLike(image_id));\n    } else dispatch(setOneLike(image_id));\n  };\n\n  const onContentSubmit = async (e) => {\n    e.preventDefault();\n    if (e.target.value) {\n      await dispatch(createComment(e.target.className, e.target.value));\n      setContent(\"\");\n    } else {\n      await dispatch(createComment(e.target.className, e.target[\"0\"].value));\n      e.target[\"0\"].value = \"\";\n    }\n  };\n\n  const onEditComment = async (e) => {\n    e.preventDefault();\n    setCommentShow(0);\n    const str = e.target.className.split(\":\");\n    const image_id = str[0];\n    const comment_id = str[1];\n    if (content) {\n      await dispatch(editOneComment(+image_id, +comment_id, content));\n      setContent(\"\");\n    } else {\n      await dispatch(\n        editOneComment(+image_id, +comment_id, e.target[\"0\"].value)\n      );\n      e.target[\"0\"].value = \"\";\n      setEditB(false);\n    }\n  };\n\n  const onDeleteComment = async (image_id, comment_id, setContentB = null) => {\n    if (setContentB) setContentB(\"\");\n    await dispatch(deleteOneComment(image_id, comment_id));\n  };\n\n  const handleEdit = (imageId) => {\n    setEditButtonPopup(imageId);\n    setShowOptions(false);\n  };\n\n  const postCommentForm = (image_id, submitFn, content) => {\n    return (\n      <form id=\"form-comment-con\" className={image_id} onSubmit={submitFn}>\n        <input\n          required=\"true\"\n          className={`input-comment`}\n          name=\"CommentAutoFocus\"\n          placeholder=\"Comment\"\n          value={content}\n          onChange={(e) => {\n            if (image_id === e.target.className.split(\"-\")[2]) {\n              setContent(e.target.value);\n            }\n          }}\n        />\n        <button className=\"comment-submit-button\">Post</button>\n      </form>\n    );\n  };\n\n  const editCommentForm = (image_id, commentId, editFn, content) => (\n    <form\n      className={`${image_id}:${commentId}`}\n      onSubmit={editFn} // onEditComment\n    >\n      <input\n        autoFocus\n        placeholder=\"Edit\"\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n      />\n      <button>submit edit</button>\n    </form>\n  );\n\n  const getUser = (userId) => users.filter((user) => user.id === userId)[0];\n\n  const checkIfLiked = (imageId) => {\n    for (let i = 0; i < likedImages.length; i++) {\n      if (+likedImages[i].image_id === +imageId) return true;\n    }\n    return false;\n  };\n\n  const canEditComment = (comment) => {\n    return \"editCom\".concat(String(comment.user_id === userId).toUpperCase());\n  };\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"games-page-body\">\n        <ul className=\"game-post-container\">\n          {followedImages.map((image, i) => (\n            <div className=\"ind-post-container\" key={`${image.id}`}>\n              <div className=\"game-post-header\">\n                <UserCircleIcon\n                  className=\"game-post-avatar\"\n                  onClick={(event) => history.push(`/users/${image.user_id}`)}\n                />\n                <li>{getUser(image.user_id)?.username}</li>\n              </div>\n              <li>\n                <img\n                  className=\"game-post-image\"\n                  src={`${image.url}`}\n                  alt=\"user-upload\"\n                  onClick={(event) => {\n                    setImageButtonPopup(image.id);\n                    body.style.overflow = \"hidden\";\n                  }}\n                ></img>\n                <ImagePage\n                  trigger={imageButtonPopup}\n                  setTrigger={setImageButtonPopup}\n                  image={image}\n                  commentsArray={commentsArray}\n                  comments={comments}\n                  users={users}\n                  content={content}\n                  //new props\n                  edit={edit}\n                  onContentSubmit={onContentSubmit}\n                  postCommentForm={postCommentForm}\n                  editCommentForm={editCommentForm}\n                  onEditComment={onEditComment}\n                  onDeleteComment={onDeleteComment}\n                  canEditComment={canEditComment}\n                  editB={editB}\n                  setEditB={setEditB}\n                  handleDelete={handleDelete}\n                />\n              </li>\n              <div className=\"post-footer-icon-container\">\n                <div\n                  className={`like-div ${image.id}`}\n                  onClick={handleLike}\n                ></div>\n                {checkIfLiked(image.id) ? (\n                  <HeartIconFilled className=\"post-footer-icon liked-icon\" />\n                ) : (\n                  <HeartIcon className=\"post-footer-icon\" />\n                )}\n                <ChatIcon\n                  onClick={() => {\n                    setImageButtonPopup(image.id);\n                    body.style.overflow = \"hidden\";\n                  }}\n                  className=\"post-footer-icon\"\n                />\n              </div>\n              <li className=\"caption-container\">\n                <div className=\"caption-username\">\n                  {getUser(image.user_id)?.username}\n                </div>\n                <div className=\"caption\">{image.caption}</div>\n              </li>\n\n              {commentsArray\n                .filter((comment) => image.id === comment.image_id)\n                .slice(-2)\n                .map((comment) => {\n                  if (comment.image_id === image.id) {\n                    return (\n                      <div className=\"games-comment-container\">\n                        <div className=\"games-username\">\n                          {getUser(comment.user_id)?.username}\n                        </div>\n                        <div className=\"commentPDiv\">\n                          <p\n                            id={comment.id}\n                            className={canEditComment(comment)}\n                          >\n                            {comment.content}\n                            <button\n                              onClick={() => {\n                                setEdit(true);\n                                setCommentShow(image.id);\n                                setCommentId(comment.id);\n                                setContent(`${comments[comment.id].content}`);\n                              }}\n                            >\n                              Edit\n                            </button>\n                            <button\n                              onClick={() => {\n                                onDeleteComment(image.id, comment.id);\n                              }}\n                            >\n                              Delete\n                            </button>\n                          </p>\n                        </div>\n                      </div>\n                    );\n                  }\n                  return \"\";\n                })}\n              {commentsArray.filter((comment) => image.id === comment.image_id)\n                .length > 2 && (\n                <p\n                  className=\"games-view-comments\"\n                  onClick={() => {\n                    setImageButtonPopup(image.id);\n                    body.style.overflow = \"hidden\";\n                  }}\n                >\n                  View all comments...\n                </p>\n              )}\n              <div className=\"comment-container-div\">\n                <form\n                  id=\"form-comment-con\"\n                  className={image.id}\n                  onSubmit={onContentSubmit}\n                >\n                  <input\n                    required=\"true\"\n                    className={`input-comment`}\n                    name=\"CommentAutoFocus\"\n                    placeholder=\"Comment\"\n                    value={content}\n                    onChange={(e) => {\n                      setContent(e.target.value);\n                    }}\n                  />\n                  <button className=\"comment-submit-button\">Post</button>\n                </form>\n                {commentShow === image.id &&\n                  edit === true &&\n                  editCommentForm(image.id, commentId, onEditComment, content)}\n              </div>\n              {userId === image.user_id && (\n                <div>\n                  <DotsHorizontalIcon\n                    onClick={() => setShowOptions(!showOptions)}\n                    className=\"post-options-icon\"\n                  />\n                  <EditFormPage\n                    trigger={editButtonPopup}\n                    setTrigger={setEditButtonPopup}\n                    image={image}\n                  />\n                  {showOptions && (\n                    <div className=\"post-options\">\n                      <button\n                        className={`${image.id} post-option-delete`}\n                        onClick={handleDelete}\n                      >\n                        Delete\n                      </button>\n                      <button onClick={() => handleEdit(image.id)}>Edit</button>\n                      <button>Go to post</button>\n                      <button onClick={() => setShowOptions(false)}>\n                        Cancel\n                      </button>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n        </ul>\n      </div>\n      <SideBar users={users}/>\n    </div>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}