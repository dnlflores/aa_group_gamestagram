{"ast":null,"code":"var _jsxFileName = \"/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/imagesPage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImages, deleteOneImage } from \"../../store/image\";\nimport { getComments } from \"../../store/comment\";\nimport { createComment } from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\";\nimport EditFormPage from \"../EditFormPage\";\nimport ImagePage from \"../ImagePage\";\nimport NavBar from \"../Navbar\";\nimport { UserCircleIcon, HeartIcon, ChatIcon, DotsHorizontalIcon } from \"@heroicons/react/outline\";\nimport \"./imagesPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ImagesPage() {\n  _s();\n\n  const userId = useSelector(state => state.session.user.id);\n  const dispatch = useDispatch();\n  const images = useSelector(state => state.images);\n  const comments = useSelector(state => state.comments);\n  const imagesArr = Object.values(images);\n  const likes = useSelector(state => state.likes);\n  const keys = Object.keys(likes);\n  const [imageButtonPopup, setImageButtonPopup] = useState(0);\n  const [editButtonPopup, setEditButtonPopup] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [commentShow, setCommentShow] = useState(0);\n  const [showOptions, setShowOptions] = useState(false);\n  const [users, setUsers] = useState([]);\n  const commentsArray = Object.values(comments);\n  const body = document.body;\n  console.log(\"comment object values => \", Object.values(comments));\n  useEffect(() => {\n    dispatch(getImages());\n    dispatch(getTheLikes());\n    dispatch(getComments());\n\n    async function fetchData() {\n      const response = await fetch(\"/api/users/\");\n      const responseData = await response.json();\n      setUsers(responseData.users);\n    }\n\n    fetchData();\n  }, [dispatch]);\n\n  const handleDelete = e => {\n    e.preventDefault(); // console.log(\"event target value => \", e.target.className.split(' ')[0])\n\n    dispatch(deleteOneImage(images[e.target.className.split(\" \")[0]]));\n  };\n\n  const handleLike = e => {\n    e.preventDefault();\n    console.log(\"this is the e.target\", e.target);\n    const image_id = e.target.className.split(\" \")[1];\n\n    if (keys.filter(key => likes[key].image_id === +image_id && likes[key].user_id === userId).length) {\n      dispatch(unOneLike(image_id));\n    } else dispatch(setOneLike(image_id));\n  };\n\n  const onContentSubmit = async e => {\n    e.preventDefault();\n    const comment = await dispatch(createComment(e.target.className, content));\n\n    if (comment) {\n      setContent(\"\");\n    }\n  };\n\n  const handleEdit = imageId => {\n    setEditButtonPopup(imageId);\n    setShowOptions(false);\n  };\n\n  const getUser = userId => users.filter(user => user.id === userId)[0];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"games-page-body\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"game-post-container\",\n        children: imagesArr.map(image => {\n          var _getUser, _getUser2;\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ind-post-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"game-post-header\",\n                children: [/*#__PURE__*/_jsxDEV(UserCircleIcon, {\n                  className: \"game-post-avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: (_getUser = getUser(image.user_id)) === null || _getUser === void 0 ? void 0 : _getUser.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"game-post-image\",\n                  src: `${image.url}`,\n                  alt: \"user-upload\",\n                  onClick: event => {\n                    setImageButtonPopup(image.id);\n                    body.style.backgroundColor = \"rgba(0, 0, 0, .7)\";\n                    body.style.overflow = \"hidden\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-footer-icon-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `like-div ${image.id}`,\n                  onClick: handleLike\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(HeartIcon, {\n                  className: \"post-footer-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ChatIcon, {\n                  onClick: () => setCommentShow(image.id),\n                  className: \"post-footer-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"caption-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"caption-username\",\n                  children: (_getUser2 = getUser(image.user_id)) === null || _getUser2 === void 0 ? void 0 : _getUser2.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"caption\",\n                  children: image.caption\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), commentsArray === null || commentsArray === void 0 ? void 0 : commentsArray.map(comment => {\n                if (comment.image_id === image.id) {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n                }\n\n                return \"\";\n              }), commentShow === image.id && /*#__PURE__*/_jsxDEV(\"form\", {\n                className: image.id,\n                onSubmit: onContentSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Comment\",\n                  value: content,\n                  onChange: e => setContent(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"comment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ImagePage, {\n                  trigger: imageButtonPopup,\n                  setTrigger: setImageButtonPopup,\n                  image: image,\n                  commentsArray: commentsArray,\n                  users: users\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), userId === image.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(DotsHorizontalIcon, {\n                  onClick: () => setShowOptions(!showOptions),\n                  className: \"post-options-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(EditFormPage, {\n                  trigger: editButtonPopup,\n                  setTrigger: setEditButtonPopup,\n                  image: image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this), showOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post-options\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `${image.id} post-option-delete`,\n                    onClick: handleDelete,\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleEdit(image.id),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    children: \"Go to post\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setShowOptions(false),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)]\n            }, `${image.id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImagesPage, \"/jFLfmy7BATiYchnbOf3MfeDhPc=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ImagesPage;\nexport default ImagesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesPage\");","map":{"version":3,"sources":["/Users/jaredburnett/Desktop/builds/aa_group_gamestagram/react-app/src/components/imagesPage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","getImages","deleteOneImage","getComments","createComment","getTheLikes","setOneLike","unOneLike","EditFormPage","ImagePage","NavBar","UserCircleIcon","HeartIcon","ChatIcon","DotsHorizontalIcon","ImagesPage","userId","state","session","user","id","dispatch","images","comments","imagesArr","Object","values","likes","keys","imageButtonPopup","setImageButtonPopup","editButtonPopup","setEditButtonPopup","content","setContent","commentShow","setCommentShow","showOptions","setShowOptions","users","setUsers","commentsArray","body","document","console","log","fetchData","response","fetch","responseData","json","handleDelete","e","preventDefault","target","className","split","handleLike","image_id","filter","key","user_id","length","onContentSubmit","comment","handleEdit","imageId","getUser","map","image","username","url","event","style","backgroundColor","overflow","caption","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImages, deleteOneImage } from \"../../store/image\";\nimport { getComments } from \"../../store/comment\";\nimport { createComment } from \"../../store/comment\";\nimport { getTheLikes, setOneLike, unOneLike } from \"../../store/likes\";\nimport EditFormPage from \"../EditFormPage\";\nimport ImagePage from \"../ImagePage\";\nimport NavBar from \"../Navbar\";\nimport {\n  UserCircleIcon,\n  HeartIcon,\n  ChatIcon,\n  DotsHorizontalIcon,\n} from \"@heroicons/react/outline\";\nimport \"./imagesPage.css\";\n\nfunction ImagesPage() {\n  const userId = useSelector((state) => state.session.user.id);\n\n  const dispatch = useDispatch();\n  const images = useSelector((state) => state.images);\n  const comments = useSelector((state) => state.comments);\n  const imagesArr = Object.values(images);\n  const likes = useSelector((state) => state.likes);\n  const keys = Object.keys(likes);\n  const [imageButtonPopup, setImageButtonPopup] = useState(0);\n  const [editButtonPopup, setEditButtonPopup] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [commentShow, setCommentShow] = useState(0);\n  const [showOptions, setShowOptions] = useState(false);\n  const [users, setUsers] = useState([]);\n  const commentsArray = Object.values(comments);\n\n  const body = document.body;\n\n  console.log(\"comment object values => \", Object.values(comments));\n\n  useEffect(() => {\n    dispatch(getImages());\n    dispatch(getTheLikes());\n    dispatch(getComments());\n    async function fetchData() {\n      const response = await fetch(\"/api/users/\");\n      const responseData = await response.json();\n      setUsers(responseData.users);\n    }\n    fetchData();\n  }, [dispatch]);\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    // console.log(\"event target value => \", e.target.className.split(' ')[0])\n    dispatch(deleteOneImage(images[e.target.className.split(\" \")[0]]));\n  };\n\n  const handleLike = (e) => {\n    e.preventDefault();\n    console.log(\"this is the e.target\", e.target);\n    const image_id = e.target.className.split(\" \")[1];\n\n    if (\n      keys.filter(\n        (key) =>\n          likes[key].image_id === +image_id && likes[key].user_id === userId\n      ).length\n    ) {\n      dispatch(unOneLike(image_id));\n    } else dispatch(setOneLike(image_id));\n  };\n\n  const onContentSubmit = async (e) => {\n    e.preventDefault();\n\n    const comment = await dispatch(createComment(e.target.className, content));\n\n    if (comment) {\n      setContent(\"\");\n    }\n  };\n\n  const handleEdit = (imageId) => {\n    setEditButtonPopup(imageId);\n    setShowOptions(false);\n  };\n  const getUser = (userId) => users.filter((user) => user.id === userId)[0];\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"games-page-body\">\n        <ul className=\"game-post-container\">\n          {imagesArr.map((image) => (\n            <>\n              <div className=\"ind-post-container\" key={`${image.id}`}>\n                <div className=\"game-post-header\">\n                  <UserCircleIcon className=\"game-post-avatar\" />\n                  <li>{getUser(image.user_id)?.username}</li>\n                </div>\n                <li>\n                  <img\n                    className=\"game-post-image\"\n                    src={`${image.url}`}\n                    alt=\"user-upload\"\n                    onClick={(event) => {\n                      setImageButtonPopup(image.id);\n                      body.style.backgroundColor = \"rgba(0, 0, 0, .7)\";\n                      body.style.overflow = \"hidden\";\n                    }}\n                  ></img>\n                </li>\n                <div className=\"post-footer-icon-container\">\n                  <div\n                    className={`like-div ${image.id}`}\n                    onClick={handleLike}\n                  ></div>\n                  <HeartIcon className=\"post-footer-icon\" />\n                  <ChatIcon\n                    onClick={() => setCommentShow(image.id)}\n                    className=\"post-footer-icon\"\n                  />\n                </div>\n                <li className=\"caption-container\">\n                  <div className=\"caption-username\">\n                    {getUser(image.user_id)?.username}\n                  </div>\n                  <div className=\"caption\">{image.caption}</div>\n                </li>\n                {commentsArray?.map((comment) => {\n                  if (comment.image_id === image.id) {\n                    return (\n                      <>\n                        {/* <h3>{getUser(comment.user_id)?.username}</h3>\n                      <p>{comment.content}</p> */}\n                      </>\n                    );\n                  }\n                  return \"\";\n                })}\n                {commentShow === image.id && (\n                  <form className={image.id} onSubmit={onContentSubmit}>\n                    <input\n                      placeholder=\"Comment\"\n                      value={content}\n                      onChange={(e) => setContent(e.target.value)}\n                    />\n                    <button>comment</button>\n                    <ImagePage\n                      trigger={imageButtonPopup}\n                      setTrigger={setImageButtonPopup}\n                      image={image}\n                      commentsArray={commentsArray}\n                      users={users}\n                    />\n                  </form>\n                )}\n                {userId === image.user_id && (\n                  <div>\n                    <DotsHorizontalIcon\n                      onClick={() => setShowOptions(!showOptions)}\n                      className=\"post-options-icon\"\n                    />\n                    <EditFormPage\n                      trigger={editButtonPopup}\n                      setTrigger={setEditButtonPopup}\n                      image={image}\n                    />\n                    {showOptions && (\n                      <div className=\"post-options\">\n                        <button\n                          className={`${image.id} post-option-delete`}\n                          onClick={handleDelete}\n                        >\n                          Delete\n                        </button>\n                        <button onClick={() => handleEdit(image.id)}>\n                          Edit\n                        </button>\n                        <button>Go to post</button>\n                        <button onClick={() => setShowOptions(false)}>\n                          Cancel\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n              <div className=\"test\">\n              </div>\n            </>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagesPage;\n"]},"metadata":{},"sourceType":"module"}